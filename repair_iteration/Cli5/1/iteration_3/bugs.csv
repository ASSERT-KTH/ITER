bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {	  while(str.startsWith(   "--   "))    {    	non-compiled	[CE]  	21	None	replace
2	[BUG]  [BUGGY]  aughtable  =  str.startsWith( "-   ")||  str.startsWith( "-   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( "-   ")||  str.startsWith( "-   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( "-   ")||  str.startsWith( "-   "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	32	None	replace
3	[BUG]  [BUGGY]  aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	32	None	replace
4	[BUG]  [BUGGY]  aughtable  =  str.startsWith( "-   ")||  str.startsWith( "-   "))  {  return  str.substring(0,  str.length());  [CE]  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( "-   ")||  str.startsWith( "-   "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( "-   ")||  str.startsWith( "-   "))  {  return  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	32	None	replace
5	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
6	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "* ")||  str.startsWith( "* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "* ")||  str.startsWith( "* "))  {	  if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	8	2	replace
7	[BUG]  [BUGGY]  if(str.startsWith( "* ")||  str.startsWith( "* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "* ")||  str.startsWith( "* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "* ")||  str.startsWith( "* "))  {	  if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	8	2	replace
8	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-))  {  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-))  {	  if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    	non-compiled	[CE]  unclosed  string  literal	8	None	replace
9	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(2,  str.length());  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(2,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  str  =  str.substring(2,  str.length());	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(2,    str.length());    	non-compiled	[CE]  	52	None	replace
10	[BUG]  [BUGGY]  while(str.startsWith( "-- "))  {  str  =  str.substring(2,  str.length());  [CE]  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-- "))  {  str  =  str.substring(2,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-- "))  {  str  =  str.substring(2,  str.length());	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(2,    str.length());    	non-compiled	[CE]  	52	None	replace
11	[BUG]  [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(2,  str.length());  [CE]  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(2,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-* "))  {  str  =  str.substring(2,  str.length());	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(2,    str.length());    	non-compiled	[CE]  	52	None	replace
12	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    	compilable	  [FE]  ComparisonFailure  	94	2	replace
13	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    	compilable	  [FE]  ComparisonFailure  	94	2	replace
14	[BUG]  [BUGGY]  aughtable  =  str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	37	None	replace
15	[BUG]  [BUGGY]  aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  [CE]  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	37	None	replace
16	[BUG]  [BUGGY]  aughtable  =  str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  [CE]  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	37	None	replace
17	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
18	[BUG]  [BUGGY]  while(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	82	None	replace
19	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
20	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  ||  str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  ||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    ||  str.startsWith( "- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
21	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
22	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  while(str.startsWith( "-   ")&&  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  while(str.startsWith( "-   ")&&  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    while(str.startsWith( "-   ")&&  str.startsWith( "-- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
23	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
24	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]            NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
25	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  [Delete]  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	[Delete]	  if(str.endsWith(       ".java       "))    {    if(str.startsWith(   ".java   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
26	[BUG]  [BUGGY]  ==  [Delete]  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  ==  [Delete]  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	==  [Delete]	  if(str.endsWith(       ".java       "))    {    if(str.startsWith(   ".java   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  >>  [Delete]  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  >>  [Delete]  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	>>  [Delete]	  if(str.endsWith(       ".java       "))    {    if(str.startsWith(   ".java   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
28	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( "/   ")&&  str.startsWith( "/   "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "/   ")&&  str.startsWith( "/   "))  {	  if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	90	2	replace
29	[BUG]  [BUGGY]  if(str.startsWith( "/   ")&&  str.startsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( "/   ")&&  str.startsWith( "/   "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "/   ")&&  str.startsWith( "/   "))  {	  if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	90	2	replace
30	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "--))  {	  if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	90	None	replace
31	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {	  if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	90	2	replace
32	[BUG]  [BUGGY]  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {	  if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	90	2	replace
33	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(2,    str.length());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
34	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(2,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(2,    str.length());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
35	[BUG]  [BUGGY]  whilst(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  [CE]  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  whilst(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	whilst(str.startsWith( "- "))  {  return  str.substring(0,  str.length());	  while(str.startsWith(   "-   "))    {    return    str.substring(2,    str.length());    	non-compiled	[CE]  	4	None	replace
36	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
37	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
38	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
39	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  ||  str.startsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  ||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    ||  str.startsWith( ".java "))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
40	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( ".* ")||  str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( ".* ")||  str.startsWith( ".* ")||  str.startsWith( ".* "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--)||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	64	2	replace
41	[BUG]  [BUGGY]  if(str.startsWith( ".* ")||  str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( ".* ")||  str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( ".* ")||  str.startsWith( ".* ")||  str.startsWith( ".* "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--)||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	64	2	replace
42	[BUG]  [BUGGY]  if(str.startsWith( "/   ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [CE]  unclosed  string  literal  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "/   ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "/   ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--)||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	64	None	replace
43	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  str);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  str);	  StaticBucketMap.this.stripLeadingHyphens    =    stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
44	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  str.length());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  str.length());	  StaticBucketMap.this.stripLeadingHyphens    =    stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
45	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  false);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  false);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  false);	  StaticBucketMap.this.stripLeadingHyphens    =    stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
46	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  	62	None	add
47	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
48	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
49	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {	  	non-compiled	[CE]  	62	None	add
50	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
51	[BUG]  [BUGGY]  String  str  =(str  >=  null)?  null  :  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  >=  null)?  null  :  str.substring(0,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(str  >=  null)?  null  :  str.substring(0,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
52	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java. ")||  str.startsWith( "java. "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "java. ")||  str.startsWith( "java. "))  {	  if(str.startsWith(   "java.   "))    {    	compilable	  [FE]  ComparisonFailure  	97	2	replace
53	[BUG]  [BUGGY]  if(str.startsWith( "java. ")||  str.startsWith( "java. "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java. ")||  str.startsWith( "java. "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "java. ")||  str.startsWith( "java. "))  {	  if(str.startsWith(   "java.   "))    {    	compilable	  [FE]  ComparisonFailure  	97	2	replace
54	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java. ")||  str.startsWith( "java.- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "java. ")||  str.startsWith( "java.- "))  {	  if(str.startsWith(   "java.   "))    {    	compilable	  [FE]  ComparisonFailure  	97	2	replace
55	[BUG]  [BUGGY]  if(str.startsWith( "java. ")||  str.startsWith( "java.- "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java. ")||  str.startsWith( "java.- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "java. ")||  str.startsWith( "java.- "))  {	  if(str.startsWith(   "java.   "))    {    	compilable	  [FE]  ComparisonFailure  	97	2	replace
56	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  else  if(str.startsWith( "java. "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  else  if(str.startsWith( "java. "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    else  if(str.startsWith( "java. "))  {	  	non-compiled	[CE]  	96	None	add
57	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
58	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  else  if(str.startsWith( ".java "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  else  if(str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    else  if(str.startsWith( ".java "))  {	  	non-compiled	[CE]  	96	None	add
59	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
60	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
61	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(2,  str.length());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(2,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(str  ==  null)?  null  :  str.substring(2,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
62	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(1,  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(1,  str.length()  +  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(str  ==  null)?  null  :  str.substring(1,  str.length()  +  1);	  String    str    =(str    ==    null)?    null    :    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
63	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens.size(),  this.stripLeadingHyphens.size());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens.size(),  this.stripLeadingHyphens.size());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens.size(),  this.stripLeadingHyphens.size());	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens.size());    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
64	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  this.stripLeadingHyphens.size());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  this.stripLeadingHyphens.size());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  this.stripLeadingHyphens.size());	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens.size());    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
65	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str,  this.stripLeadingHyphens.size()  -  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str,  this.stripLeadingHyphens.size()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(str,  this.stripLeadingHyphens.size()  -  1);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens.size());    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
66	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens.size()  -  1);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens.size()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens.size()  -  1);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens.size());    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
67	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- ")||  str.startsWith( "- "))  {	  while(str.startsWith(   "-   "))    {    	non-compiled	[CE]  	3	None	replace
68	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  1);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens().substring(0,  1);	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
69	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().substring(1);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().substring(1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens().substring(1);	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {	  	non-compiled	[CE]  	67	None	add
71	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
72	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
73	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
74	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  ||  str.startsWith( "-+ "))  {  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  ||  str.startsWith( "-+ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    ||  str.startsWith( "-+ "))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
75	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  false);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  false);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  Util.stripLeadingHyphens(str,  false);	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
76	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  true);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  true);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  Util.stripLeadingHyphens(str,  true);	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
77	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.length());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  Util.stripLeadingHyphens(str.length());	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
78	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    getStripLeadingHyphens();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
79	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  String  str  =  getStripLeadingHyphens();  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  String  str  =  getStripLeadingHyphens();  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "- "))  {  String  str  =  getStripLeadingHyphens();  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    getStripLeadingHyphens();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
80	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    getStripLeadingHyphens();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
81	[BUG]  [BUGGY]  while(str.startsWith( "-- "))  {  str  =  str.substring(1,  str.length());  [CE]  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-- "))  {  str  =  str.substring(1,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-- "))  {  str  =  str.substring(1,  str.length());	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  	51	None	replace
82	[BUG]  [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(1,  str.length());  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(1,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-* "))  {  str  =  str.substring(1,  str.length());	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  	51	None	replace
83	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(false,  false);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(false,  false);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens(false,  false);	  String    str    =    getStripLeadingHyphens(true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
84	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(false,  true);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(false,  true);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens(false,  true);	  String    str    =    getStripLeadingHyphens(true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
85	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }	  }    else    if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
86	[BUG]  [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  	47	None	replace
87	[BUG]  [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	else  if(str.startsWith( "-- ")||  str.startsWith( "--))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  	47	None	replace
88	[BUG]  [BUGGY]  parent.startsWith( "-- ")||  str.startsWith( "--   "))  {  [CE]  not  a  statement  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  parent.startsWith( "-- ")||  str.startsWith( "--   "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	parent.startsWith( "-- ")||  str.startsWith( "--   "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  not  a  statement	47	None	replace
89	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  	47	None	replace
90	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {	  if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	61	None	replace
91	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [CE]  unclosed  string  literal  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {	  if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	61	None	replace
92	[BUG]  [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  str.substring(0,  str.length()  -  1);	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
93	[BUG]  [BUGGY]  nisipToLastChar(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastChar(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	nisipToLastChar(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	81	None	replace
94	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java ")||  str.startsWith( "java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "java ")||  str.startsWith( "java "))  {	  if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	92	2	replace
95	[BUG]  [BUGGY]  if(str.startsWith( "java ")||  str.startsWith( "java "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java ")||  str.startsWith( "java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "java ")||  str.startsWith( "java "))  {	  if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	92	2	replace
96	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "./ ")||  str.startsWith( "./ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "./ ")||  str.startsWith( "./ "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
97	[BUG]  [BUGGY]  if(str.startsWith( "./ ")||  str.startsWith( "./ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "./ ")||  str.startsWith( "./ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "./ ")||  str.startsWith( "./ "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
98	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "/ ")||  str.startsWith( ".* "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
99	[BUG]  [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "/ ")||  str.startsWith( ".* "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
100	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "/ ")||  str.startsWith( "- "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
101	[BUG]  [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "/ ")||  str.startsWith( "- "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
102	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
103	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
104	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
105	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length()  -  3);	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
106	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  return  str.substring(2,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
107	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "/ "))  {	  if(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
108	[BUG]  [BUGGY]  if(str.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "/ "))  {	  if(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
109	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(0,  str.length());  }	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
110	[BUG]  [BUGGY]  while(str.startsWith( "-   ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(0,  str.length());  }	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
111	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "java/ "))  {	  if(str.startsWith(   "java   "))    {    	compilable	  [FE]  ComparisonFailure  	45	2	replace
112	[BUG]  [BUGGY]  if(str.startsWith( "java/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "java/ "))  {	  if(str.startsWith(   "java   "))    {    	compilable	  [FE]  ComparisonFailure  	45	2	replace
113	[BUG]  [BUGGY]  aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	39	None	replace
114	[BUG]  [BUGGY]  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  ||  str.startsWith( ".* "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  ||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  ||  str.startsWith( ".* "))  {	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    ||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
115	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  ||  str.startsWith( ".- "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  ||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    ||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
116	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
117	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  ||  str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  ||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    ||  str.startsWith( "- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
118	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
119	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
120	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }	  }    else    if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    return    str.substring(2,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
121	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "--))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    if(str.startsWith(   "--   ")||    str.startsWith(   "--))    {    	non-compiled	[CE]  unclosed  string  literal	70	None	replace
122	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(2,  str.length());  }	  }    else    if(str.startsWith(   "-   "))    {    return    str.substring(2,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
123	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)  ==  '-')  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)  ==  '-')  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)  ==  '-')  {  return  str.substring(2,  str.length());  }	  }    else    if(str.startsWith(   "-   "))    {    return    str.substring(2,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
124	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  }	  }    else    if(str.startsWith(   "-   "))    {    return    str.substring(2,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
125	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }	  }    else    if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    return    str.substring(1,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
126	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.endsWith( "- ")||  str.startsWith( "- "))  {	  if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	57	2	replace
127	[BUG]  [BUGGY]  if(str.endsWith( "- ")||  str.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith( "- ")||  str.startsWith( "- "))  {	  if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	57	2	replace
128	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
129	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  	60	None	add
130	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  ||  str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  ||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    ||  str.startsWith( "- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
131	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
132	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  [FE]            NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {	  	non-compiled	[CE]  	60	None	add
133	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/   ")||  str.startsWith( "/   ")||  str.startsWith( "/   "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "/   ")||  str.startsWith( "/   ")||  str.startsWith( "/   "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
134	[BUG]  [BUGGY]  if(str.startsWith( "/   ")||  str.startsWith( "/   ")||  str.startsWith( "/   "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/   ")||  str.startsWith( "/   ")||  str.startsWith( "/   "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "/   ")||  str.startsWith( "/   ")||  str.startsWith( "/   "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
135	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "0 ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	63	2	replace
136	[BUG]  [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [FE]  NullPointerException  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "0 ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "0 ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	63	2	replace
137	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [CE]  unclosed  string  literal  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	63	None	replace
138	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(string  -  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(string  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(string  -  1);	  String    str    =(String)this.stripLeadingHyphens.get(string);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
139	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(string  +  1);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(string  +  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(string  +  1);	  String    str    =(String)this.stripLeadingHyphens.get(string);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
140	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  str.length());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens(str,  str.length());	  StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
141	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  str);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens(str,  str);	  StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
142	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  false);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  false);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens(str,  false);	  StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
143	[BUG]  [BUGGY]  if(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }	  }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
144	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.substring(0,  str.length()  -  1);	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
145	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	17	None	replace
146	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
147	[BUG]  [BUGGY]  aughtable  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.substring(0,  str.length()  -  1);	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
148	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(String.class,  str.length());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(String.class,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens(String.class,  str.length());	  String    str    =    getStripLeadingHyphens(String.class);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
149	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(StripLeadingHyphen.class);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(StripLeadingHyphen.class);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens(StripLeadingHyphen.class);	  String    str    =    getStripLeadingHyphens(String.class);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
150	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(String.class,  null);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(String.class,  null);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens(String.class,  null);	  String    str    =    getStripLeadingHyphens(String.class);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
151	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(1,  str.length());  [CE]  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(1,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(1,  str.length());	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  	95	None	replace
152	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(2,  str.length());  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(2,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(2,  str.length());	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  	95	None	replace
153	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(1,  str.length());  [CE]  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(1,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(1,  str.length());	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  	95	None	replace
154	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  3);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  3);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  3);	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    3);    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
155	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
156	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	7	None	add
157	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
158	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
159	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	42	None	add
160	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
161	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  return  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    return  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
162	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  return  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  return  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    return  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
163	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
164	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key,  this.stripLeadingHyphens.size());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key,  this.stripLeadingHyphens.size());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(key,  this.stripLeadingHyphens.size());	  String    str    =(String)this.stripLeadingHyphens.get(key);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
165	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key,  this.stripLeadingHyphens.length);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key,  this.stripLeadingHyphens.length);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(key,  this.stripLeadingHyphens.length);	  String    str    =(String)this.stripLeadingHyphens.get(key);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
166	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key  -  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(key  -  1);	  String    str    =(String)this.stripLeadingHyphens.get(key);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
167	[BUG]  [BUGGY]  }  else  if(str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }	  }    else    if(str.startsWith(   "--   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
168	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(1);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(1);	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
169	[BUG]  [BUGGY]  String  str  =(StripLeadingHyphen)this.stripLeadingHyphens.get(0);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(StripLeadingHyphen)this.stripLeadingHyphens.get(0);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(StripLeadingHyphen)this.stripLeadingHyphens.get(0);	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
170	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.remove(0);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.remove(0);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.remove(0);	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
171	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "-n ")||  str.startsWith( "-n "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "-n ")||  str.startsWith( "-n "))  {	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    if(str.startsWith(   "-       ")||    str.startsWith(   "-       "))    {    	compilable	  [FE]  ComparisonFailure  	59	2	replace
172	[BUG]  [BUGGY]  if(str.startsWith( "-n ")||  str.startsWith( "-n "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "-n ")||  str.startsWith( "-n "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-n ")||  str.startsWith( "-n "))  {	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    if(str.startsWith(   "-       ")||    str.startsWith(   "-       "))    {    	compilable	  [FE]  ComparisonFailure  	59	2	replace
173	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  >  1)  {  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  >  1)  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.length()  >  1)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	non-compiled	[CE]  	66	None	replace
174	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  0)  {  [CE]  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  0)  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.length()  ==  0)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	non-compiled	[CE]  	66	None	replace
175	[BUG]  [BUGGY]  while(str.startsWith( "-   ")||  str.length()  >  0)  {  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")||  str.length()  >  0)  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")||  str.length()  >  0)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	non-compiled	[CE]  	66	None	replace
176	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(i  -  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(i  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(i  -  1);	  String    str    =(String)this.stripLeadingHyphens.get(i);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
177	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(i  +  1);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(i  +  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(i  +  1);	  String    str    =(String)this.stripLeadingHyphens.get(i);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
178	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(ch  -  1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(ch  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(ch  -  1);	  String    str    =(String)this.stripLeadingHyphens.get(ch);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
179	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(ch  +  1);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(ch  +  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(ch  +  1);	  String    str    =(String)this.stripLeadingHyphens.get(ch);    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
180	[BUG]  [BUGGY]  aughtables.add(str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtables.add(str.substring(0,  str.length()));  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtables.add(str.substring(0,  str.length()));	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
181	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)!=  '.';  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)!=  '.';  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)!=  '.';	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
182	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  '.';  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  '.';  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  '.';	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
183	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
184	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	11	None	add
185	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
186	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
187	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	11	None	add
188	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(str  ==  null)?  null  :  str.substring(0,  str.length()  -  1);	  String    str    =(str!=    null)?    null    :    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
189	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(0,  str.length());  [CE]  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(0,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.length()  ==  '-')  {  str  =  str.substring(0,  str.length());	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	84	None	replace
190	[BUG]  [BUGGY]  while(str.startsWith( "-   ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(0,  str.length());  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(0,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")||  str.charAt(0)  ==  '-')  {  str  =  str.substring(0,  str.length());	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	84	None	replace
191	[BUG]  [BUGGY]  bucket(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [CE]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  bucket(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	bucket(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }	  if(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  	58	None	replace
192	[BUG]  [BUGGY]  bucket  <  str.length()  &&  str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [CE]  >  expected  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  bucket  <  str.length()  &&  str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	bucket  <  str.length()  &&  str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }	  if(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  >  expected	58	None	replace
193	[BUG]  [BUGGY]  bucket.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  bucket.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	bucket.startsWith( "- "))  {  return  str.substring(0,  str.length());  }	  if(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  	58	None	replace
194	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  this.stripLeadingHyphens);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  this.stripLeadingHyphens);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  this.stripLeadingHyphens);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
195	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  str);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  str);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens,  str);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
196	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripRaw,  this.stripLeadingHyphens);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripRaw,  this.stripLeadingHyphens);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripRaw,  this.stripLeadingHyphens);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
197	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripRight,  this.stripLeadingHyphens);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripRight,  this.stripLeadingHyphens);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripRight,  this.stripLeadingHyphens);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
198	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  false);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  false);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens( "- ",  false);	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
199	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "- ").trim();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "- ").trim();  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens( "- ").trim();	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
200	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( ".java "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    else  if(str.startsWith( ".java "))  {	  	non-compiled	[CE]  	40	None	add
201	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
202	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
203	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
204	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( "java "))  {  [CE]  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( "java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    else  if(str.startsWith( "java "))  {	  	non-compiled	[CE]  	40	None	add
205	[BUG]  [BUGGY]  !=  [Delete]  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  !=  [Delete]  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	!=  [Delete]	  if(str.endsWith(       ".java       "))    {    if(str.endsWith(   ".java   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
206	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  	50	None	replace
207	[BUG]  [BUGGY]  aughtable  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
208	[BUG]  [BUGGY]  nisipr.startsWith( "- ")|  nisipr.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  nisipr.startsWith( "- ")|  nisipr.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	nisipr.startsWith( "- ")|  nisipr.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  not  a  statement	88	None	replace
209	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str);  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler.handleMissingHyphens(str);	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
210	[BUG]  [BUGGY]  nisipr.startsWith( "- ")|  nisipr.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  }  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  nisipr.startsWith( "- ")|  nisipr.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	nisipr.startsWith( "- ")|  nisipr.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  }	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  not  a  statement	88	None	replace
211	[BUG]  [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(0,  str.length());  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(0,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-* "))  {  str  =  str.substring(0,  str.length());	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	83	None	replace
212	[BUG]  [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length()  -  1);	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	83	None	replace
213	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( "java "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( "java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    else  if(str.startsWith( "java "))  {	  	non-compiled	[CE]  	44	None	add
214	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
215	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( ".java "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    else  if(str.startsWith( ".java "))  {	  	non-compiled	[CE]  	44	None	add
216	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
217	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
218	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
219	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "/   ")||  str.startsWith( "/   "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "/   ")||  str.startsWith( "/   "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    else  if(str.startsWith( "/   ")||  str.startsWith( "/   "))  {	  	non-compiled	[CE]  	9	None	add
220	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  ||  str.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  ||  str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    ||  str.startsWith( "/ "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
221	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
222	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]            ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
223	[BUG]  [BUGGY]  char  str  =  getStripLeadingHyphens(false);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  str  =  getStripLeadingHyphens(false);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	char  str  =  getStripLeadingHyphens(false);	  String    str    =    getStripLeadingHyphens(false);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
224	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  if(str.startsWith( "/ ")||  str.startsWith( "/ "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  if(str.startsWith( "/ ")||  str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    if(str.startsWith( "/ ")||  str.startsWith( "/ "))  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
225	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  return  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    return  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
226	[BUG]  [BUGGY]  aught  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aught  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aught  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	31	None	replace
227	[BUG]  [BUGGY]  aughtExceptionHandler(this,  str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler(this,  str.substring(0,  str.length()));  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler(this,  str.substring(0,  str.length()));	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
228	[BUG]  [BUGGY]  aught  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  aught  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aught  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length()  -  1);	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	31	None	replace
229	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( ".java ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( ".java ")||  str.startsWith( "- "))  {	  if(str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	41	2	replace
230	[BUG]  [BUGGY]  if(str.startsWith( ".java ")||  str.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( ".java ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( ".java ")||  str.startsWith( "- "))  {	  if(str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	41	2	replace
231	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( "--))  {  [CE]  unexpected  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( "--))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    if(str.startsWith(   "--   ")||    str.startsWith(   "--))    {    	non-compiled	[CE]  unexpected  type	70	None	replace
232	[BUG]  [BUGGY]  aughtExceptionHandler(this,  str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler(this,  str.substring(0,  str.length()  -  1));  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler(this,  str.substring(0,  str.length()  -  1));	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
233	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMalformedException( " ");  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler.handleMalformedException( " ");	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
234	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    ||    str.startsWith(   "-   "))    {    	compilable	  [FE]  NullPointerException  	46	2	replace
235	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [FE]  NullPointerException  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    ||    str.startsWith(   "-   "))    {    	compilable	  [FE]  NullPointerException  	46	2	replace
236	[BUG]  [BUGGY]  return  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  return  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	return  str.substring(0,  str.length()  -  1);	  }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
237	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt  [CE]  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    3);    	non-compiled	[CE]  	74	None	replace
238	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    3);    	non-compiled	[CE]  	74	None	replace
239	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt(str.length()  -  1)  ==  'a'  [CE]  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt(str.length()  -  1)  ==  'a'  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  'a'  &&  str.charAt(str.length()  -  1)  ==  'a'	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    3);    	non-compiled	[CE]  	74	None	replace
240	[BUG]  [BUGGY]  >>  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  >>  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	>>	  if(str.endsWith(       ".java       "))    {    if(str.endsWith(   ".java   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
241	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  str.substring(3,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  str.substring(3,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  str.substring(3,  str.length());  }	  }    else    if(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
242	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(3,  str.length());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(3,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(str  ==  null)?  null  :  str.substring(3,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
243	[BUG]  [BUGGY]  aught  ||  str.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  [CE]  not  a  statement  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aught  ||  str.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aught  ||  str.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  not  a  statement	88	None	replace
244	[BUG]  [BUGGY]  aught  ||  str.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  }  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  aught  ||  str.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aught  ||  str.startsWith( "-- "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  }	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  not  a  statement	88	None	replace
245	[BUG]  [BUGGY]  aught  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aught  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aught  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  not  a  statement	39	None	replace
246	[BUG]  [BUGGY]  while(str.startsWith( ".- "))  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( ".- "))  {  return  str.substring(0,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(2,    str.length());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
247	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( ".-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
248	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( ".-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
249	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
250	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
251	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  [CE]  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	84	None	replace
252	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  str  =  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  str  =  str.substring(1,  str.length());  }	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
253	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
254	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	91	None	add
255	[BUG]  [BUGGY]  aughtException( " "))  {  return  str.substring(0,  str.length());  }  [CE]  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtException( " "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtException( " "))  {  return  str.substring(0,  str.length());  }	  if(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  	58	None	replace
256	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(str);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler.handleMissingName(str);	  if(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
257	[BUG]  [BUGGY]  String  str  =(this.stripLeadingHyphens!=  null)?  null  :  this.stripLeadingHyphens.get(0);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(this.stripLeadingHyphens!=  null)?  null  :  this.stripLeadingHyphens.get(0);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(this.stripLeadingHyphens!=  null)?  null  :  this.stripLeadingHyphens.get(0);	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
258	[BUG]  [BUGGY]  String  str  =(this.stripLeadingHyphens!=  null)?  null  :  this.stripLeadingHyphens.get(1);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(this.stripLeadingHyphens!=  null)?  null  :  this.stripLeadingHyphens.get(1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(this.stripLeadingHyphens!=  null)?  null  :  this.stripLeadingHyphens.get(1);	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
259	[BUG]  [BUGGY]  nisipToLastChar(str.startsWith( "-- ")||  nisipToLastChar(str.startsWith( "-- ")))  {  String  str  =  getStripLeadingHyphens();  [CE]  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  nisipToLastChar(str.startsWith( "-- ")||  nisipToLastChar(str.startsWith( "-- ")))  {  String  str  =  getStripLeadingHyphens();  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	nisipToLastChar(str.startsWith( "-- ")||  nisipToLastChar(str.startsWith( "-- ")))  {  String  str  =  getStripLeadingHyphens();	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    getStripLeadingHyphens();    	non-compiled	[CE]  	73	None	replace
260	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    	compilable	  [FE]  ComparisonFailure  	68	2	replace
261	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "-+ ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    	compilable	  [FE]  ComparisonFailure  	68	2	replace
262	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( "/ ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "/ ")||  str.startsWith( "/ ")||  str.startsWith( "- "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
263	[BUG]  [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( "/ ")||  str.startsWith( "- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "/ ")||  str.startsWith( "/ ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "/ ")||  str.startsWith( "/ ")||  str.startsWith( "- "))  {	  if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    	compilable	  [FE]  ComparisonFailure  	10	2	replace
264	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
265	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
266	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  return  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    return  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
267	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
268	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
269	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( ".- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	90	2	replace
270	[BUG]  [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( "-- "))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( ".- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( ".- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	90	2	replace
271	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().toString();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().toString();  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens().toString();	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
272	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  1).trim();  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  1).trim();  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens().substring(0,  1).trim();	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
273	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( ".* "))  {	  if(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
274	[BUG]  [BUGGY]  if(str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( ".* "))  {	  if(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	43	2	replace
275	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  null);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  null);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  Util.stripLeadingHyphens(str,  null);	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
276	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
277	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {	  	non-compiled	[CE]  unclosed  string  literal	62	None	add
278	[BUG]  [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }	  }    else    if(str.startsWith(   "--   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
279	[BUG]  [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(2,  str.length());  }	  }    else    if(str.startsWith(   "--   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
280	[BUG]  [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }	  }    else    if(str.startsWith(   "--   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
281	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(0,  str.length());  }	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
282	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ".- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    else  if(str.startsWith( ".- "))  {	  	non-compiled	[CE]  	42	None	add
283	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  return  str.substring(0,  str.length()  -  2);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  return  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    return  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
284	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {	  if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	61	None	replace
285	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( ".-- "))  {  [CE]  <identifier>  expected  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( ".-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( ".-- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--)||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  <identifier>  expected	64	None	replace
286	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  '/')  {  [CE]  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  '/')  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)  ==  '/')  {	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	20	None	replace
287	[BUG]  [BUGGY]  aught  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aught  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aught  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length()  -  1);	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	38	None	replace
288	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripLeadingHyphens);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
289	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  return  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    return  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
290	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {	  	non-compiled	[CE]  unclosed  string  literal	60	None	add
291	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [CE]  unclosed  string  literal  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")||  str.startsWith( "--)||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  unclosed  string  literal	60	None	add
292	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "--))  {	  	non-compiled	[CE]  unclosed  string  literal	60	None	add
293	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    if(str.startsWith( "-- ")||  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
294	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
295	[BUG]  [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
296	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)!=  'n';  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)!=  'n';  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(str.length()  -  1)!=  'n';	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
297	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  return  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    return  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
298	[BUG]  [BUGGY]  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
299	[BUG]  [BUGGY]  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
300	[BUG]  [BUGGY]  while(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	83	None	replace
301	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  }	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
302	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  unclosed  string  literal  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "--))  {  String  str  =  str.substring(0,  str.length());  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  unclosed  string  literal	81	None	replace
303	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
304	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  return  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    return  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
305	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  return  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  return  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    return  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	44	None	add
306	[BUG]  [BUGGY]  while(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  while(str.startsWith(   "--   "))    {    	non-compiled	[CE]  	21	None	replace
307	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "--))  {  [CE]  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "--))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  	47	None	replace
308	[BUG]  [BUGGY]  whilst(str.startsWith( "- "))  {  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  whilst(str.startsWith( "- "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	whilst(str.startsWith( "- "))  {	  whilst(str.startsWith(   "-       "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	2	None	replace
309	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  return  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    return  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
310	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  return  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  return  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    return  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  illegal  start  of  expression	40	None	add
311	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key  +  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(key  +  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(key  +  1);	  String    str    =(String)this.stripLeadingHyphens.get(key);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
312	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  while(str.startsWith(   "-   "))    {    	non-compiled	[CE]  	3	None	replace
313	[BUG]  [BUGGY]  while(str.startsWith( ".* "))  {  [CE]  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( ".* "))  {	  while(str.startsWith(   "-   "))    {    	non-compiled	[CE]  	3	None	replace
314	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "-1 ");  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "-1 ");  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens( "-1 ");	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
315	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(String.class,  str);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(String.class,  str);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens(String.class,  str);	  String    str    =    getStripLeadingHyphens(String.class);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
316	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(String.valueOf('.'));  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(String.valueOf('.'));  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens(String.valueOf('.'));	  String    str    =    getStripLeadingHyphens(String.class);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
317	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
318	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
319	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  if(str.startsWith( "- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    if(str.startsWith( "- ")||  str.startsWith( "--))  {	  	non-compiled	[CE]  unclosed  string  literal	89	None	add
320	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str,  this.stripLeadingHyphens.size()  -  2);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str,  this.stripLeadingHyphens.size()  -  2);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(str,  this.stripLeadingHyphens.size()  -  2);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens.size());    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
321	[BUG]  [BUGGY]  String  str  =(str!=  null)?  null  :  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str!=  null)?  null  :  str.substring(0,  str.length()  -  1);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(str!=  null)?  null  :  str.substring(0,  str.length()  -  1);	  String    str    =(str!=    null)?    null    :    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
322	[BUG]  [BUGGY]  while(str.startsWith( ". "))  {  [CE]  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ". "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( ". "))  {	  while(str.startsWith(   "--   "))    {    	non-compiled	[CE]  	21	None	replace
323	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( ".* "))  {	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    if(str.startsWith(   "-       ")||    str.startsWith(   "-       "))    {    	compilable	  [FE]  ComparisonFailure  	59	2	replace
324	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( ".* "))  {	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    if(str.startsWith(   "-       ")||    str.startsWith(   "-       "))    {    	compilable	  [FE]  ComparisonFailure  	59	2	replace
325	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  }	  while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
326	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  str  =  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  str  =  str.substring(2,  str.length());  }	  while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
327	[BUG]  [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    if(str.startsWith( ". ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	93	None	add
328	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( "/ "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    	compilable	  [FE]  ComparisonFailure  	68	2	replace
329	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "/ "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    	compilable	  [FE]  ComparisonFailure  	68	2	replace
330	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  str  =  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  str  =  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  str  =  str.substring(2,  str.length());  }	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
331	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	9	None	add
332	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	9	None	add
333	[BUG]  [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "/ "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "/     ")||  str.startsWith(   "/     "))  {  else  if(str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "/       ")||    str.startsWith(   "/       "))    {    else  if(str.startsWith( "/ "))  {	  	non-compiled	[CE]  	9	None	add
334	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	}  else  if(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }	  }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
335	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  true);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens(str,  true);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens(str,  true);	  StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
336	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java/lang/Object "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "java/lang/Object "))  {	  if(str.startsWith(   "java   "))    {    	compilable	  [FE]  ComparisonFailure  	45	2	replace
337	[BUG]  [BUGGY]  if(str.startsWith( "java/lang/Object "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "java/lang/Object "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "java/lang/Object "))  {	  if(str.startsWith(   "java   "))    {    	compilable	  [FE]  ComparisonFailure  	45	2	replace
338	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  return  str.substring(0,  str.length());  [CE]  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  return  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	20	None	replace
339	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(0)  ==  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")&&  str.charAt(0)  ==  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")&&  str.charAt(0)  ==  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
340	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  return  str.substring(0,  str.length()  -  1);  [CE]  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  return  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  return  str.substring(0,  str.length()  -  1);	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  	20	None	replace
341	[BUG]  [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  true);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  true);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	StaticBucketMap.this.stripLeadingHyphens  =  stripLeadingHyphens(str,  true);	  StaticBucketMap.this.stripLeadingHyphens    =    stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
342	[BUG]  [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "--   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "--   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
343	[BUG]  [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	37	None	replace
344	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str,  str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str,  str.substring(0,  str.length()  -  1));  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler.handleMissingHyphens(str,  str.substring(0,  str.length()  -  1));	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
345	[BUG]  [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	37	None	replace
346	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( "java. "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( "java. "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    else  if(str.startsWith( "java. "))  {	  	non-compiled	[CE]  	40	None	add
347	[BUG]  [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( "java/lang/Object "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   "))  {  else  if(str.startsWith( "java/lang/Object "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   "))    {    else  if(str.startsWith( "java/lang/Object "))  {	  	non-compiled	[CE]  	40	None	add
348	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( ". ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	62	None	add
349	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	62	None	add
350	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {	  	non-compiled	[CE]  	7	None	add
351	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( "* ")||  str.startsWith( "* "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( "* ")||  str.startsWith( "* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    else  if(str.startsWith( "* ")||  str.startsWith( "* "))  {	  	non-compiled	[CE]  	7	None	add
352	[BUG]  [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".*   ")||  str.startsWith(   ".*   "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".*   ")||    str.startsWith(   ".*   "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	7	None	add
353	[BUG]  [BUGGY]  aught( "java.util.ArrayList "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aught( "java.util.ArrayList "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aught( "java.util.ArrayList "))  {  String  str  =  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	19	None	replace
354	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	19	None	replace
355	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  return  str.substring(0,  str.length());  [CE]  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  return  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  	19	None	replace
356	[BUG]  [BUGGY]  while(str.startsWith( ".* "))  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                          NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( ".* "))  {  return  str.substring(2,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
357	[BUG]  [BUGGY]  while(str.startsWith( ". "))  {  return  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ". "))  {  return  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( ". "))  {  return  str.substring(2,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
358	[BUG]  [BUGGY]  [Delete]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  [Delete]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	[Delete]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
359	[BUG]  [BUGGY]  [Delete]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  expression  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  [Delete]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	[Delete]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
360	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-   ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(1,  str.length());  }	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    '-')    {    str    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
361	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")||  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    3);    	non-compiled	[CE]  	74	None	replace
362	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "+ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( "+ "))  {	  if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	92	2	replace
363	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "+ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( "+ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( "+ "))  {	  if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    	compilable	  [FE]  ComparisonFailure  	92	2	replace
364	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	91	None	add
365	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {	  	non-compiled	[CE]  	91	None	add
366	[BUG]  [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	91	None	add
367	[BUG]  [BUGGY]  char  str  =  getStripLeadingHyphens(true);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  str  =  getStripLeadingHyphens(true);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	char  str  =  getStripLeadingHyphens(true);	  String    str    =    getStripLeadingHyphens(true);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
368	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ". "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ". "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    else  if(str.startsWith( ". "))  {	  	non-compiled	[CE]  	42	None	add
369	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ".* "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    else  if(str.startsWith( ".* "))  {	  	non-compiled	[CE]  	42	None	add
370	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ".prototype "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  else  if(str.startsWith( ".prototype "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    else  if(str.startsWith( ".prototype "))  {	  	non-compiled	[CE]  	42	None	add
371	[BUG]  [BUGGY]  if(str.startsWith(   "-   "))  {  }  else  if(str.startsWith( "- "))  {  [CE]  illegal  start  of  expression  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   "))  {  }  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   "))    {    }  else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  illegal  start  of  expression	42	None	add
372	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--)||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	64	2	replace
373	[BUG]  [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "- ")||  str.startsWith( ".- ")||  str.startsWith( ".- "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--)||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	64	2	replace
374	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  str);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  str);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens( "- ",  str);	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
375	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "/.* ");  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "/.* ");  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  getStripLeadingHyphens( "/.* ");	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
376	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }	  while(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
377	[BUG]  [BUGGY]  while(str.startsWith( ".java "))  {  [CE]  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".java "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( ".java "))  {	  while(str.startsWith(   ".-   "))    {    	non-compiled	[CE]  	22	None	replace
378	[BUG]  [BUGGY]  while(str.endsWith( ".java "))  {  [CE]  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.endsWith( ".java "))  {  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.endsWith( ".java "))  {	  while(str.startsWith(   ".-   "))    {    	non-compiled	[CE]  	22	None	replace
379	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  if(str.startsWith( "java. "))  {  [CE]  illegal  start  of  expression  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  if(str.startsWith( "java. "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    if(str.startsWith( "java. "))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
380	[BUG]  [BUGGY]  if(str.startsWith(   "java.   "))  {  if(str.startsWith( ".java "))  {  [CE]  illegal  start  of  expression  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java.   "))  {  if(str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java.   "))    {    if(str.startsWith( ".java "))  {	  	non-compiled	[CE]  illegal  start  of  expression	96	None	add
381	[BUG]  [BUGGY]  String  str  =(str  ==  null)? "null "  :  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  ==  null)? "null "  :  str.substring(0,  str.length());  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(str  ==  null)? "null "  :  str.substring(0,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
382	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str,  str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str,  str.substring(0,  str.length()));  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler.handleMissingHyphens(str,  str.substring(0,  str.length()));	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
383	[BUG]  [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()));  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler(str,  str.substring(0,  str.length()));  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler(str,  str.substring(0,  str.length()));	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
384	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	add	if(str.startsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
385	[BUG]  [BUGGY]  if(str.startsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( ".java ")||  str.startsWith( ".java ")||  str.startsWith( ".java "))  {	  if(str.startsWith(   "-   ")||    str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
386	[BUG]  [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  [CE]  not  a  statement  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  not  a  statement	38	None	replace
387	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
388	[BUG]  [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  not  a  statement  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	parent  ==  false  &&  str.startsWith( "- ")||  str.startsWith( "-   "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  not  a  statement	30	None	replace
389	[BUG]  [BUGGY]  while(str.startsWith( "*   "))  {  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "*   "))  {  str  =  str.substring(1,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "*   "))  {  str  =  str.substring(1,  str.length());  }	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
390	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	56	None	add
391	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	56	None	add
392	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.endsWith( ".java "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.endsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    else  if(str.endsWith( ".java "))  {	  	non-compiled	[CE]  	56	None	add
393	[BUG]  [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( ".java "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.endsWith(   ".java   ")||  str.startsWith(   ".java   "))  {  else  if(str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.endsWith(   ".java   ")||    str.startsWith(   ".java   "))    {    else  if(str.startsWith( ".java "))  {	  	non-compiled	[CE]  	56	None	add
394	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	11	None	add
395	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {	  	non-compiled	[CE]  	11	None	add
396	[BUG]  [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	11	None	add
397	[BUG]  [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  return  str.substring(0,  str.length());  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
398	[BUG]  [BUGGY]  char  str  =  getStripLeadingHyphens(String.class);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  str  =  getStripLeadingHyphens(String.class);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	char  str  =  getStripLeadingHyphens(String.class);	  String    str    =    getStripLeadingHyphens(String.class);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
399	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( "java. "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( "java. "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    else  if(str.startsWith( "java. "))  {	  	non-compiled	[CE]  	44	None	add
400	[BUG]  [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( "java/lang/Object "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "java   "))  {  else  if(str.startsWith( "java/lang/Object "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "java   "))    {    else  if(str.startsWith( "java/lang/Object "))  {	  	non-compiled	[CE]  	44	None	add
401	[BUG]  [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(2,  str.length());  }  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "-* "))  {  str  =  str.substring(2,  str.length());  }  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	while(str.startsWith( "-* "))  {  str  =  str.substring(2,  str.length());  }	  while(str.startsWith(   ".*   "))    {    str    =    str.substring(2,    str.length());    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
402	[BUG]  [BUGGY]  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  String  str  =  getStripLeadingHyphens();  }	  if(str.startsWith(       "--       ")||    str.startsWith(       "--       "))    {    String    str    =    getStripLeadingHyphens();    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
403	[BUG]  [BUGGY]  aughtable  =  str.startsWith( ".java ")&&  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.startsWith( ".java ")&&  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.startsWith( ".java ")&&  str.endsWith( ".java "))  {  String  str  =  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	17	None	replace
404	[BUG]  [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java "))  {  return  str.substring(0,  str.length());  [CE]  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java "))  {  return  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtable  =  str.endsWith( ".java ")||  str.startsWith( ".java "))  {  return  str.substring(0,  str.length());	  if(str.endsWith(       ".java       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	17	None	replace
405	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  [CE]  illegal  start  of  expression  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  StaticBucketMap.this.stripLeadingHyphens(str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    StaticBucketMap.this.stripLeadingHyphens(str);	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
406	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  StaticBucketMap.this.stripLeadingHyphens();  [CE]  illegal  start  of  expression  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  StaticBucketMap.this.stripLeadingHyphens();  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    StaticBucketMap.this.stripLeadingHyphens();	  	non-compiled	[CE]  illegal  start  of  expression	89	None	add
407	[BUG]  [BUGGY]  !=  [CE]  illegal  start  of  expression  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  !=  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	!=	  if(str.endsWith(       ".java       "))    {    if(str.endsWith(   ".java   "))    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
408	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripR,  this.stripLeadingHyphens);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(this.stripR,  this.stripLeadingHyphens);  [BUGGY]      if  (str.startsWith(     "--     "))  {  {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =(String)this.stripLeadingHyphens.get(this.stripR,  this.stripLeadingHyphens);	  String    str    =(String)this.stripLeadingHyphens.get(str,    this.stripLeadingHyphens);    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
409	[BUG]  [BUGGY]  aughtExceptionHandler.handleStripLeadingHyphens(str);  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleStripLeadingHyphens(str);  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	aughtExceptionHandler.handleStripLeadingHyphens(str);	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    StaticBucketMap.this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
410	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "-+ "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "-+ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    else  if(str.startsWith( "- ")&&  str.startsWith( "-+ "))  {	  	non-compiled	[CE]  	67	None	add
411	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	67	None	add
412	[BUG]  [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".+ "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  if(str.startsWith(   "-   ")||  str.startsWith(   "-+   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".+ "))  {  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	if(str.startsWith(   "-   ")||    str.startsWith(   "-+   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".+ "))  {	  	non-compiled	[CE]  	67	None	add
413	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.substring(1));  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.substring(1));  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	String  str  =  Util.stripLeadingHyphens(str.substring(1));	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
414	[BUG]  [BUGGY]  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  ||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	||  str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "-       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
415	[BUG]  [BUGGY]  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  expression  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  ||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(2,  str.length());  }  else  if  (str.startsWith(     "-     "))  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	1.0	36	37	2	replace	||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  if(str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
