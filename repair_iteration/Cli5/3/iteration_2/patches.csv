bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
2	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
3	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(1,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(1,  str.length());  }	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
4	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
5	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "/ "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
6	[BUG]  [BUGGY]  else  if(str.startsWith( "/ "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "/ "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "/ "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
7	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
8	[BUG]  [BUGGY]  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
9	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
10	[BUG]  [BUGGY]  else  if(str.startsWith( "* "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
11	[BUG]  [BUGGY]  String  str  =(str  >=  null)?  null  :  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  >=  null)?  null  :  str.substring(0,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(str  >=  null)?  null  :  str.substring(0,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(0,    str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
12	[BUG]  [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( ".* "))  {  str  =  str.substring(1,  str.length());  }	  while(str.startsWith(   ".   "))    {    str    =    str.substring(1,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
13	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }	  while(str.startsWith(   ".   "))    {    str    =    str.substring(1,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
14	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- "))  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "- "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
15	[BUG]  [BUGGY]  String  str  =(str  ==  null)?   "null "  :  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  ==  null)?   "null "  :  str.substring(0,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(str  ==  null)?   "null "  :  str.substring(0,  str.length());	  String    str    =(str    ==    null)?   "null   "    :    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
16	[BUG]  [BUGGY]  [Delete]  [CE]  illegal  start  of  expression  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  [Delete]  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	[Delete]	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
17	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingHyphens(str);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	aughtExceptionHandler.handleMissingHyphens(str);	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
18	[BUG]  [BUGGY]  aughtException.printStackTrace();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  aughtException.printStackTrace();  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	aughtException.printStackTrace();	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
19	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingHyphen(str);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingHyphen(str);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	aughtExceptionHandler.handleMissingHyphen(str);	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
20	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	37	None	add
21	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	37	None	add
22	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	37	None	add
23	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  	37	None	add
24	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
26	[BUG]  [BUGGY]  String  str  =  getRawStripStripLeadingHyphens();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getRawStripStripLeadingHyphens();  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getRawStripStripLeadingHyphens();	  String    str    =    getRawStripLeadingHyphens();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
27	[BUG]  [BUGGY]  String  str  =  getRawStripLeadingHyphens( "- ");  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getRawStripLeadingHyphens( "- ");  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getRawStripLeadingHyphens( "- ");	  String    str    =    getRawStripLeadingHyphens();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
28	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLeadingHyphens.length());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLeadingHyphens.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLeadingHyphens.length());	  String    str    =(String)this.stripLeadingHyphens.substring(0,    this.stripLeadingHyphens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
29	[BUG]  [BUGGY]  String  str  =(String)stripLeadingHyphens.substring(0,  this.stripLeadingHyphens.length());  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)stripLeadingHyphens.substring(0,  this.stripLeadingHyphens.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)stripLeadingHyphens.substring(0,  this.stripLeadingHyphens.length());	  String    str    =(String)this.stripLeadingHyphens.substring(0,    this.stripLeadingHyphens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
30	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyps.substring(0,  this.stripLeadingHyphens.length());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyps.substring(0,  this.stripLeadingHyphens.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyps.substring(0,  this.stripLeadingHyphens.length());	  String    str    =(String)this.stripLeadingHyphens.substring(0,    this.stripLeadingHyphens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
31	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  str);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  str);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens( "- ",  str);	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
32	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  false);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "- ",  false);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens( "- ",  false);	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
33	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	65	None	add
34	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	65	None	add
35	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  	65	None	add
36	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(1,  str.length());  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(1,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    String  str  =  str.substring(1,  str.length());	  	non-compiled	[CE]  	65	None	add
37	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	1	None	add
38	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  while(str.startsWith( "- "))  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  while(str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    while(str.startsWith( "- "))  {	  	non-compiled	[CE]  	1	None	add
39	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	1	None	add
40	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( ". "))  {  [CE]  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( ". "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    else  if(str.startsWith( ". "))  {	  	non-compiled	[CE]  	1	None	add
41	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [CE]  [FE]            NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	1	None	add
42	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- "))  {  return  str.substring(0,  str.length());  }	  while(str.startsWith(   "-   "))    {    str    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
43	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-))  {  [CE]  unclosed  string  literal  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "-))  {	  else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    	non-compiled	[CE]  unclosed  string  literal	42	None	replace
44	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "- ")||  str.startsWith( "- "))  {	  while(str.startsWith(   "-   "))    {    	compilable	  [FE]  NullPointerException  	2	2	replace
45	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "- "))  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")||  str.startsWith( "- "))  {	  while(str.startsWith(   "-   "))    {    	compilable	  [FE]  NullPointerException  	2	2	replace
46	[BUG]  [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
47	[BUG]  [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(1,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- "))  {  String  str  =  str.substring(1,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
48	[BUG]  [BUGGY]  else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
49	[BUG]  [BUGGY]  else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
50	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	41	None	add
51	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	41	None	add
52	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  	41	None	add
53	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	41	None	add
54	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  [CE]  unreachable  statement  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);	  while(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    	non-compiled	[CE]  unreachable  statement	5	None	replace
55	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(0,  str.length());  [CE]  unreachable  statement  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(0,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(0,  str.length());	  while(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    	non-compiled	[CE]  unreachable  statement	5	None	replace
56	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
57	[BUG]  [BUGGY]  else  if(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
58	[BUG]  [BUGGY]  else  if(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
59	[BUG]  [BUGGY]  astically(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  [CE]  [FE]                    ComparisonFailure      [CONTEXT]        [BUGGY]  astically(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	astically(str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  	23	None	replace
60	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	72	None	add
61	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  	72	None	add
62	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {	  	non-compiled	[CE]  	72	None	add
63	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	72	None	add
64	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(1,  str.length());  [CE]  unreachable  statement  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(1,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(1,  str.length());	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  unreachable  statement	16	None	replace
65	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.length()  >  0)  {  return  str.substring(1,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
66	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  [CE]  unreachable  statement  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")||  str.startsWith( "-- "))  {  return  str.substring(1,  str.length());	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  unreachable  statement	16	None	replace
67	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  0)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "-   ")&&  str.length()  ==  0)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
68	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  0)  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  0)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "-   ")&&  str.length()  ==  0)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
69	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  >  1)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "-   ")&&  str.length()  >  1)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
70	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  >  1)  {  [FE]  ComparisonFailure  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  >  1)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "-   ")&&  str.length()  >  1)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	compilable	  [FE]  ComparisonFailure  	4	2	replace
71	[BUG]  [BUGGY]  String  str  =  this.stripLeadingHyphens(str,  false);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  this.stripLeadingHyphens(str,  false);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  this.stripLeadingHyphens(str,  false);	  String    str    =    this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
72	[BUG]  [BUGGY]  String  str  =  this.stripLeadingHyphens(str,  true);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  this.stripLeadingHyphens(str,  true);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  this.stripLeadingHyphens(str,  true);	  String    str    =    this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
73	[BUG]  [BUGGY]  String  str  =  this.stripLeadingHyphens(this.stripLeadingHyphens);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  this.stripLeadingHyphens(this.stripLeadingHyphens);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  this.stripLeadingHyphens(this.stripLeadingHyphens);	  String    str    =    this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
74	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  1)  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.length()  >  1)  {  return  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.length()  >  1)  {  return  str.substring(1,  str.length());  }	  while(str.startsWith(   "-   "))    {    str    =    str.substring(1,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
75	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  while(str.startsWith( "-   ")&&  str.length()  >  0)  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  while(str.startsWith( "-   ")&&  str.length()  >  0)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    while(str.startsWith( "-   ")&&  str.length()  >  0)  {	  	non-compiled	[CE]  	3	None	add
76	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  while(str.startsWith( "-   ")&&  str.length()  >  1)  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  while(str.startsWith( "-   ")&&  str.length()  >  1)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    while(str.startsWith( "-   ")&&  str.length()  >  1)  {	  	non-compiled	[CE]  	3	None	add
77	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  while(str.startsWith( ".- ")&&  str.length()  >  0)  {  [CE]  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  while(str.startsWith( ".- ")&&  str.length()  >  0)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    while(str.startsWith( ".- ")&&  str.length()  >  0)  {	  	non-compiled	[CE]  	3	None	add
78	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  else  if(str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	3	None	add
79	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str.length()  +  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.get(str.length()  +  1);	  String    str    =(String)this.stripLeadingHyphens.get(str    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
80	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {	  while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	50	2	replace
81	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {	  while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	50	2	replace
82	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	50	2	replace
83	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [FE]  NullPointerException  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	50	2	replace
84	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    	compilable	  [FE]  ComparisonFailure  	47	2	replace
85	[BUG]  [BUGGY]  else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    	compilable	  [FE]  ComparisonFailure  	47	2	replace
86	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  1]);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  1]);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  1]);	  String    str    =(String)this.stripLeadingHyphens.toArray(new    String[this.stripLeadingHyphens.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
87	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  2]);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  2]);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  2]);	  String    str    =(String)this.stripLeadingHyphens.toArray(new    String[this.stripLeadingHyphens.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
88	[BUG]  [BUGGY]  else  if(str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    3);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
89	[BUG]  [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
90	[BUG]  [BUGGY]  }  else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
91	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  str.length())  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  while(str.startsWith( "-   ")&&  str.charAt(0)  ==  str.length())  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    while(str.startsWith( "-   ")&&  str.charAt(0)  ==  str.length())  {	  	non-compiled	[CE]  	51	None	add
92	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  while(str.startsWith( "-   ")&&  str.charAt(1)  ==  str.length())  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  while(str.startsWith( "-   ")&&  str.charAt(1)  ==  str.length())  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    while(str.startsWith( "-   ")&&  str.charAt(1)  ==  str.length())  {	  	non-compiled	[CE]  	51	None	add
93	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  else  if(str.startsWith( "- "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  else  if(str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    else  if(str.startsWith( "- "))  {	  	non-compiled	[CE]  	51	None	add
94	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  else  if(str.startsWith( "- ")&&  str.charAt(0)  ==  str.length())  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  else  if(str.startsWith( "- ")&&  str.charAt(0)  ==  str.length())  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    else  if(str.startsWith( "- ")&&  str.charAt(0)  ==  str.length())  {	  	non-compiled	[CE]  	51	None	add
95	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	57	None	add
96	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  	57	None	add
97	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {	  	non-compiled	[CE]  	57	None	add
98	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	57	None	add
99	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(1);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.get(1);	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
100	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(0,  this.stripLeadingHyphens.size());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(0,  this.stripLeadingHyphens.size());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.get(0,  this.stripLeadingHyphens.size());	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
101	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(0,  this.stripLeadingHyphens.length());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(0,  this.stripLeadingHyphens.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.get(0,  this.stripLeadingHyphens.length());	  String    str    =(String)this.stripLeadingHyphens.get(0);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
102	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {	  while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
103	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {	  while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
104	[BUG]  [BUGGY]  [FE]  StringIndexOutOfBoundsException  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")||  str.charAt(str.length())!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "-   ")||  str.charAt(str.length())!=  '-')  {	  while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	2	replace
105	[BUG]  [BUGGY]  while(str.startsWith( "-   ")||  str.charAt(str.length())!=  '-')  {  [FE]  StringIndexOutOfBoundsException  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")||  str.charAt(str.length())!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "-   ")||  str.charAt(str.length())!=  '-')  {	  while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    	compilable	  [FE]  StringIndexOutOfBoundsException  	63	2	replace
106	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(str.length())  ==  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "-   ")&&  str.charAt(str.length())  ==  '-')  {	  while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
107	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(str.length())  ==  '-')  {  [FE]  ComparisonFailure  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.charAt(str.length())  ==  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "-   ")&&  str.charAt(str.length())  ==  '-')  {	  while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    	compilable	  [FE]  ComparisonFailure  	63	2	replace
108	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  +  2]);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  +  2]);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  +  2]);	  String    str    =(String)this.stripLeadingHyphens.toArray(new    String[this.stripLeadingHyphens.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
109	[BUG]  [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- ")||  str.startsWith( "--))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "--))    {    	non-compiled	[CE]  unclosed  string  literal	56	None	replace
110	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {	  else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	38	2	replace
111	[BUG]  [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- ")||  str.startsWith( ".-- "))  {	  else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	38	2	replace
112	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    while(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	49	None	add
113	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "-   ")||  str.startsWith( "-- "))  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "-   ")||  str.startsWith( "-- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    while(str.startsWith( "-   ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  	49	None	add
114	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  [CE]  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    while(str.startsWith( "- ")&&  str.startsWith( "-- "))  {	  	non-compiled	[CE]  	49	None	add
115	[BUG]  [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    while(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());	  	non-compiled	[CE]  	18	None	add
116	[BUG]  [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  else  if(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  }  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  else  if(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    else  if(str.startsWith( "- "))  {  str  =  str.substring(1,  str.length());  }	  	non-compiled	[CE]  	18	None	add
117	[BUG]  [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    while(str.startsWith( "- "))  {  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	18	None	add
118	[BUG]  [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  while(str.startsWith( ".- "))  {  str  =  str.substring(1,  str.length());  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  while(str.startsWith( ".- "))  {  str  =  str.substring(1,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    while(str.startsWith( ".- "))  {  str  =  str.substring(1,  str.length());	  	non-compiled	[CE]  	18	None	add
119	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(false);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(false);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens(false);	  String    str    =    getStripLeadingHyphens(true);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
120	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(false,  false);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(false,  false);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens(false,  false);	  String    str    =    getStripLeadingHyphens(true);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
121	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens(false,  true);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens(false,  true);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens(false,  true);	  String    str    =    getStripLeadingHyphens(true);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
122	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {	  else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	73	2	replace
123	[BUG]  [BUGGY]  else  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".* ")&&  str.startsWith( ".* "))  {	  else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	73	2	replace
124	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    while(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {	  	non-compiled	[CE]  	62	None	add
125	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    while(str.startsWith( "-   ")&&  str.charAt(str.length())!=  '-')  {	  	non-compiled	[CE]  	62	None	add
126	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  else  if(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  [CE]  [FE]        NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  else  if(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    else  if(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {	  	non-compiled	[CE]  	62	None	add
127	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)  ==  '-')  {  [CE]  [FE]          NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)  ==  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    while(str.startsWith( "-   ")&&  str.charAt(str.length()  -  1)  ==  '-')  {	  	non-compiled	[CE]  	62	None	add
128	[BUG]  [BUGGY]  String  str  =(str!=  null)?  null  :  str.substring(1,  str.length());  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str!=  null)?  null  :  str.substring(1,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(str!=  null)?  null  :  str.substring(1,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(1,    str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
129	[BUG]  [BUGGY]  String  str  =(str  >=  null)?  null  :  str.substring(1,  str.length());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  >=  null)?  null  :  str.substring(1,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(str  >=  null)?  null  :  str.substring(1,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(1,    str.length()    +    1);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
130	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.length());  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  Util.stripLeadingHyphens(str.length());	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
131	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  false);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str,  false);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  Util.stripLeadingHyphens(str,  false);	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
132	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(this.stripLeadingHyphens);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(this.stripLeadingHyphens);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  Util.stripLeadingHyphens(this.stripLeadingHyphens);	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
133	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]              NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  str.substring(1,  str.length()  -  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  str.substring(1,  str.length()  -  1);	  String    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
134	[BUG]  [BUGGY]  String  str  =  str.substring(1,  str.length()  +  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  str.substring(1,  str.length()  +  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  str.substring(1,  str.length()  +  1);	  String    str    =    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
135	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.charAt(0)  ==  str.length())  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "- ")||  str.charAt(0)  ==  str.length())  {	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    	compilable	  [FE]  NullPointerException  	52	2	replace
136	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.charAt(0)  ==  str.length())  {  [FE]  NullPointerException  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.charAt(0)  ==  str.length())  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")||  str.charAt(0)  ==  str.length())  {	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    	compilable	  [FE]  NullPointerException  	52	2	replace
137	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  str.length())  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "-   ")&&  str.length()  ==  str.length())  {	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    	compilable	  [FE]  ComparisonFailure  	52	2	replace
138	[BUG]  [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  str.length())  {  [FE]  ComparisonFailure  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( "-   ")&&  str.length()  ==  str.length())  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "-   ")&&  str.length()  ==  str.length())  {	  while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    	compilable	  [FE]  ComparisonFailure  	52	2	replace
139	[BUG]  [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	39	None	add
140	[BUG]  [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "- "))  {	  	non-compiled	[CE]  	39	None	add
141	[BUG]  [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length()  -  2);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length()  -  2);	  	non-compiled	[CE]  	39	None	add
142	[BUG]  [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	39	None	add
143	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "--))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")&&  str.startsWith( "--))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	non-compiled	[CE]  unclosed  string  literal	78	None	replace
144	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str.length()  -  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.get(str.length()  -  1);	  String    str    =(String)this.stripLeadingHyphens.get(str    -    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
145	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str.length());  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.get(str.length());	  String    str    =(String)this.stripLeadingHyphens.get(str    -    1);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
146	[BUG]  [BUGGY]  str  =  str.substring(0,  str.length()  -  1);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	str  =  str.substring(0,  str.length()  -  1);	  if(str.length()    ==    0)    {    str    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
147	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    else    if(str.startsWith(   "-   ")&&    str.startsWith(   ".-   "))    {    	compilable	  [FE]  ComparisonFailure  	67	2	replace
148	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {  [FE]  ComparisonFailure  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")&&  str.startsWith( ".- "))  {	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    else    if(str.startsWith(   "-   ")&&    str.startsWith(   ".-   "))    {    	compilable	  [FE]  ComparisonFailure  	67	2	replace
149	[BUG]  [BUGGY]  else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
150	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  1);  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens().substring(0,  1);	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
151	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().substring(1);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().substring(1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens().substring(1);	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
152	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "/- ");  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "/- ");  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens( "/- ");	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
153	[BUG]  [BUGGY]  aught(Throwable.class)  {  return  str.substring(0,  str.length());  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aught(Throwable.class)  {  return  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	aught(Throwable.class)  {  return  str.substring(0,  str.length());  }	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  ';'  expected	64	None	replace
154	[BUG]  [BUGGY]  aught(Exception.class)  {  return  str.substring(0,  str.length());  }  [CE]  ';'  expected  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aught(Exception.class)  {  return  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	aught(Exception.class)  {  return  str.substring(0,  str.length());  }	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  ';'  expected	64	None	replace
155	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  illegal  start  of  type  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
156	[BUG]  [BUGGY]  }  else  if(str.startsWith( ".* "))  {  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( ".* "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   "))    {    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
157	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  3]);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  3]);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.length()  +  3]);	  String    str    =(String)this.stripLeadingHyphens.toArray(new    String[this.stripLeadingHyphens.length()    ]);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
158	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "/.* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "/.* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
159	[BUG]  [BUGGY]  else  if(str.startsWith( "/.* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "/.* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "/.* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
160	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "-   ")||  str.startsWith( "--))  {  [CE]  unclosed  string  literal  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( "-   ")||  str.startsWith( "--))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    while(str.startsWith( "-   ")||  str.startsWith( "--))  {	  	non-compiled	[CE]  unclosed  string  literal	49	None	add
161	[BUG]  [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- ")||  str.startsWith( "-- "))  {  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
162	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  1]);  [CE]  ']'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  1]);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  1]);	  String    str    =(String)this.stripLeadingHyphens.toArray(new    String[this.stripLeadingHyphens.size()    +    1]);    	non-compiled	[CE]  ']'  expected	74	None	replace
163	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	72	None	add
164	[BUG]  [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());  }	  while(str.startsWith(   "-   "))    {    str    =    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
165	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  +  3]);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  +  3]);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  +  3]);	  String    str    =(String)this.stripLeadingHyphens.toArray(new    String[this.stripLeadingHyphens.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
166	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length()  +  1)!=  '-')  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(str.length()  +  1)!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    while(str.startsWith( "-   ")&&  str.charAt(str.length()  +  1)!=  '-')  {	  	non-compiled	[CE]  	62	None	add
167	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "--))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  unclosed  string  literal  [FE]            NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "--))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "--))  {  String  str  =  str.substring(0,  str.length());  }	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    2);    	non-compiled	[CE]  unclosed  string  literal	14	None	replace
168	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "- ")&&  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	73	2	replace
169	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "-- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")&&  str.startsWith( "-- ")||  str.startsWith( "-- "))  {	  else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	73	2	replace
170	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.length()  >  0)  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.length()  >  0)  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "- ")&&  str.length()  >  0)  {  String  str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
171	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.endsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.endsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "- ")&&  str.endsWith( "-- "))  {  String  str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
172	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
173	[BUG]  [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.endsWith( ".* "))  {  String  str  =  str.substring(0,  str.length());  [CE]  illegal  start  of  type  [FE]                  ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( "- ")&&  str.endsWith( ".* "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( "- ")&&  str.endsWith( ".* "))  {  String  str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
174	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().toString();  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().toString();  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens().toString();	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
175	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  length()  -  1);  [CE]  illegal  start  of  type  [FE]                        NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().substring(0,  length()  -  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens().substring(0,  length()  -  1);	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
176	[BUG]  [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	39	None	add
177	[BUG]  [BUGGY]  String  str  =  this.stripLeadingHyphens(true);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  this.stripLeadingHyphens(true);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  this.stripLeadingHyphens(true);	  String    str    =    this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
178	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	55	2	replace
179	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "-+ "))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    	compilable	  [FE]  NullPointerException  	55	2	replace
180	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  while(str.startsWith( ". "))  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  while(str.startsWith( ". "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    while(str.startsWith( ". "))  {	  	non-compiled	[CE]  	1	None	add
181	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  	1	None	add
182	[BUG]  [BUGGY]  Parchet.checkState(str.length()  ==  0)  {  str  =  str.substring(0,  str.length());  }  [CE]  ';'  expected  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(str.length()  ==  0)  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	Parchet.checkState(str.length()  ==  0)  {  str  =  str.substring(0,  str.length());  }	  if(str.length()    ==    0)    {    str    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  ';'  expected	68	None	replace
183	[BUG]  [BUGGY]  Parchet.checkState(str.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  Parchet.checkState(str.length()  ==  0);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	Parchet.checkState(str.length()  ==  0);	  if(str.length()    ==    0)    {    str    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
184	[BUG]  [BUGGY]  ParchetUtil.checkState(str.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  ParchetUtil.checkState(str.length()  ==  0);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	ParchetUtil.checkState(str.length()  ==  0);	  if(str.length()    ==    0)    {    str    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
185	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
186	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  [CE]  unreachable  statement  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.charAt(str.length()  -  1)!=  '-')  {  return  str.substring(1,  str.length());	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  unreachable  statement	16	None	replace
187	[BUG]  [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(3,  str.length());  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(str  ==  null)?  null  :  str.substring(3,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(str  ==  null)?  null  :  str.substring(3,  str.length());	  String    str    =(str    ==    null)?    null    :    str.substring(2,    str.length());    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
188	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.length()  >  0)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( "- ")||  str.length()  >  0)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	compilable	  [FE]  NullPointerException  	4	2	replace
189	[BUG]  [BUGGY]  while(str.startsWith( "- ")||  str.length()  >  0)  {  [FE]  NullPointerException  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")||  str.length()  >  0)  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")||  str.length()  >  0)  {	  while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    	compilable	  [FE]  NullPointerException  	4	2	replace
190	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	41	None	add
191	[BUG]  [BUGGY]  }  else  if(str.startsWith( ".prototype. "))  {  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  }  else  if(str.startsWith( ".prototype. "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	}  else  if(str.startsWith( ".prototype. "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   "))    {    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
192	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	57	None	add
193	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( ".- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	57	None	add
194	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( ".* "))  {	  while(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	2	2	replace
195	[BUG]  [BUGGY]  while(str.startsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( ".* "))  {	  while(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	2	2	replace
196	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLeadingHyps.length());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLeadingHyps.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLeadingHyps.length());	  String    str    =(String)this.stripLeadingHyphens.substring(0,    this.stripLeadingHyphens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
197	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  3);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  String  str  =  str.substring(0,  str.length()  -  3);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    String  str  =  str.substring(0,  str.length()  -  3);	  	non-compiled	[CE]  	65	None	add
198	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( ".- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( ".- "))  {	  while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    	compilable	  [FE]  ComparisonFailure  	19	2	replace
199	[BUG]  [BUGGY]  while(str.startsWith( ".- "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( ".- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( ".- "))  {	  while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    	compilable	  [FE]  ComparisonFailure  	19	2	replace
200	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")&&  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  	72	None	add
201	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());	  while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    	compilable	  [FE]  ComparisonFailure  	19	2	replace
202	[BUG]  [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( ".* "))  {  str  =  str.substring(0,  str.length());	  while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    	compilable	  [FE]  ComparisonFailure  	19	2	replace
203	[BUG]  [BUGGY]  while(str.startsWith( ".js "))  {  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( ".js "))  {  str  =  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( ".js "))  {  str  =  str.substring(1,  str.length());  }	  while(str.startsWith(   ".   "))    {    str    =    str.substring(1,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
204	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "-, ");  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "-, ");  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens( "-, ");	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
205	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens( "/.* ");  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens( "/.* ");  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens( "/.* ");	  String    str    =    getStripLeadingHyphens(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
206	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str  +  2);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.get(str  +  2);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.get(str  +  2);	  String    str    =(String)this.stripLeadingHyphens.get(str    +    1);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
207	[BUG]  [BUGGY]  while(str.startsWith(   "-   "))  {  while(str.startsWith( ".* "))  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   "))  {  while(str.startsWith( ".* "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   "))    {    while(str.startsWith( ".* "))  {	  	non-compiled	[CE]  	1	None	add
208	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")||  str.startsWith(   "--   "))  {  while(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")||    str.startsWith(   "--   "))    {    while(str.startsWith( ". ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	49	None	add
209	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	78	2	replace
210	[BUG]  [BUGGY]  else  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  [FE]  ComparisonFailure  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "-- ")&&  str.startsWith( "-- "))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")&&    str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	78	2	replace
211	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLEadingHyphens.length());  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLEadingHyphens.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.substring(0,  this.stripLEadingHyphens.length());	  String    str    =(String)this.stripLeadingHyphens.substring(0,    this.stripLeadingHyphens.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
212	[BUG]  [BUGGY]  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "-       ")||    str.startsWith(       ".-       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
213	[BUG]  [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  -  1]);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =(String)this.stripLeadingHyphens.toArray(new  String[this.stripLeadingHyphens.size()  -  1]);	  String    str    =(String)this.stripLeadingHyphens.toArray(new    String[this.stripLeadingHyphens.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
214	[BUG]  [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length());	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    3);    	non-compiled	[CE]  variable  str  is  already  defined  in  method  stripLeadingHyphens(String)	59	None	replace
215	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	3	None	add
216	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  String  str  =  str.substring(0,  str.length());  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.length()  >  0)  {  String  str  =  str.substring(0,  str.length());  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.length()    >    0)    {    String  str  =  str.substring(0,  str.length());	  	non-compiled	[CE]  	3	None	add
217	[BUG]  [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	39	None	add
218	[BUG]  [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".-   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".-   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	39	None	add
219	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	62	None	add
220	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(0)!=  '-')  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(str.length()  -  1)!=  '-')  {  while(str.startsWith( "-   ")&&  str.charAt(0)!=  '-')  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(str.length()    -    1)!=    '-')    {    while(str.startsWith( "-   ")&&  str.charAt(0)!=  '-')  {	  	non-compiled	[CE]  	62	None	add
221	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.endsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.endsWith( ".* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
222	[BUG]  [BUGGY]  else  if(str.endsWith( ".* "))  {  [FE]  ComparisonFailure  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.endsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.endsWith( ".* "))  {	  else    if(str.startsWith(   ".*   "))    {    	compilable	  [FE]  ComparisonFailure  	66	2	replace
223	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	57	None	add
224	[BUG]  [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".   ")||  str.startsWith(   ".-   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".   ")||    str.startsWith(   ".-   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {	  	non-compiled	[CE]  	57	None	add
225	[BUG]  [BUGGY]  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    	compilable	  [FE]  NullPointerException  	13	2	replace
226	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {  [FE]  NullPointerException  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( ".* "))  {	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    	compilable	  [FE]  NullPointerException  	13	2	replace
227	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".prototype. "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( ".prototype. "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	75	2	replace
228	[BUG]  [BUGGY]  else  if(str.startsWith( ".prototype. "))  {  [FE]  ComparisonFailure  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".prototype. "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".prototype. "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	75	2	replace
229	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( ". "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	while(str.startsWith( ". "))  {	  while(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	2	2	replace
230	[BUG]  [BUGGY]  while(str.startsWith( ". "))  {  [FE]  ComparisonFailure  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  while(str.startsWith( ". "))  {  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( ". "))  {	  while(str.startsWith(   "-   "))    {    	compilable	  [FE]  ComparisonFailure  	2	2	replace
231	[BUG]  [BUGGY]  Annotations.checkState(str.length()  ==  0);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  Annotations.checkState(str.length()  ==  0);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	Annotations.checkState(str.length()  ==  0);	  if(str.length()    ==    0)    {    str    =    str.substring(0,    str.length()    -    1);    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
232	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]        NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")||  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
233	[BUG]  [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]          NullPointerException      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- ")&&  str.startsWith( "-- "))  {  String  str  =  str.substring(1,  str.length());  }	  else    if    (str.startsWith(       "-       ")||    str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
234	[BUG]  [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  String  str  =  str.substring(0,  str.length()  -  1);  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   "-   ")&&  str.charAt(0)  ==  str.length())  {  String  str  =  str.substring(0,  str.length()  -  1);  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   "-   ")&&    str.charAt(0)    ==    str.length())    {    String  str  =  str.substring(0,  str.length()  -  1);	  	non-compiled	[CE]  	51	None	add
235	[BUG]  [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  else  if(str.startsWith( ". "))  {  str  =  str.substring(1,  str.length());  }  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  else  if(str.startsWith( ". "))  {  str  =  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    else  if(str.startsWith( ". "))  {  str  =  str.substring(1,  str.length());  }	  	non-compiled	[CE]  	18	None	add
236	[BUG]  [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  else  if(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  while(str.startsWith(   ".-   "))  {  str  =  str.substring(0,  str.length());  else  if(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith(   ".-   "))    {    str    =    str.substring(0,    str.length());    else  if(str.startsWith( "- "))  {  return  str.substring(1,  str.length());  }	  	non-compiled	[CE]  	18	None	add
237	[BUG]  [BUGGY]  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ". "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	add	else  if(str.startsWith( ". "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	76	2	replace
238	[BUG]  [BUGGY]  else  if(str.startsWith( ". "))  {  [FE]  ComparisonFailure  [FE]          ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ". "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ". "))  {	  else    if(str.startsWith(       "--       "))    {    else    if(str.startsWith(   "--   "))    {    	compilable	  [FE]  ComparisonFailure  	76	2	replace
239	[BUG]  [BUGGY]  else  if(str.startsWith( ".prototype. "))  {  String  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]        ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".prototype. "))  {  String  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".prototype. "))  {  String  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
240	[BUG]  [BUGGY]  String  str  =  getLeadingHyphens();  [CE]  illegal  start  of  type  [FE]                    NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getLeadingHyphens();  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getLeadingHyphens();	  String    str    =    getRawStripLeadingHyphens();    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
241	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.startsWith( ".* "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    else  if(str.startsWith( ".* "))  {	  	non-compiled	[CE]  	65	None	add
242	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.startsWith( "* "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.startsWith( "* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    else  if(str.startsWith( "* "))  {	  	non-compiled	[CE]  	65	None	add
243	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    else  if(str.startsWith( ".* ")||  str.startsWith( ".* "))  {	  	non-compiled	[CE]  	65	None	add
244	[BUG]  [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.endsWith( ".* "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   ".*   "))  {  else  if(str.endsWith( ".* "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   ".*   "))    {    else  if(str.endsWith( ".* "))  {	  	non-compiled	[CE]  	65	None	add
245	[BUG]  [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]            ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length()  -  1);  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( "- "))  {  String  str  =  str.substring(0,  str.length()  -  1);  }	  else    if(str.startsWith(       "--       "))    {    String    str    =    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
246	[BUG]  [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(1,  str.length());  }  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(1,  str.length());  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- ")&&  str.charAt(0)  ==  '-')  {  return  str.substring(1,  str.length());  }	  while(str.startsWith(   "-   "))    {    return    str.substring(1,    str.length());    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
247	[BUG]  [BUGGY]  char  str  =  this.stripLeadingHyphens(str);  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  char  str  =  this.stripLeadingHyphens(str);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	char  str  =  this.stripLeadingHyphens(str);	  String    str    =    this.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
248	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [CE]  [FE]    NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	41	None	add
249	[BUG]  [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [CE]  [FE]      NullPointerException    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "-   ")||  str.startsWith(   "-   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "-   ")||    str.startsWith(   "-   "))    {    else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {	  	non-compiled	[CE]  	41	None	add
250	[BUG]  [BUGGY]  else  if(str.startsWith( ".- "))  {  str  =  str.substring(0,  str.length());  }  [CE]  illegal  start  of  type  [FE]              ComparisonFailure      [CONTEXT]        [BUGGY]  else  if(str.startsWith( ".- "))  {  str  =  str.substring(0,  str.length());  }  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else  if(str.startsWith( ".- "))  {  str  =  str.substring(0,  str.length());  }	  else    if(str.startsWith(       "--       "))    {    str    =    str.substring(0,    str.length()    -    1);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
251	[BUG]  [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	while(str.startsWith( "- "))  {  return  str.substring(0,  str.length()  -  1);  }	  while(str.startsWith(   "-   "))    {    return    str.substring(0,    str.length());    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
252	[BUG]  [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.substring(0,  str.length()  -  1));  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  Util.stripLeadingHyphens(str.substring(0,  str.length()  -  1));  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  Util.stripLeadingHyphens(str.substring(0,  str.length()  -  1));	  String    str    =    Util.stripLeadingHyphens(str);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
253	[BUG]  [BUGGY]  String  str  =  getStripLeadingHyphens().trim( "- ");  [CE]  illegal  start  of  type  [FE]                      NullPointerException      [CONTEXT]        [BUGGY]  String  str  =  getStripLeadingHyphens().trim( "- ");  [BUGGY]      else  if  (str.startsWith(     "-     "))  {  {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	String  str  =  getStripLeadingHyphens().trim( "- ");	  String    str    =    getStripLeadingHyphens().trim();    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
254	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingName(str);  [CE]  illegal  start  of  type  [FE]                NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingName(str);  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	aughtExceptionHandler.handleMissingName(str);	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
255	[BUG]  [BUGGY]  aughtExceptionHandler.handleMissingHyphens();  [CE]  illegal  start  of  type  [FE]                  NullPointerException      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleMissingHyphens();  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	aughtExceptionHandler.handleMissingHyphens();	  if(str    ==    null)    {    return    str.substring(0,    str.length());    }    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
256	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [CE]  [FE]    ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( ".java ")||  str.startsWith( ".java "))  {	  	non-compiled	[CE]  	37	None	add
257	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [CE]  [FE]      ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	37	None	add
258	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [CE]  [FE]        ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( ". ")||  str.startsWith( ".- "))  {	  	non-compiled	[CE]  	37	None	add
259	[BUG]  [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [CE]  [FE]          ComparisonFailure    [CONTEXT]        [BUGGY]  else  if(str.startsWith(   "--   ")||  str.startsWith(   "--   "))  {  else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {  [BUGGY]      {  return  str.substring(1,  str.length());  }  return  str;  }  [CLASS]  Util  [METHOD]  stripLeadingHyphens  [RETURN_TYPE]  String  String  str  	projects/Cli5/src/java/org/apache/commons/cli/Util.java	0.7071067811865475	40	41	2	replace	else    if(str.startsWith(   "--   ")||    str.startsWith(   "--   "))    {    else  if(str.startsWith( "- ")&&  str.startsWith( "- "))  {	  	non-compiled	[CE]  	37	None	add
