bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text.trim();  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text.trim();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text.trim();	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
2	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text.toString();  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text.toString();	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
3	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder.toString());  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder.toString());  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder.toString());	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
4	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.description  + "n ";  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.description  + "n ";  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.description  + "n ";	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
5	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder.length());  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder.length());  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder.length());	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
6	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder);  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.description,  fileLevelJsDocBuilder);	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
7	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.preserve.toString();  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.preserve.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.preserve.toString();	  String    preserve    =    preserveInfo.preserve;    	non-compiled	[CE]  	4	None	replace
8	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.preserve.trim();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.preserve.trim();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.preserve.trim();	  String    preserve    =    preserveInfo.preserve;    	non-compiled	[CE]  	4	None	replace
9	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.precedence;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.precedence;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.precedence;	  String    preserve    =    preserveInfo.preserve;    	non-compiled	[CE]  	4	None	replace
10	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString.trim();  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString.trim();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString.trim();	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
11	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  + "n ";  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  + "n ";  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  + "n ";	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
12	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  +  1;  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  +  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  +  1;	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
13	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.getText();  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.getText();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.getText();	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
14	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  + "; ";  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  + "; ";  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  + "; ";	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
15	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString();  [CE]  [FE]                              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString();	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
16	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.line  +  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.line  +  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.line  +  1;	  String    preserve    =    preserveInfo.line;    	non-compiled	[CE]  	2	None	replace
17	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.line  -  1;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.line  -  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.line  -  1;	  String    preserve    =    preserveInfo.line;    	non-compiled	[CE]  	2	None	replace
18	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.label;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.label;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.label;	  String    preserve    =    preserveInfo.line;    	non-compiled	[CE]  	2	None	replace
19	[BUG]  [BUGGY]  Preconditions.checkNotNull(preserve);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkNotNull(preserve);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkNotNull(preserve);	      	non-compiled	[CE]  	8	None	replace
20	[BUG]  [BUGGY]  Preconditions.checkNotNull(preserve);  preserveInfo.setLineno(lineno);  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkNotNull(preserve);  preserveInfo.setLineno(lineno);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkNotNull(preserve);  preserveInfo.setLineno(lineno);	      	non-compiled	[CE]  	8	None	replace
21	[BUG]  [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo.setLineno(lineno);  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo.setLineno(lineno);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkNotNull(preserveInfo);  preserveInfo.setLineno(lineno);	      	non-compiled	[CE]  	8	None	replace
22	[BUG]  [BUGGY]  Preconditions.checkState(preserveInfo!=  null);  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkState(preserveInfo!=  null);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkState(preserveInfo!=  null);	      	non-compiled	[CE]  	8	None	replace
23	[BUG]  [BUGGY]  Preconditions.checkNotNull(preserveInfo);  [CE]  [FE]                              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkNotNull(preserveInfo);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkNotNull(preserveInfo);	      	non-compiled	[CE]  	8	None	replace
24	[BUG]  [BUGGY]  Preconditions.checkState(preserveInfo!=  null);  preserveInfo.setLineno(lineno);  [CE]  [FE]                                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkState(preserveInfo!=  null);  preserveInfo.setLineno(lineno);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkState(preserveInfo!=  null);  preserveInfo.setLineno(lineno);	      	non-compiled	[CE]  	8	None	replace
25	[BUG]  [BUGGY]  Preconditions.checkState(reserveInfo!=  null);  [CE]  [FE]                                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkState(reserveInfo!=  null);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkState(reserveInfo!=  null);	      	non-compiled	[CE]  	8	None	replace
26	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.limit  +  1;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.limit  +  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.limit  +  1;	  String    preserve    =    preserveInfo.limit;    	non-compiled	[CE]  	5	None	replace
27	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.limit  -  1;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.limit  -  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.limit  -  1;	  String    preserve    =    preserveInfo.limit;    	non-compiled	[CE]  	5	None	replace
28	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.toLowerCase();  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.toLowerCase();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.toLowerCase();	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
29	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.toString();  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.toString();	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
30	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.substring(0,  preserveInfo.length()  -  1);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.substring(0,  preserveInfo.length()  -  1);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.substring(0,  preserveInfo.length()  -  1);	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
31	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.substring(0,  preserveInfo.str.length()  -  1);  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.substring(0,  preserveInfo.str.length()  -  1);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.substring(0,  preserveInfo.str.length()  -  1);	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
32	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.trim();  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.trim();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.trim();	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
33	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.length();  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.length();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.length();	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
34	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.substring(1);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.substring(1);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.substring(1);	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
35	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.token.trim();  [CE]  [FE]        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.token.trim();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.token.trim();	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
36	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.token  +  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.token  +  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.token  +  1;	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
37	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.token.replace('',  '');  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.token.replace('',  '');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.token.replace('',  '');	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
38	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.token,  unreadToken);  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.token,  unreadToken);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.token,  unreadToken);	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
39	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.token.replace('n',  'r');  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.token.replace('n',  'r');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.token.replace('n',  'r');	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
40	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.baseUri  +  1;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.baseUri  +  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.baseUri  +  1;	  String    preserve    =    preserveInfo.baseUri;    	non-compiled	[CE]  	9	None	replace
41	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.baseURI;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.baseURI;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.baseURI;	  String    preserve    =    preserveInfo.baseUri;    	non-compiled	[CE]  	9	None	replace
42	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.baseUri,  preserveInfo.lineNumber);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.baseUri,  preserveInfo.lineNumber);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.baseUri,  preserveInfo.lineNumber);	  String    preserve    =    preserveInfo.baseUri;    	non-compiled	[CE]  	9	None	replace
43	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.baseUri,  preserveInfo.lineNumber;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.baseUri,  preserveInfo.lineNumber;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.baseUri,  preserveInfo.lineNumber;	  String    preserve    =    preserveInfo.baseUri;    	non-compiled	[CE]  	9	None	replace
44	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()  ==  0;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()  ==  0;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()  ==  0;	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
45	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()  >  0;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()  >  0;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()  >  0;	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
46	[BUG]  [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.toString;  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.toString;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  fileLevelJsDocBuilder.toString;	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
47	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  + "_ "  +  fileLevelJsDocBuilder.toString();  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  + "_ "  +  fileLevelJsDocBuilder.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  + "_ "  +  fileLevelJsDocBuilder.toString();	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
48	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()!=  0;  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()!=  0;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  &&  fileLevelJsDocBuilder.length()!=  0;	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
49	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str  +  1;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str  +  1;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str  +  1;	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
50	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.replace('n',  'r');  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.replace('n',  'r');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.replace('n',  'r');	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
51	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.reserved;  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.reserved;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.reserved;	  String    preserve    =    preserveInfo.limit;    	non-compiled	[CE]  	5	None	replace
52	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.referenceName;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.referenceName;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.referenceName;	  String    preserve    =    preserveInfo.baseUri;    	non-compiled	[CE]  	9	None	replace
53	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.preserveName;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.preserveName;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.preserveName;	  String    preserve    =    preserveInfo.baseUri;    	non-compiled	[CE]  	9	None	replace
54	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.returnDescription;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.returnDescription;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.returnDescription;	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
55	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.servlet;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.servlet;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.servlet;	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
56	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.reserve();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.reserve();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.reserve();	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
57	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text.replace('n',  'r');  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text.replace('n',  'r');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text.replace('n',  'r');	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
58	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()  ==  0;  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()  ==  0;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()  ==  0;	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
59	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()!=  0;  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()!=  0;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()!=  0;	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
60	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()  >  0;  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()  >  0;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text  &&  fileLevelJsDocBuilder.length()  >  0;	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
61	[BUG]  [BUGGY]  JSDocToken  prev  =  parse(stream.getLineno(),  stream.getCharno());  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  JSDocToken  prev  =  parse(stream.getLineno(),  stream.getCharno());  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	JSDocToken  prev  =  parse(stream.getLineno(),  stream.getCharno());	      	non-compiled	[CE]  	8	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);	      	non-compiled	[CE]  	8	None	replace
63	[BUG]  [BUGGY]  JSDocToken  prev  =  parse(stream.getLineno(),  stream.getCharno());  fileLevelJsDocBuilder.append(prev);  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  JSDocToken  prev  =  parse(stream.getLineno(),  stream.getCharno());  fileLevelJsDocBuilder.append(prev);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	JSDocToken  prev  =  parse(stream.getLineno(),  stream.getCharno());  fileLevelJsDocBuilder.append(prev);	      	non-compiled	[CE]  	8	None	replace
64	[BUG]  [BUGGY]  Preconditions.checkArgument(preserveInfo!=  null);  [CE]  [FE]                            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkArgument(preserveInfo!=  null);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkArgument(preserveInfo!=  null);	      	non-compiled	[CE]  	8	None	replace
65	[BUG]  [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.NONE);  [CE]  [FE]                              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.NONE);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.NONE);	      	non-compiled	[CE]  	8	None	replace
66	[BUG]  [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.LICENSE);  [CE]  [FE]                                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.LICENSE);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkNotNull(preserveInfo);  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.LICENSE);	      	non-compiled	[CE]  	8	None	replace
67	[BUG]  [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.preserve;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.preserve;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  fileLevelJsDocBuilder.preserve;	  String    preserve    =    preserveInfo.preserve;    	non-compiled	[CE]  	4	None	replace
68	[BUG]  [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.toString();  [CE]  [FE]                ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  fileLevelJsDocBuilder.toString();	  String    preserve    =    preserveInfo.preserve;    	non-compiled	[CE]  	4	None	replace
69	[BUG]  [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.precedence;  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.precedence;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  fileLevelJsDocBuilder.precedence;	  String    preserve    =    preserveInfo.preserve;    	non-compiled	[CE]  	4	None	replace
70	[BUG]  [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.token;  [CE]  [FE]        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.token;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  fileLevelJsDocBuilder.token;	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
71	[BUG]  [BUGGY]  String  preserve  =  paramDescriptionInfo.token;  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  paramDescriptionInfo.token;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  paramDescriptionInfo.token;	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
72	[BUG]  [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.append(preserveInfo.token);  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  fileLevelJsDocBuilder.append(preserveInfo.token);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  fileLevelJsDocBuilder.append(preserveInfo.token);	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
73	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.token.replace('n',  't');  [CE]  [FE]        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.token.replace('n',  't');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.token.replace('n',  't');	  String    preserve    =    preserveInfo.token;    	non-compiled	[CE]  	1	None	replace
74	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.servletName;  [CE]  [FE]            ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.servletName;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.servletName;	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
75	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.reservedDescription;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.reservedDescription;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.reservedDescription;	  String    preserve    =    preserveInfo.description;    	non-compiled	[CE]  	3	None	replace
76	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text.replace('n',  't');  [CE]  [FE]                  ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text.replace('n',  't');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text.replace('n',  't');	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
77	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text.replace('0',  '0');  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text.replace('0',  '0');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text.replace('0',  '0');	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
78	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.text.replace('n',  '/');  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.text.replace('n',  '/');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.text.replace('n',  '/');	  String    preserve    =    preserveInfo.text;    	non-compiled	[CE]  	6	None	replace
79	[BUG]  [BUGGY]  Preconditions.checkArgument(preserveInfo  ==  null);  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkArgument(preserveInfo  ==  null);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkArgument(preserveInfo  ==  null);	      	non-compiled	[CE]  	8	None	replace
80	[BUG]  [BUGGY]  Preconditions.checkState(preserveInfo  ==  null);  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkState(preserveInfo  ==  null);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkState(preserveInfo  ==  null);	      	non-compiled	[CE]  	8	None	replace
81	[BUG]  [BUGGY]  Preconditions.checkState(remainderInfo  ==  null);  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  Preconditions.checkState(remainderInfo  ==  null);  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	Preconditions.checkState(remainderInfo  ==  null);	      	non-compiled	[CE]  	8	None	replace
82	[BUG]  [BUGGY]  String  preserve  =  preserveInfo!=  null?  preserveInfo.toString  : " ";  [CE]  [FE]                    ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo!=  null?  preserveInfo.toString  : " ";  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo!=  null?  preserveInfo.toString  : " ";	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
83	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  + ": "  +  preserveInfo.toString();  [CE]  [FE]                      ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  + ": "  +  preserveInfo.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  + ": "  +  preserveInfo.toString();	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
84	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  + ": "  +  preserveInfo.toString;  [CE]  [FE]                        ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  + ": "  +  preserveInfo.toString;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  + ": "  +  preserveInfo.toString;	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
85	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.toString  + "_ "  +  preserveInfo.toString();  [CE]  [FE]                          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.toString  + "_ "  +  preserveInfo.toString();  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.toString  + "_ "  +  preserveInfo.toString();	  String    preserve    =    preserveInfo.toString;    	non-compiled	[CE]  	7	None	replace
86	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.reserve;  [CE]  [FE]              ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.reserve;  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.reserve;	  String    preserve    =    preserveInfo.preserve;    	non-compiled	[CE]  	4	None	replace
87	[BUG]  [BUGGY]  String  preserve  =  preserveInfo.str.replace('/',  '.');  [CE]  [FE]          ComparisonFailure    [CONTEXT]    stream.getLineno(),  stream.getCharno());  }  continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);    [BUGGY]  String  preserve  =  preserveInfo.str.replace('/',  '.');  [BUGGY]      if  (preserve.length()  >  0)  {  if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	352	352	4	replace	String  preserve  =  preserveInfo.str.replace('/',  '.');	  String    preserve    =    preserveInfo.str;    	non-compiled	[CE]  	10	None	replace
