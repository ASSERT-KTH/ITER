bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(preserve!=  null  ||  preserve.length()  ==  0)  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  ||  preserve.length()  ==  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  ||  preserve.length()  ==  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
2	[BUG]  [BUGGY]  if(preserve  ==  null  ||  preserve.length()  ==  0)  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  ==  null  ||  preserve.length()  ==  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  ==  null  ||  preserve.length()  ==  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
3	[BUG]  [BUGGY]  if(preserve  ==  null  ||  preserve.length()!=  0)  {  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  ==  null  ||  preserve.length()!=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  ==  null  ||  preserve.length()!=  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
4	[BUG]  [BUGGY]  if(preserve!=  null  ||  preserve.length()  >=  0)  {  [CE]  orphaned  case  [FE]                    ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  ||  preserve.length()  >=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  ||  preserve.length()  >=  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
5	[BUG]  [BUGGY]  if(preserve  ==  null  ||  preserve.length()  >=  0)  {  [CE]  orphaned  case  [FE]                      ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  ==  null  ||  preserve.length()  >=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  ==  null  ||  preserve.length()  >=  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
6	[BUG]  [BUGGY]  if(preserve!=  null  ||  preserve.length()!=  0)  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  ||  preserve.length()!=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  ||  preserve.length()!=  0)  {	  if(preserve.length()!=    0)    {    	non-compiled	[CE]  orphaned  case	5	None	replace
7	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserve.length()!=  0)  {  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserve.length()!=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserve.length()!=  0)  {	  if(preserve.length()!=    0)    {    	non-compiled	[CE]  orphaned  case	5	None	replace
8	[BUG]  [BUGGY]  fileLevelJsDocBuilder.append(preserve);  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                  ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  fileLevelJsDocBuilder.append(preserve);  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	fileLevelJsDocBuilder.append(preserve);	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
9	[BUG]  [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                    ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
10	[BUG]  [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder.append(preserve);  [CE]  ';'  expected  [FE]                      ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder.append(preserve);  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	FileLevelJsDocBuilder  fileLevelJsDocBuilder.append(preserve);	      	non-compiled	[CE]  ';'  expected	6	None	replace
11	[BUG]  [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  continue  retry;  }  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  continue  retry;  }  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  continue  retry;  }	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
12	[BUG]  [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append( "n ");  }  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append( "n ");  }  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append( "n ");  }	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
13	[BUG]  [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append( ", ");  }  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                            ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append( ", ");  }  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append( ", ");  }	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
14	[BUG]  [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append('n');  }  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append('n');  }  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  else  {  fileLevelJsDocBuilder.append('n');  }	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
15	[BUG]  [BUGGY]  if(preserve  ==  null  &&  preserve.length()  >  0)  {  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  ==  null  &&  preserve.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  ==  null  &&  preserve.length()  >  0)  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
16	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserve.length()  ==  0)  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserve.length()  ==  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserve.length()  ==  0)  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
17	[BUG]  [BUGGY]  if(remainder!=  null  &&  preserve.length()  >  0)  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(remainder!=  null  &&  preserve.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(remainder!=  null  &&  preserve.length()  >  0)  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
18	[BUG]  [BUGGY]  if(preserve  ==  null)  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  ==  null)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  ==  null)  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
19	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserve.length  >  0)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserve.length  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserve.length  >  0)  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
20	[BUG]  [BUGGY]  if(preserve!=  null  ||  preserve.length()  <=  0)  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  ||  preserve.length()  <=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  ||  preserve.length()  <=  0)  {	  if(preserve!=    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
21	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserve.length()  >=  0)  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserve.length()  >=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserve.length()  >=  0)  {	  if(preserve.length()    >=    0)    {    	non-compiled	[CE]  orphaned  case	8	None	replace
22	[BUG]  [BUGGY]  if(preserve.length()  ==  0  ||  preserve.length()  ==  0)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve.length()  ==  0  ||  preserve.length()  ==  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve.length()  ==  0  ||  preserve.length()  ==  0)  {	  if(preserve.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
23	[BUG]  [BUGGY]  if(preserve  ==  null  ||  preserve.length()  <=  0)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  ==  null  ||  preserve.length()  <=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  ==  null  ||  preserve.length()  <=  0)  {	  if(preserve.length()    <=    0)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
24	[BUG]  [BUGGY]  if(preserve.equals( " "))  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve.equals( " "))  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve.equals( " "))  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
25	[BUG]  [BUGGY]  if(preserve!=  null  ||  preserveInfo.length()  ==  0)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  ||  preserveInfo.length()  ==  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  ||  preserveInfo.length()  ==  0)  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
26	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserve.length()  <=  0)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserve.length()  <=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserve.length()  <=  0)  {	  if(preserve.length()    <=    0)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
27	[BUG]  [BUGGY]  if(preserve!=  null  &&  fileLevelJsDocBuilder.length()  >  0)  {  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  fileLevelJsDocBuilder.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  fileLevelJsDocBuilder.length()  >  0)  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
28	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.length()  >  0)  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.length()  >  0)  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
29	[BUG]  [BUGGY]  if(preserve.length()  ==  0  ||  fileLevelJsDocBuilder.charAt(preserve.length()  -  1)!=  '/')  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve.length()  ==  0  ||  fileLevelJsDocBuilder.charAt(preserve.length()  -  1)!=  '/')  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve.length()  ==  0  ||  fileLevelJsDocBuilder.charAt(preserve.length()  -  1)!=  '/')  {	  if(preserve.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
30	[BUG]  [BUGGY]  if(preserve.length()  ==  0  ||  fileLevelJsDocBuilder.length()  ==  0)  {  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve.length()  ==  0  ||  fileLevelJsDocBuilder.length()  ==  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve.length()  ==  0  ||  fileLevelJsDocBuilder.length()  ==  0)  {	  if(preserve.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
31	[BUG]  [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append('n');  }  else  {  fileLevelJsDocBuilder.append('n');  }  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                  ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append('n');  }  else  {  fileLevelJsDocBuilder.append('n');  }  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null)  {  fileLevelJsDocBuilder.append('n');  }  else  {  fileLevelJsDocBuilder.append('n');  }	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
32	[BUG]  [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append( "n ");  }  else  {  fileLevelJsDocBuilder.append( "n ");  }  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                    ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null)  {  fileLevelJsDocBuilder.append( "n ");  }  else  {  fileLevelJsDocBuilder.append( "n ");  }  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null)  {  fileLevelJsDocBuilder.append( "n ");  }  else  {  fileLevelJsDocBuilder.append( "n ");  }	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
33	[BUG]  [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  jsdocBuilder.getParent();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                      ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  jsdocBuilder.getParent();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	FileLevelJsDocBuilder  fileLevelJsDocBuilder  =  jsdocBuilder.getParent();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
34	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.length  >  0)  {  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.length  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.length  >  0)  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
35	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.token.length()  >  0)  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.token.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.token.length()  >  0)  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
36	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.isLicense())  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.isLicense())  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.isLicense())  {	  if(preserve!=    null    &&    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	3	None	replace
37	[BUG]  [BUGGY]  Integer  fileLevelJsDocBuilder  =  next();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                  ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  Integer  fileLevelJsDocBuilder  =  next();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	Integer  fileLevelJsDocBuilder  =  next();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
38	[BUG]  [BUGGY]  Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                    ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	Integer  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
39	[BUG]  [BUGGY]  JSDocToken  fileLevelJsDocBuilder  =  next();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                      ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  JSDocToken  fileLevelJsDocBuilder  =  next();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	JSDocToken  fileLevelJsDocBuilder  =  next();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
40	[BUG]  [BUGGY]  State  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  State  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	State  fileLevelJsDocBuilder  =  getFileLevelJsDocBuilder();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
41	[BUG]  [BUGGY]  State  fileLevelJsDocBuilder  =  next();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  State  fileLevelJsDocBuilder  =  next();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	State  fileLevelJsDocBuilder  =  next();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
42	[BUG]  [BUGGY]  JSDocToken  next  =  next();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                            ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  JSDocToken  next  =  next();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	JSDocToken  next  =  next();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
43	[BUG]  [BUGGY]  State  fileLevelJsDocBuilder  =  stream.readLine();  [CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant  [FE]                              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  State  fileLevelJsDocBuilder  =  stream.readLine();  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	State  fileLevelJsDocBuilder  =  stream.readLine();	      	non-compiled	[CE]  an  enum  switch  case  label  must  be  the  unqualified  name  of  an  enumeration  constant	6	None	replace
44	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.length()!=  0)  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.length()!=  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.length()!=  0)  {	  if(preserve.length()!=    0)    {    	non-compiled	[CE]  orphaned  case	5	None	replace
45	[BUG]  [BUGGY]  if(preserve.length()  ==  0  ||  preserve.equals( " "))  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve.length()  ==  0  ||  preserve.equals( " "))  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve.length()  ==  0  ||  preserve.equals( " "))  {	  if(preserve.length()    ==    0)    {    	non-compiled	[CE]  orphaned  case	2	None	replace
46	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.VALUE_STRING)  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.VALUE_STRING)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.VALUE_STRING)  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
47	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.FIELD_NAME)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.FIELD_NAME)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.FIELD_NAME)  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
48	[BUG]  [BUGGY]  if(preserve!=  null  &&  fileLevelJsDocBuilder!=  null)  {  [CE]  orphaned  case  [FE]            ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  fileLevelJsDocBuilder!=  null)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  fileLevelJsDocBuilder!=  null)  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
49	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.VALUE_NULL)  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.VALUE_NULL)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.token!=  JsDocToken.VALUE_NULL)  {	  if(preserve!=    null)    {    	non-compiled	[CE]  orphaned  case	7	None	replace
50	[BUG]  [BUGGY]  if(preserve.length()  <=  0  ||  preserve.length()  ==  0)  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve.length()  <=  0  ||  preserve.length()  ==  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve.length()  <=  0  ||  preserve.length()  ==  0)  {	  if(preserve.length()    <=    0)    {    	non-compiled	[CE]  orphaned  case	9	None	replace
51	[BUG]  [BUGGY]  if(preserve  ==  null  ||  preserveInfo.length()  >  0)  {  [CE]  orphaned  case  [FE]        ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  ==  null  ||  preserveInfo.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  ==  null  ||  preserveInfo.length()  >  0)  {	  if(preserve!=    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
52	[BUG]  [BUGGY]  if(preserve!=  null  &&  preserveInfo.isSupported())  {  [CE]  orphaned  case  [FE]          ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  &&  preserveInfo.isSupported())  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  &&  preserveInfo.isSupported())  {	  if(preserve!=    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	1	None	replace
53	[BUG]  [BUGGY]  if(preserve  >=  null  ||  preserve.length()  >  0)  {  [CE]  orphaned  case  [FE]              ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve  >=  null  ||  preserve.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve  >=  null  ||  preserve.length()  >  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
54	[BUG]  [BUGGY]  if(preserve!=  null  ||  preserveInfo.length()  >  0)  {  [CE]  orphaned  case  [FE]                ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserve!=  null  ||  preserveInfo.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserve!=  null  ||  preserveInfo.length()  >  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
55	[BUG]  [BUGGY]  if(preserveInfo  ==  null  ||  preserveInfo.length()  >  0)  {  [CE]  orphaned  case  [FE]                  ComparisonFailure    [CONTEXT]    continue  retry;  case  LICENSE:  case  PRESERVE:  ExtractionInfo  preserveInfo  =  extractMultilineTextualBlock(token,  WhitespaceOption.PRESERVE);  String  preserve  =  preserveInfo.string;    [BUGGY]  if(preserveInfo  ==  null  ||  preserveInfo.length()  >  0)  {  [BUGGY]    if  (fileLevelJsDocBuilder  !=  null)  {  fileLevelJsDocBuilder.append(preserve);  }  }  token  =  preserveInfo.token;  continue  retry;  case  ENUM:  token  =  next();  [CLASS]  JsDocInfoParser  ErrorReporterParser  State  ExtractionInfo  ExtendedTypeInfo  WhitespaceOption  [METHOD]  parse  [RETURN_TYPE]  boolean  [VARIABLES]  Set  modifiesAnnotationKeywords  suppressionNames  Node  associatedNode  templateNode  typeNode  JsDocTokenStream  stream  FileLevelJsDocBuilder  fileLevelJsDocBuilder  String  annotationName  author  description  fileOverview  meaning  messageArg  messageId  name  paramDescription  preserve  reason  reference  returnDescription  string  templateTypeName  typeString  version  JSDocInfo  fileOverviewJSDocInfo  int  charno  lineno  Annotation  annotation  ExtractionInfo  authorInfo  blockInfo  descriptionInfo  fileOverviewInfo  meaningInfo  paramDescriptionInfo  preserveInfo  reasonInfo  referenceInfo  returnDescriptionInfo  templateInfo  versionInfo  ErrorReporter  errorReporter  boolean  isBracketedParam  matchingRc  JsDocToken  NO_UNREAD_TOKEN  token  unreadToken  WhitespaceOption  PRESERVE  SINGLE_LINE  TRIM  ErrorReporterParser  parser  State  NEXT_IS_ANNOTATION  SEARCHING_ANNOTATION  SEARCHING_NEWLINE  state  JSTypeExpression  type  List  extendedTypes  JSDocInfoBuilder  jsdocBuilder  StaticSourceFile  sourceFile  Map  annotationNames  	projects/Closure32/src/com/google/javascript/jscomp/parsing/JsDocInfoParser.java	0.8944271909999159	354	354	4	replace	if(preserveInfo  ==  null  ||  preserveInfo.length()  >  0)  {	  if(preserve    ==    null    ||    preserve.length()    >    0)    {    	non-compiled	[CE]  orphaned  case	4	None	replace
