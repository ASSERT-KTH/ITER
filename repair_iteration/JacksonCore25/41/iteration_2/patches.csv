bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i!=  INT_BINARY)  {  [CE]  cannot  find  symbol  INT_BINARY  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_BINARY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_BINARY)  {	  if(i!=    INT_RBRACKET)    {    if(i!=    INT_RBRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	6	None	replace
2	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
3	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
4	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
5	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  null;  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
6	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	38	3	replace
7	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	38	3	replace
8	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
9	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
10	[BUG]  [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_BINARY)  {  [CE]  cannot  find  symbol  INT_BINARY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_BINARY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY  ||  i  ==  INT_BINARY)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	44	None	replace
11	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	44	2	replace
12	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBRACKET)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	44	2	replace
13	[BUG]  [BUGGY]  if(i  <  0  ||  i  ==  INT_BINARY)  {  [CE]  cannot  find  symbol  INT_BINARY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  ==  INT_BINARY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  0  ||  i  ==  INT_BINARY)  {	  if(i    <    0    ||    i    ==    INT_RBRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	73	None	replace
14	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_binaryValue)  {  [CE]  cannot  find  symbol  INT_binaryValue  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_binaryValue)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_binaryValue)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_binaryValue	2	None	replace
15	[BUG]  [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_RBRACKET)  {  [CE]  cannot  find  symbol  INT_BINARY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	2	None	replace
16	[BUG]  [BUGGY]  if(i  ==  INT_OBJECT  ||  i  ==  INT_RCURLY)  {  [CE]  cannot  find  symbol  INT_OBJECT  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_OBJECT  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_OBJECT  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_OBJECT	2	None	replace
17	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  	66	3	replace
18	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  	66	3	replace
19	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	66	3	replace
20	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	66	3	replace
21	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	66	None	replace
22	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
23	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
24	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
25	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input;  return  null;  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input;  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input;  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
26	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	37	2	replace
27	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	37	2	replace
28	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
29	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
30	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i!=  INT_LBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i!=  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i!=  INT_LBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
31	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
32	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
33	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
34	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
35	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
36	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
37	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	53	None	replace
38	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
39	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  recyclable  buffers  now.  }  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  recyclable  buffers  now.  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  recyclable  buffers  now.  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    	non-compiled	[CE]  not  a  statement	47	None	replace
40	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input;  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input;  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    	non-compiled	[CE]  not  a  statement	47	None	replace
41	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  source,  symbol  table  and  recyclable  buffers  now.  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  source,  symbol  table  and  recyclable  buffers  now.  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  source,  symbol  table  and  recyclable  buffers  now.  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    	non-compiled	[CE]  not  a  statement	47	None	replace
42	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRBRACKET)  {  [CE]  cannot  find  symbol  INT_RBRBRACKET  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRBRACKET)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_RBRBRACKET	3	None	replace
43	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBURLY)  {  [CE]  cannot  find  symbol  INT_RBURLY  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_LBRACKET  ||  i  ==  INT_RBURLY)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_RBURLY	3	None	replace
44	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
45	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
46	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
47	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
48	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {	  if(i    >=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	61	3	replace
49	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {	  if(i    >=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	61	3	replace
50	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  break;  }  [CE]  break  outside  switch  or  loop  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  break;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  break;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input,    and    recyclable    buffers    now.    	non-compiled	[CE]  break  outside  switch  or  loop	36	None	replace
51	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input,    and    recyclable    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	36	3	replace
52	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input,    and    recyclable    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	36	3	replace
53	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {	  if(i    <    0)    {    if(i    >=    0)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	28	3	replace
54	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {	  if(i    <    0)    {    if(i    >=    0)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	28	3	replace
55	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
56	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
57	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i!=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i!=  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    if(i  ==  INT_RBRACKET  ||  i!=  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
58	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	43	None	add
59	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
60	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
61	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
62	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.END_OBJECT)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	33	None	add
63	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	55	None	replace
64	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_BINARY)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_BINARY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_BINARY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	non-compiled	[CE]  <identifier>  expected	55	None	replace
65	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
66	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
67	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
68	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input  |  and  recyclable  buffers  now.  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input  |  and  recyclable  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {  //  end-of-input  |  and  recyclable  buffers  now.	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
69	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {  //  end-of-input	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
70	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	68	None	replace
71	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	68	None	replace
72	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	68	2	replace
73	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	68	2	replace
74	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	68	2	replace
75	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	68	2	replace
76	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	34	2	replace
77	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	34	2	replace
78	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	34	2	replace
79	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	34	2	replace
80	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	34	None	replace
81	[BUG]  [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0    ||    i    ==    INT_RBRACKET)    {    if(i  <  0  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
82	[BUG]  [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  <  0  ||  i!=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  <  0  ||  i!=  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0    ||    i    ==    INT_RBRACKET)    {    if(i  <  0  ||  i!=  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
83	[BUG]  [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  <  0  ||  i  >=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  <  0  ||  i  >=  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0    ||    i    ==    INT_RBRACKET)    {    if(i  <  0  ||  i  >=  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
84	[BUG]  [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  If(i  <  0  ||  i  ==  INT_RBRACKET)  {  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  If(i  <  0  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0    ||    i    ==    INT_RBRACKET)    {    If(i  <  0  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  ';'  expected	72	None	add
85	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	70	2	replace
86	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	70	2	replace
87	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
88	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
89	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	70	None	replace
90	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	70	None	replace
91	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	30	2	replace
92	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	30	2	replace
93	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	30	2	replace
94	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	30	2	replace
95	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	30	None	replace
96	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]    IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	59	None	replace
97	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]      IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	59	None	replace
98	[BUG]  [BUGGY]  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
99	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  If(i  <  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  If(i  <  0)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  If(i  <  0)  {	  if(i    <    0)    {    If(i    <    0)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
100	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  If(i  <  0)  {  [CE]  ';'  expected  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  If(i  <  0)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  If(i  <  0)  {	  if(i    <    0)    {    If(i    <    0)    {    	non-compiled	[CE]  ';'  expected	27	None	replace
101	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
102	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
103	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
104	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
105	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    start-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	non-compiled	[CE]  not  a  statement	77	None	replace
106	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  source,  symbol  table  and  buffers  now.  }  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  source,  symbol  table  and  buffers  now.  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  source,  symbol  table  and  buffers  now.  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    start-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	non-compiled	[CE]  not  a  statement	77	None	replace
107	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    start-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	non-compiled	[CE]  not  a  statement	77	None	replace
108	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }  [CE]  not  a  statement  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  >=  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    start-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	non-compiled	[CE]  not  a  statement	77	None	replace
109	[BUG]  [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _nextAfterString();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	32	None	replace
110	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextBinaryValue();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextBinaryValue();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextBinaryValue();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _nextAfterString();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
111	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextString();  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextString();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextString();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _nextAfterString();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
112	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	48	2	replace
113	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	48	2	replace
114	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	48	2	replace
115	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	48	2	replace
116	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	48	3	replace
117	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	48	3	replace
118	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	48	3	replace
119	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  <  0)  {  close();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	48	3	replace
120	[BUG]  [BUGGY]  int  i  =  _skipString();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  int  i  =  _skipString();  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	int  i  =  _skipString();	  int    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
121	[BUG]  [BUGGY]  int  i  =  _skipBoolean();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  int  i  =  _skipBoolean();  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	int  i  =  _skipBoolean();	  int    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
122	[BUG]  [BUGGY]  int  i  =  _skipFieldEnd();  [CE]  <identifier>  expected  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  int  i  =  _skipFieldEnd();  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	int  i  =  _skipFieldEnd();	  int    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
123	[BUG]  [BUGGY]  int  i  =  _skipBinary();  [CE]  <identifier>  expected  [FE]                              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  int  i  =  _skipBinary();  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	int  i  =  _skipBinary();	  int    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
124	[BUG]  [BUGGY]  if(i  ==  INT_BINARY_VALUE  ||  i  ==  INT_BINARY_VALUE)  {  [CE]  cannot  find  symbol  INT_BINARY_VALUE  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY_VALUE  ||  i  ==  INT_BINARY_VALUE)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY_VALUE  ||  i  ==  INT_BINARY_VALUE)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_URLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY_VALUE	63	None	replace
125	[BUG]  [BUGGY]  if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_RCURLY)  {  [CE]  cannot  find  symbol  INT_BINARY_COMMA  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_BRBRACKET    ||    i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY_COMMA	40	None	replace
126	[BUG]  [BUGGY]  if(i  ==  INT_binaryValue  ||  i  ==  INT_RCURLY)  {  [CE]  cannot  find  symbol  INT_binaryValue  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_binaryValue  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_binaryValue  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_BRBRACKET    ||    i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_binaryValue	40	None	replace
127	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    >=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
128	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    >=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
129	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    >=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
130	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >>  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >>  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    >=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  >>  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
131	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
132	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  ==  INT_RBRACKET  ||  i!=  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
133	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
134	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  ==  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
135	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  =  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {	  if(i    <    =    INT_RBRACKET)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
136	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  =  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  if(i    <    =    INT_RBRACKET)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
137	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
138	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
139	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
140	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	65	None	add
141	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
142	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
143	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
144	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
145	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_LBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_LBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_LBRACKET)    {    if(i  ==  INT_LBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
146	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i!=  INT_LBRACKET)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i!=  INT_LBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_LBRACKET)    {    if(i!=  INT_LBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
147	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET)  {  If(i  ==  INT_LBRACKET)  {  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  If(i  ==  INT_LBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_LBRACKET)    {    If(i  ==  INT_LBRACKET)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
148	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  >=  INT_LBRACKET)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  >=  INT_LBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_LBRACKET)    {    if(i  >=  INT_LBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
149	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBYTE)  {  [CE]  cannot  find  symbol  INT_RBYTE  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBYTE)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBYTE)  {	  if(i    ==    INT_RCURLY)    {    if(i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_RBYTE	10	None	replace
150	[BUG]  [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  _currToken  =  JsonToken.VALUE_STRING;  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	_currToken  =  JsonToken.VALUE_STRING;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
151	[BUG]  [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [CE]  <identifier>  expected  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  _currToken  =  JsonToken.FIELD_NAME  +  1;  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	_currToken  =  JsonToken.FIELD_NAME  +  1;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
152	[BUG]  [BUGGY]  if(i  ==  INT_binaryValue)  {  [CE]  cannot  find  symbol  INT_binaryValue  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_binaryValue)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_binaryValue)  {	  if(i    ==    INT_BRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_binaryValue	78	None	replace
153	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  	57	3	replace
154	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  	57	3	replace
155	[BUG]  [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_BINARY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	57	None	replace
156	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  cannot  find  symbol  INT_RBURLY  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  cannot  find  symbol  INT_RBURLY	57	None	replace
157	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
158	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
159	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
160	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i!=  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i!=  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i!=  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
161	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
162	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
163	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
164	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
165	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i!=  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i!=  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	41	None	add
166	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  if(i  ==  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_QUOTE)  {  if(i  ==  INT_QUOTE)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_QUOTE)    {    if(i  ==  INT_QUOTE)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
167	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  if(i!=  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_QUOTE)  {  if(i!=  INT_QUOTE)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_QUOTE)    {    if(i!=  INT_QUOTE)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
168	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  if(i  >=  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_QUOTE)  {  if(i  >=  INT_QUOTE)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_QUOTE)    {    if(i  >=  INT_QUOTE)  {	  	non-compiled	[CE]  illegal  start  of  expression	45	None	add
169	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  If(i  ==  INT_QUOTE)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_QUOTE)  {  If(i  ==  INT_QUOTE)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_QUOTE)    {    If(i  ==  INT_QUOTE)  {	  	non-compiled	[CE]  ';'  expected	45	None	add
170	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBY)  {  [CE]  cannot  find  symbol  INT_RBY  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBY)  {	  if(i    ==    INT_RCURLY)    {    if(i!=    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_RBY	11	None	replace
171	[BUG]  [BUGGY]  if(i  <  _currToken.length)  {  [CE]  cannot  find  symbol  length  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  _currToken.length)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  _currToken.length)  {	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  length	14	None	replace
172	[BUG]  [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  _currToken  =  JsonToken.START_OBJECT;  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	_currToken  =  JsonToken.START_OBJECT;	  _currToken    =    JsonToken.FIELD_NAME;    	non-compiled	[CE]  <identifier>  expected	31	None	replace
173	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
174	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
175	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
176	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	38	2	replace
177	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbols    table    and    recyclable    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  	17	3	replace
178	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbols    table    and    recyclable    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_OBJECT  	17	3	replace
179	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName()  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName()  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName()	  	non-compiled	[CE]  ';'  expected	29	None	add
180	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
181	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
182	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
183	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
184	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
185	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
186	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
187	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
188	[BUG]  [BUGGY]  if(i  ==  INT_BRBRACKET)  {  [CE]  cannot  find  symbol  INT_BRBRACKET  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BRBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BRBRACKET)  {	  if(i    ==    INT_BRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BRBRACKET	78	None	replace
189	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i!=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	42	3	replace
190	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i!=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	42	3	replace
191	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]    IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
192	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException(   "   ");  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( "   ");  }	  	non-compiled	[CE]  illegal  start  of  expression	58	None	add
193	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName()  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName()  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName()	  	non-compiled	[CE]  ';'  expected	33	None	add
194	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	3	replace
195	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	3	replace
196	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	3	replace
197	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	3	replace
198	[BUG]  [BUGGY]  if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_BINARY_COMMA)  {  [CE]  cannot  find  symbol  INT_BINARY_COMMA  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_BINARY_COMMA)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_BINARY_COMMA)  {	  if(i    ==    INT_BRBRACKET    ||    i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY_COMMA	40	None	replace
199	[BUG]  [BUGGY]  if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_RBRACKET)  {  [CE]  cannot  find  symbol  INT_BINARY_COMMA  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY_COMMA  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_BRBRACKET    ||    i    ==    INT_RCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY_COMMA	40	None	replace
200	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input,    and    recycling    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	49	3	replace
201	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input,    and    recycling    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	49	3	replace
202	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  >=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	76	3	replace
203	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  >=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	76	3	replace
204	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	66	3	replace
205	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	66	3	replace
206	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	66	3	replace
207	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	66	3	replace
208	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  >=  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  0  ||  i  >=  INT_RBRACKET)  {	  if(i    <    0    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	73	3	replace
209	[BUG]  [BUGGY]  if(i  <  0  ||  i  >=  INT_RBRACKET)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  >=  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  0  ||  i  >=  INT_RBRACKET)  {	  if(i    <    0    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	73	3	replace
210	[BUG]  [BUGGY]  if(i  ==  INT_OBJECT  ||  i  ==  INT_RBRACKET)  {  [CE]  cannot  find  symbol  INT_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_OBJECT  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_OBJECT  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_OBJECT	44	None	replace
211	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	57	3	replace
212	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	57	3	replace
213	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
214	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
215	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
216	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
217	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  >=  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
218	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  If(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  If(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    If(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
219	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_LBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_LBRACKET)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	3	2	replace
220	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_LBRACKET)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_LBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_LBRACKET)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	3	2	replace
221	[BUG]  [BUGGY]  int  i  =  _textBuffer.length();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  int  i  =  _textBuffer.length();  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	int  i  =  _textBuffer.length();	  int    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
222	[BUG]  [BUGGY]  int  i  =  _skipSize();  [CE]  <identifier>  expected  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  int  i  =  _skipSize();  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	int  i  =  _skipSize();	  int    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
223	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  If(i  ==  INT_RBRACKET)  {  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  If(i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  If(i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY)    {    If(i    ==    INT_RCURLY)    {    	non-compiled	[CE]  ';'  expected	13	None	replace
224	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
225	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  INT_RBRACKET)  {  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
226	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    start-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	non-compiled	[CE]  not  a  statement	77	None	replace
227	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  recyclable  buffers  now.  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  recyclable  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  recyclable  buffers  now.	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    	non-compiled	[CE]  not  a  statement	47	None	replace
228	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	55	2	replace
229	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  END_ARRAY  	55	2	replace
230	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  close();  return  (_currToken  =  null);  }  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  close();  return  (_currToken  =  null);  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {  close();  return  (_currToken  =  null);  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
231	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input,  and  recycling  buffers  now.  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input,  and  recycling  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {  //  end-of-input,  and  recycling  buffers  now.	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
232	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	68	3	replace
233	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	68	3	replace
234	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  >  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  >  INT_RCURLY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	68	3	replace
235	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  >  INT_RCURLY)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  >  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  >  INT_RCURLY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	68	3	replace
236	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _nextAfterString();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
237	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [CE]  cannot  find  symbol  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _nextAfterString();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
238	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [CE]  cannot  find  symbol  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_LBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _nextAfterString();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
239	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RCRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RCRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RCRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
240	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	30	3	replace
241	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	30	3	replace
242	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  >=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	30	3	replace
243	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  >=  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	30	3	replace
244	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  =  false;  }  [CE]  cannot  find  symbol  end  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  =  false;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  end-of-input  =  false;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	non-compiled	[CE]  cannot  find  symbol  end	48	None	replace
245	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RCRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
246	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
247	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
248	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	59	3	replace
249	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	59	3	replace
250	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	59	2	replace
251	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	59	2	replace
252	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  If(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  START_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  If(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i!=    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    If(i!=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  ';'  expected	41	None	add
253	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  If(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  If(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    If(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  ';'  expected	43	None	add
254	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_BINARY)  {  [CE]  cannot  find  symbol  INT_BINARY  [FE]              junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET  ||  i  ==  INT_BINARY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_LBRACKET  ||  i  ==  INT_BINARY)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_BINARY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	5	None	replace
255	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
256	[BUG]  [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_RCURLY)  {  [CE]  cannot  find  symbol  INT_BINARY  [FE]            junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BINARY  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BINARY  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_BINARY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BINARY	4	None	replace
257	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	1	replace
258	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  0)  {  //  end-of-input,  and  recyclable  buffers  now.	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	75	1	replace
259	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [CE]  cannot  find  symbol  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  return  _nextAfterString();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.VALUE_STRING)    {    return    _nextAfterString();    }    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
260	[BUG]  [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  >=  0  ||  i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0  ||  i  ==  INT_RBRACKET)  {  if(i  >=  0  ||  i  ==  INT_RBRACKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0    ||    i    ==    INT_RBRACKET)    {    if(i  >=  0  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	72	None	add
261	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
262	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  (_currToken  =  null);  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
263	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    (_currToken    =    null);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
264	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	68	3	replace
265	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	68	3	replace
266	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	2	3	replace
267	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET  ||  i  >  INT_RCURLY)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	2	3	replace
268	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
269	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.START_OBJECT)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	34	3	replace
270	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	2	replace
271	[BUG]  [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_LBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	53	2	replace
272	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  =  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  =  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
273	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  START_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  =  INT_RBRACKET  ||  i  >=  INT_RCURLY)  {	  if(i    <    =    INT_RBRACKET)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
274	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  START_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  >  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  =  INT_RBRACKET  ||  i  >  INT_RCURLY)  {	  if(i    <    =    INT_RBRACKET)    {    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
275	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	66	3	replace
276	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	66	3	replace
277	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	59	3	replace
278	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	59	3	replace
279	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]      IllegalArgumentException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  =  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  =  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  throw  new  IllegalArgumentException( " ");  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBRACKET)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
280	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	30	3	replace
281	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	30	3	replace
282	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	56	None	add
283	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RANGE)  {  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
284	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRBACK)  {  [CE]  cannot  find  symbol  INT_RBRBACK  [FE]          junit.framework.AssertionFailedError:  Expected  token  END_ARRAY      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRBACK)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRBACK)  {	  if(i    ==    INT_RBRACKET    ||    i    ==    INT_RBURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_RBRBACK	3	None	replace
285	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  return  _nextAfterName();  }  [CE]  <identifier>  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBURLY)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(i    ==    INT_RBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  <identifier>  expected	57	None	replace
286	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  if(i  ==  INT_RCRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(_currToken!=    JsonToken.FIELD_NAME)    {    return    _nextAfterName();    }    if(i  ==  INT_RCRACKET  ||  i  ==  INT_RCURLY)  {  if(_currToken!=  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	29	None	add
287	[BUG]  [BUGGY]  int  i  =  _skipBounds();  [CE]  <identifier>  expected  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  int  i  =  _skipBounds();  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	int  i  =  _skipBounds();	  int    i    =    _skipWSOrEnd();    	non-compiled	[CE]  <identifier>  expected	71	None	replace
288	[BUG]  [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  and  recyclable  buffers  now.  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  and  recyclable  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things,    and    recyclable    buffers    now.    if(i  <  0)  {  //  end-of-input;  and  recyclable  buffers  now.	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
289	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  =  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  =  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_LBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
290	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
291	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  i  ==  INT_RBRACKET)  {  return  _nextAfterName();  }	  if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.START_OBJECT    ||    i    ==    INT_LBRACKET)    {    return    _nextAfterName();    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	70	3	replace
292	[BUG]  [BUGGY]  if(i  ==  INT_BUCKET)  {  [CE]  cannot  find  symbol  INT_BUCKET  [FE]        junit.framework.AssertionFailedError:  Expected  token  END_OBJECT      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_BUCKET)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_BUCKET)  {	  if(i    ==    INT_BRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_BUCKET	78	None	replace
293	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  null;  }  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  if(i  <  0)  {  //  end-of-input;  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
294	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  If(i  <  0)  {  //  end-of-input;  return  null;  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  If(i  <  0)  {  //  end-of-input;  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things,  and  recyclable  buffers  now.  If(i  <  0)  {  //  end-of-input;  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
295	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  If(i  <  0)  {  //  end-of-input;  return  null;  }  [CE]  illegal  start  of  expression  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  If(i  <  0)  {  //  end-of-input;  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  //  end-of-input  //  Should  actually  close/release  things  and  recyclable  buffers  now.  If(i  <  0)  {  //  end-of-input;  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    //    end-of-input;    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
296	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  >=  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
297	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  END_ARRAY    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  if(i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET)    {    if(_currToken    ==    JsonToken.FIELD_NAME    ||    i    ==    INT_RCURLY)    {    return    _nextAfterName();    }    if(i  ==  INT_RCURLY)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  i  ==  INT_RCURLY)  {  return  _nextAfterName();  }	  	non-compiled	[CE]  illegal  start  of  expression	67	None	add
298	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close/release();  return  null;  }  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close/release();  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close/release();  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	non-compiled	[CE]  not  a  statement	48	None	replace
299	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close/release();  }  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close/release();  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  <  0)  {  close/release();  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	non-compiled	[CE]  not  a  statement	48	None	replace
300	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  close();  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	add	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  close();  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	48	3	replace
301	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  close();  return  null;  }  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  close();  return  null;  }  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  close();  return  null;  }	  if(i    <    0)    {    //    end-of-input    //    Should    actually    close/release    things    //    like    input    source,    and    recyclable    buffers    now.    if(i    <    0)    {    close();    return    (_currToken    =    null);    }    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	48	3	replace
302	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  END_OBJECT    [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i    ==    INT_RBRACKET    ||    i    ==    INT_RCURLY)    {    if(i  >=  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
303	[BUG]  [BUGGY]  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      if  (_currToken  ==  JsonToken.FIELD_NAME)  {  return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();      [BUGGY]  if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.  [BUGGY]        close();  return  (_currToken  =  null);  }  _binaryValue  =  null;  if  (i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	657	659	1	replace	if(i  <  0)  {  start-of-input  and  Should  actually  close/release  things  //  like  input  source,  symbol  table  and  buffers  now.	  if(i    <    0)    {    //    end-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    recyclable    buffers    now.    if(i    <    0)    {    start-of-input    and    Should    actually    close/release    things    //    like    input    source,    symbol    table    and    buffers    now.    	non-compiled	[CE]  not  a  statement	77	None	replace
