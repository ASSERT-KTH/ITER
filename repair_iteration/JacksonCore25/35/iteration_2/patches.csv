bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
2	[BUG]  [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
3	[BUG]  [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
4	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  _inputEnd  =  count  -  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    -    2;    _inputEnd  =  count  -  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	1	add
5	[BUG]  [BUGGY]  _inputEnd  =  count  -  2;  _inputEnd  =  count  -  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  _inputEnd  =  count  -  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    2;    _inputEnd  =  count  -  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	26	1	add
6	[BUG]  [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2)  >=  0));  [CE]  not  a  statement  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2)  >=  0));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    2;    ((  _inputEnd  =  count  -  2)  >=  0));	  	non-compiled	[CE]  not  a  statement	26	None	add
7	[BUG]  [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2);  [CE]  ')'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    2;    ((  _inputEnd  =  count  -  2);	  	non-compiled	[CE]  ')'  expected	26	None	add
8	[BUG]  [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2)  ==  0));  [CE]  not  a  statement  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2)  ==  0));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    2;    ((  _inputEnd  =  count  -  2)  ==  0));	  	non-compiled	[CE]  not  a  statement	26	None	add
9	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
10	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
11	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
12	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
13	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
14	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
15	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
16	[BUG]  [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true  [CE]  ';'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
17	[BUG]  [BUGGY]  if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true  [CE]  ';'  expected  [FE]                    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
18	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(	  if(count    >    0)    {    for(int    i    =    0,    len    =    _reader.length;    i    <    len;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer[i]);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
19	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  '  [CE]  illegal  line  end  in  character  literal  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  '  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  '	  if(count    >    0)    {    for(int    i    =    0,    len    =    _reader.length;    i    <    len;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer[i]);    if(buf    	non-compiled	[CE]  illegal  line  end  in  character  literal	60	None	replace
20	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);	  if(count    >    0)    {    for(int    i    =    0,    len    =    _reader.length;    i    <    len;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer[i]);    if(buf    	non-compiled	[CE]  ';'  expected	60	None	replace
21	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  [CE]  inconvertible  types  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd);    _inputEnd    =    count    -    1;    	non-compiled	[CE]  inconvertible  types	73	None	replace
22	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputBuffer.read(_inputEnd,  count  -  1);  _inputEnd  =  count  -  1;  }  [CE]  cannot  find  symbol  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputBuffer.read(_inputEnd,  count  -  1);  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputBuffer.read(_inputEnd,  count  -  1);  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd);    _inputEnd    =    count    -    1;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
23	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputBuffer.read(_inputEnd);  _inputEnd  =  count  -  1;  }  [CE]  cannot  find  symbol  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputBuffer.read(_inputEnd);  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputBuffer.read(_inputEnd);  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd);    _inputEnd    =    count    -    1;    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
24	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd,  0,  count  -  1,  _bufferRecyclable);  [CE]  inconvertible  types  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd,  0,  count  -  1,  _bufferRecyclable);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd,  0,  count  -  1,  _bufferRecyclable);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1,    _bufferRecyclable);    	non-compiled	[CE]  inconvertible  types	75	None	replace
25	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  0,  count  -  1,  _bufferRecyclable);  [CE]  inconvertible  types  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  0,  count  -  1,  _bufferRecyclable);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  0,  count  -  1,  _bufferRecyclable);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1,    _bufferRecyclable);    	non-compiled	[CE]  inconvertible  types	75	None	replace
26	[BUG]  [BUGGY]  ((  Character)_inputBuffer).read(_inputEnd,  count  -  1,  _bufferRecyclable);  [CE]  inconvertible  types  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  Character)_inputBuffer).read(_inputEnd,  count  -  1,  _bufferRecyclable);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  Character)_inputBuffer).read(_inputEnd,  count  -  1,  _bufferRecyclable);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1,    _bufferRecyclable);    	non-compiled	[CE]  inconvertible  types	75	None	replace
27	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  /  4;	  _inputEnd    =    count    -    4;    	compilable	  [FE]  JsonParseException  	53	3	replace
28	[BUG]  [BUGGY]  _inputEnd  =  count  /  4;  [FE]  JsonParseException  [FE]    JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  /  4;	  _inputEnd    =    count    -    4;    	compilable	  [FE]  JsonParseException  	53	3	replace
29	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	40	None	add
30	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	40	None	add
31	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize);  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize);	  	non-compiled	[CE]  ';'  expected	40	None	add
32	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize);  int  _inputEnd  =  count  *  bufSize;  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize);  int  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize);  int  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  ';'  expected	40	None	add
33	[BUG]  [BUGGY]  ((  _inputEnd  =  count  *  bufSize));  [CE]  not  a  statement  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  *  bufSize));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  *  bufSize));	  _inputEnd    =    count    *    bufSize;    ((    _inputEnd    =    count    *    bufSize);    	non-compiled	[CE]  not  a  statement	54	None	replace
34	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	add
35	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	add
36	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  _inputStart  =  count  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  _inputStart  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputStart  =  count  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	7	None	add
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	add
38	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	2	add
39	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }	  	non-compiled	[CE]  illegal  start  of  type	7	None	add
40	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	add
41	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	add
42	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	add
43	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	add
44	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputStart  =  count  *  3;  [CE]  cannot  find  symbol  _inputStart  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  2;  _inputStart  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputEnd  =  count  *  2;  _inputStart  =  count  *  3;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	34	None	add
45	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	add
46	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	add
47	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    4;    _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	add
48	[BUG]  [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    4;    _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	add
49	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  int  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    4;    int  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
50	[BUG]  [BUGGY]  _inputEnd  =  count  *  4;  int  _inputEnd  =  count  *  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  int  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    4;    int  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	2	add
51	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    4;    _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	add
52	[BUG]  [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    4;    _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	add
53	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    4;    _inputEnd  =  count  *  5;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	add
54	[BUG]  [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  5;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  _inputEnd  =  count  *  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    4;    _inputEnd  =  count  *  5;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	3	1	add
55	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  2);  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  2);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  2);	  _inputEnd    =    count    *    2;    ((    _inputEnd    =    count    *    2);    	non-compiled	[CE]  ')'  expected	64	None	replace
56	[BUG]  [BUGGY]  _inputEnd  =  count  /  2;  ((  _inputEnd  =  count  *  2);  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  ((  _inputEnd  =  count  *  2);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  /  2;  ((  _inputEnd  =  count  *  2);	  _inputEnd    =    count    *    2;    ((    _inputEnd    =    count    *    2);    	non-compiled	[CE]  ')'  expected	64	None	replace
57	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  /  2  +  1;	  _inputEnd    =    count    /    2;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	19	3	replace
58	[BUG]  [BUGGY]  _inputEnd  =  count  /  2  +  1;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  /  2  +  1;	  _inputEnd    =    count    /    2;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	19	3	replace
59	[BUG]  [BUGGY]  _inputStart  =  count  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputStart  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputStart  =  count  +  1;	  _inputEnd    =    count    +    1;    _inputStart    =    count    +    1;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	11	None	replace
60	[BUG]  [BUGGY]  _inputStart  =  count  *  2;  [CE]  cannot  find  symbol  _inputStart  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputStart  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputStart  =  count  *  2;	  _inputEnd    =    count    *    2;    _inputStart    =    count    *    2;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	67	None	replace
61	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	1	add
62	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	43	1	add
63	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	43	2	add
64	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	43	2	add
65	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  _inputStart  =  count  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  _inputStart  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputStart  =  count  -  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	43	None	add
66	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  [CE]  illegal  start  of  type  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }	  	non-compiled	[CE]  illegal  start  of  type	43	None	add
67	[BUG]  [BUGGY]  ((  Character)_inputBuffer).read(_inputEnd,  count  -  1);  [CE]  inconvertible  types  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  Character)_inputBuffer).read(_inputEnd,  count  -  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  Character)_inputBuffer).read(_inputEnd,  count  -  1);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1);    	non-compiled	[CE]  inconvertible  types	74	None	replace
68	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  0,  count  -  1);  [CE]  inconvertible  types  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  0,  count  -  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  0,  count  -  1);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1);    	non-compiled	[CE]  inconvertible  types	74	None	replace
69	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
70	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
71	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
72	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
73	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
74	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
75	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
76	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	30	1	add
77	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  4  +  1;	  _inputEnd    =    count    *    2    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
78	[BUG]  [BUGGY]  _inputEnd  =  count  *  4  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  4  +  1;	  _inputEnd    =    count    *    2    +    1;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	21	2	replace
79	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	add
80	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	add
81	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize);  _inputEnd  =  count  *  bufSize;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize);  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize);  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  ';'  expected	38	None	add
82	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  BufSize;  _inputEnd  =  count  *  bufSize;  [CE]  cannot  find  symbol  BufSize  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  BufSize;  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  BufSize;  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  cannot  find  symbol  BufSize	38	None	add
83	[BUG]  [BUGGY]  if(count  <  =  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }	          if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
84	[BUG]  [BUGGY]  if(count  >  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }	          if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	17	None	replace
85	[BUG]  [BUGGY]  if(count  ==  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IOException( " ");  }	          if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
87	[BUG]  [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
88	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
89	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
90	[BUG]  [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length!=    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
91	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false  [CE]  ';'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length!=    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
92	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  _inputEnd  =  count  /  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    bufSize;    _inputEnd  =  count  /  bufSize;	  	compilable	  [FE]  ArithmeticException  	76	3	add
93	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize;  _inputEnd  =  count  /  bufSize;  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  _inputEnd  =  count  /  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    bufSize;    _inputEnd  =  count  /  bufSize;	  	compilable	  [FE]  ArithmeticException  	76	3	add
94	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]      ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  int  _inputEnd  =  count  /  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    bufSize;    int  _inputEnd  =  count  /  bufSize;	  	compilable	  [FE]  ArithmeticException  	76	3	add
95	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize;  int  _inputEnd  =  count  /  bufSize;  [FE]  ArithmeticException  [FE]      ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  int  _inputEnd  =  count  /  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    bufSize;    int  _inputEnd  =  count  /  bufSize;	  	compilable	  [FE]  ArithmeticException  	76	3	add
96	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize;  _inputEnd  =  count  /  bufSize);  [CE]  ';'  expected  [FE]        ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  _inputEnd  =  count  /  bufSize);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    bufSize;    _inputEnd  =  count  /  bufSize);	  	non-compiled	[CE]  ';'  expected	76	None	add
97	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize;  (_inputEnd  =  count  /  bufSize);  [CE]  not  a  statement  [FE]          ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  (_inputEnd  =  count  /  bufSize);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    bufSize;    (_inputEnd  =  count  /  bufSize);	  	non-compiled	[CE]  not  a  statement	76	None	add
98	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	46	2	replace
99	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	46	2	replace
100	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	46	3	replace
101	[BUG]  [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	46	3	replace
102	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	46	2	replace
103	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	46	2	replace
104	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	47	2	replace
105	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	47	2	replace
106	[BUG]  [BUGGY]  [FE]  IOException  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	47	3	replace
107	[BUG]  [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	47	3	replace
108	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count!=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count!=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	47	2	replace
109	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count!=  0)  {  throw  new  IOException( " ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count!=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count!=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	47	2	replace
110	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  2;  _inputEnd  =  count  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    2;    _inputEnd  =  count  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	1	add
111	[BUG]  [BUGGY]  _inputEnd  =  count  +  2;  _inputEnd  =  count  +  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  2;  _inputEnd  =  count  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    2;    _inputEnd  =  count  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	1	add
112	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  2;  int  _inputEnd  =  count  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    2;    int  _inputEnd  =  count  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	2	add
113	[BUG]  [BUGGY]  _inputEnd  =  count  +  2;  int  _inputEnd  =  count  +  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  2;  int  _inputEnd  =  count  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    2;    int  _inputEnd  =  count  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	2	add
114	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  2;  _inputEnd  =  count  +  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    2;    _inputEnd  =  count  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	1	add
115	[BUG]  [BUGGY]  _inputEnd  =  count  +  2;  _inputEnd  =  count  +  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  2;  _inputEnd  =  count  +  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    2;    _inputEnd  =  count  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	22	1	add
116	[BUG]  [BUGGY]  _inputEnd  =  count  +  2;  _inputStart  =  count  +  2;  [CE]  cannot  find  symbol  _inputStart  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  2;  _inputStart  =  count  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    2;    _inputStart  =  count  +  2;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	22	None	add
117	[BUG]  [BUGGY]  if(count  <  =  0)  {  if(_inputEnd  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  if(_inputEnd  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  if(_inputEnd  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
118	[BUG]  [BUGGY]  if(count  >  0)  {  if(_inputEnd  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  if(_inputEnd  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  if(_inputEnd  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	15	None	replace
119	[BUG]  [BUGGY]  if(count  ==  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
120	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
121	[BUG]  [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
122	[BUG]  [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count!=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
123	[BUG]  [BUGGY]  if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
124	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    4;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	add
125	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    4;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	add
126	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    4;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	add
127	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    4;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	add
128	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    4;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  5;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	add
129	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  5;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    4;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  5;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	add
130	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputStart  =  count  *  4;  [CE]  cannot  find  symbol  _inputStart  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  4;  _inputEnd  =  count  *  2;  _inputStart  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    4;    _inputEnd  =  count  *  2;  _inputStart  =  count  *  4;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	36	None	add
131	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  _inputBuffer.length;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  _inputBuffer.length;	  _inputEnd    =    count    *    bufPtr;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	2	replace
132	[BUG]  [BUGGY]  _inputEnd  =  count  *  _inputBuffer.length;  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  _inputBuffer.length;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  _inputBuffer.length;	  _inputEnd    =    count    *    bufPtr;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	2	replace
133	[BUG]  [BUGGY]  _inputEnd  =  count  *  _inputBufferSize;  [CE]  cannot  find  symbol  _inputBufferSize  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  _inputBufferSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  _inputBufferSize;	  _inputEnd    =    count    *    bufPtr;    	non-compiled	[CE]  cannot  find  symbol  _inputBufferSize	55	None	replace
134	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  FEAT_MASK_TRAILING_COMMA;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  FEAT_MASK_TRAILING_COMMA;	  _inputEnd    =    count    *    bufPtr;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	2	replace
135	[BUG]  [BUGGY]  _inputEnd  =  count  *  FEAT_MASK_TRAILING_COMMA;  [FE]  ArrayIndexOutOfBoundsException  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  FEAT_MASK_TRAILING_COMMA;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  FEAT_MASK_TRAILING_COMMA;	  _inputEnd    =    count    *    bufPtr;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	55	2	replace
136	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    bufSize    +    1;    _inputEnd  =  count  *  bufSize  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	1	add
137	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    bufSize    +    1;    _inputEnd  =  count  *  bufSize  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	1	add
138	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  ((  _inputEnd  +  1)  >=  _inputBuffer.length));  _inputEnd  =  count  *  bufSize  +  1;  [CE]  not  a  statement  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  ((  _inputEnd  +  1)  >=  _inputBuffer.length));  _inputEnd  =  count  *  bufSize  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    bufSize    +    1;    ((  _inputEnd  +  1)  >=  _inputBuffer.length));  _inputEnd  =  count  *  bufSize  +  1;	  	non-compiled	[CE]  not  a  statement	1	None	add
139	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  int  _inputEnd  =  count  *  bufSize  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    bufSize    +    1;    int  _inputEnd  =  count  *  bufSize  +  1;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	1	3	add
140	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  int  _inputEnd  =  count  *  bufSize  +  1;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  int  _inputEnd  =  count  *  bufSize  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    bufSize    +    1;    int  _inputEnd  =  count  *  bufSize  +  1;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	1	3	add
141	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  type  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    bufSize    +    1;    _inputEnd  =  count  *  bufSize  +  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }	  	non-compiled	[CE]  illegal  start  of  type	1	None	add
142	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  _inputEnd  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    1;    _inputEnd  =  count  *  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	add
143	[BUG]  [BUGGY]  _inputEnd  =  count  *  1;  _inputEnd  =  count  *  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  _inputEnd  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    1;    _inputEnd  =  count  *  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	add
144	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  int  _inputEnd  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    1;    int  _inputEnd  =  count  *  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	add
145	[BUG]  [BUGGY]  _inputEnd  =  count  *  1;  int  _inputEnd  =  count  *  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  int  _inputEnd  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    1;    int  _inputEnd  =  count  *  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	add
146	[BUG]  [BUGGY]  _inputEnd  =  count  *  1;  ((  _inputEnd  =  count  *  1);  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  ((  _inputEnd  =  count  *  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    1;    ((  _inputEnd  =  count  *  1);	  	non-compiled	[CE]  ')'  expected	5	None	add
147	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    1;    _inputEnd  =  count  *  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	add
148	[BUG]  [BUGGY]  _inputEnd  =  count  *  1;  _inputEnd  =  count  *  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    1;    _inputEnd  =  count  *  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	5	1	add
149	[BUG]  [BUGGY]  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1)  >=  0));  [CE]  not  a  statement  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1)  >=  0));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1)  >=  0));	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1)    ==    0));    	non-compiled	[CE]  not  a  statement	66	None	replace
150	[BUG]  [BUGGY]  ((  _inputEnd  =  count  +  1)  ==  0));  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  +  1)  ==  0));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  +  1)  ==  0));	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1)    ==    0));    	non-compiled	[CE]  not  a  statement	66	None	replace
151	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	48	None	add
152	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	48	None	add
153	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  int  _inputStart  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  int  _inputStart  =  count  -  1;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	48	2	add
154	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  int  _inputStart  =  count  -  1;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  int  _inputStart  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  int  _inputStart  =  count  -  1;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	48	2	add
155	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  [CE]  illegal  start  of  type  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }	  	non-compiled	[CE]  illegal  start  of  type	48	None	add
156	[BUG]  [BUGGY]  _symbols.remove(count);  [CE]  cannot  find  symbol  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _symbols.remove(count);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_symbols.remove(count);	  _symbols.clear();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
157	[BUG]  [BUGGY]  _symbols.remove(_inputPtr);  [CE]  cannot  find  symbol  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _symbols.remove(_inputPtr);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_symbols.remove(_inputPtr);	  _symbols.clear();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
158	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    3;    _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	1	add
159	[BUG]  [BUGGY]  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    3;    _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	1	add
160	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  int  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    3;    int  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	add
161	[BUG]  [BUGGY]  _inputEnd  =  count  *  3;  int  _inputEnd  =  count  *  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  int  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    3;    int  _inputEnd  =  count  *  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	2	add
162	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    3;    _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	1	add
163	[BUG]  [BUGGY]  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    3;    _inputEnd  =  count  *  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	78	1	add
164	[BUG]  [BUGGY]  _inputEnd  =  count  *  3;  ((  _inputEnd  =  count  *  3);  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  ((  _inputEnd  =  count  *  3);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    3;    ((  _inputEnd  =  count  *  3);	  	non-compiled	[CE]  ')'  expected	78	None	add
165	[BUG]  [BUGGY]  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1)  >=  0);  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1)  >=  0);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1)  >=  0);	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1)    ==    0);    	non-compiled	[CE]  not  a  statement	59	None	replace
166	[BUG]  [BUGGY]  ((  _inputEnd  =  count  +  1)  ==  0);  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  +  1)  ==  0);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  +  1)  ==  0);	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1)    ==    0);    	non-compiled	[CE]  not  a  statement	59	None	replace
167	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1)  >=  0);  [CE]  not  a  statement  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1)  >=  0);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1)  >=  0);	  _inputEnd    =    count    -    1;    ((    _inputEnd    =    count    -    1)    ==    0);    	non-compiled	[CE]  not  a  statement	51	None	replace
168	[BUG]  [BUGGY]  ((  _inputEnd  =  count  -  1)  ==  0);  [CE]  not  a  statement  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  -  1)  ==  0);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  -  1)  ==  0);	  _inputEnd    =    count    -    1;    ((    _inputEnd    =    count    -    1)    ==    0);    	non-compiled	[CE]  not  a  statement	51	None	replace
169	[BUG]  [BUGGY]  ||(count  <  0  &&  _inputEnd  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||(count  <  0  &&  _inputEnd  >  0))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||(count  <  0  &&  _inputEnd  >  0))  {  throw  new  IllegalArgumentException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
170	[BUG]  [BUGGY]  ||  count  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||  count  <  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||  count  <  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
171	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  2  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    2    +    1;    _inputEnd  =  count  *  2  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
172	[BUG]  [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  2  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  2  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    2    +    1;    _inputEnd  =  count  *  2  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
173	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  int  _inputEnd  =  count  *  2  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    2    +    1;    int  _inputEnd  =  count  *  2  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	add
174	[BUG]  [BUGGY]  _inputEnd  =  count  *  2  +  1;  int  _inputEnd  =  count  *  2  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  int  _inputEnd  =  count  *  2  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    2    +    1;    int  _inputEnd  =  count  *  2  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	2	add
175	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  3  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    2    +    1;    _inputEnd  =  count  *  3  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
176	[BUG]  [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  3  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  3  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    2    +    1;    _inputEnd  =  count  *  3  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
177	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  4  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    2    +    1;    _inputEnd  =  count  *  4  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
178	[BUG]  [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  4  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputEnd  =  count  *  4  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    2    +    1;    _inputEnd  =  count  *  4  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	20	1	add
179	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  _inputEnd  =  count  /  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    2;    _inputEnd  =  count  /  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	add
180	[BUG]  [BUGGY]  _inputEnd  =  count  /  2;  _inputEnd  =  count  /  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  _inputEnd  =  count  /  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    2;    _inputEnd  =  count  /  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	add
181	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  int  _inputEnd  =  count  /  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    2;    int  _inputEnd  =  count  /  2;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	18	3	add
182	[BUG]  [BUGGY]  _inputEnd  =  count  /  2;  int  _inputEnd  =  count  /  2;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  int  _inputEnd  =  count  /  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    2;    int  _inputEnd  =  count  /  2;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	18	3	add
183	[BUG]  [BUGGY]  _inputEnd  =  count  /  2;  ((  _inputEnd  =  count  /  2);  [CE]  ')'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  ((  _inputEnd  =  count  /  2);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    2;    ((  _inputEnd  =  count  /  2);	  	non-compiled	[CE]  ')'  expected	18	None	add
184	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  _inputEnd  =  count  /  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    2;    _inputEnd  =  count  /  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	add
185	[BUG]  [BUGGY]  _inputEnd  =  count  /  2;  _inputEnd  =  count  /  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  _inputEnd  =  count  /  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    2;    _inputEnd  =  count  /  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	18	1	add
186	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  [CE]  ')'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }	  _inputEnd    =    count    -    1;    ((    _inputEnd    =    count    -    1);    	non-compiled	[CE]  ')'  expected	50	None	replace
187	[BUG]  [BUGGY]  ((  _inputEnd  =  count  -  1);  [CE]  ')'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  -  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  -  1);	  _inputEnd    =    count    -    1;    ((    _inputEnd    =    count    -    1);    	non-compiled	[CE]  ')'  expected	50	None	replace
188	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
189	[BUG]  [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count!=  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
190	[BUG]  [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
191	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
192	[BUG]  [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
193	[BUG]  [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count!=  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count!=  0)  {  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
194	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
195	[BUG]  [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
196	[BUG]  [BUGGY]  if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
197	[BUG]  [BUGGY]  if(count  <  =  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
198	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        int    _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	32	None	add
199	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        int    _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	32	None	add
200	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  3;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        int    _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  3;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	32	None	add
201	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  1;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        int    _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  1;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	32	None	add
202	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	int  _inputEnd  =  count  +  1;	  _inputEnd    =    count    +    1;    int    _inputEnd    =    count    +    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	10	3	replace
203	[BUG]  [BUGGY]  int  _inputEnd  =  count  +  1;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	int  _inputEnd  =  count  +  1;	  _inputEnd    =    count    +    1;    int    _inputEnd    =    count    +    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	10	3	replace
204	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  bufSize  +  2;	  _inputEnd    =    count    *    bufSize    +    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	2	3	replace
205	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  2;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  bufSize  +  2;	  _inputEnd    =    count    *    bufSize    +    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	2	3	replace
206	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  bufSize  +  4;	  _inputEnd    =    count    *    bufSize    +    1;    	compilable	  [FE]  JsonParseException  	2	3	replace
207	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  4;  [FE]  JsonParseException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  bufSize  +  4;	  _inputEnd    =    count    *    bufSize    +    1;    	compilable	  [FE]  JsonParseException  	2	3	replace
208	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  _inputEnd  =  count  -  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    -    4;    _inputEnd  =  count  -  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	52	1	add
209	[BUG]  [BUGGY]  _inputEnd  =  count  -  4;  _inputEnd  =  count  -  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]    JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  _inputEnd  =  count  -  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    4;    _inputEnd  =  count  -  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	52	1	add
210	[BUG]  [BUGGY]  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  int  _inputEnd  =  count  -  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    -    4;    int  _inputEnd  =  count  -  4;	  	compilable	  [FE]  JsonParseException  	52	3	add
211	[BUG]  [BUGGY]  _inputEnd  =  count  -  4;  int  _inputEnd  =  count  -  4;  [FE]  JsonParseException  [FE]      JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  int  _inputEnd  =  count  -  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    4;    int  _inputEnd  =  count  -  4;	  	compilable	  [FE]  JsonParseException  	52	3	add
212	[BUG]  [BUGGY]  _inputEnd  =  count  -  4;  ((  _inputEnd  =  count  -  4);  [CE]  ')'  expected  [FE]        JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  ((  _inputEnd  =  count  -  4);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    4;    ((  _inputEnd  =  count  -  4);	  	non-compiled	[CE]  ')'  expected	52	None	add
213	[BUG]  [BUGGY]  _inputEnd  =  count  -  4;  ((  _inputEnd  =  count  -  4)  >=  0);  [CE]  not  a  statement  [FE]          JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  ((  _inputEnd  =  count  -  4)  >=  0);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    4;    ((  _inputEnd  =  count  -  4)  >=  0);	  	non-compiled	[CE]  not  a  statement	52	None	add
214	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
215	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
216	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  count);  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  count);  }	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
217	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  count);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  count);  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  0,  count);  }	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	12	2	replace
218	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
219	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	69	None	replace
220	[BUG]  [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
221	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        int    _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	9	None	add
222	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        int    _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	9	None	add
223	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  Integer  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  Integer  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        int    _inputEnd    =    count    +    1;    Integer  _inputEnd  =  count  +  1;  int  _inputEnd  =  count  +  1;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	9	None	add
224	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  int  _inputStart  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        +        1;        int    _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  _inputStart  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
225	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  int  _inputStart  =  count  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    int  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  int  _inputStart  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        int    _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  _inputStart  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	9	2	add
226	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1);    	non-compiled	[CE]  ')'  expected	58	None	replace
227	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  else  {  _inputPtr  =  0;  }  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  else  {  _inputPtr  =  0;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  else  {  _inputPtr  =  0;  }	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1);    	non-compiled	[CE]  ')'  expected	58	None	replace
228	[BUG]  [BUGGY]  ((  _inputEnd  =  count  +  1));  [CE]  not  a  statement  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  +  1));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  +  1));	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1);    	non-compiled	[CE]  not  a  statement	58	None	replace
229	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  _inputEnd  =  count  +  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    3;    _inputEnd  =  count  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	1	add
230	[BUG]  [BUGGY]  _inputEnd  =  count  +  3;  _inputEnd  =  count  +  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  _inputEnd  =  count  +  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    3;    _inputEnd  =  count  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	1	add
231	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  int  _inputEnd  =  count  +  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    3;    int  _inputEnd  =  count  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	2	add
232	[BUG]  [BUGGY]  _inputEnd  =  count  +  3;  int  _inputEnd  =  count  +  3;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  int  _inputEnd  =  count  +  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    3;    int  _inputEnd  =  count  +  3;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	2	add
233	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  _inputEnd  =  count  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    3;    _inputEnd  =  count  +  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	1	add
234	[BUG]  [BUGGY]  _inputEnd  =  count  +  3;  _inputEnd  =  count  +  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  _inputEnd  =  count  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    3;    _inputEnd  =  count  +  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	24	1	add
235	[BUG]  [BUGGY]  _inputEnd  =  count  +  3;  _inputStart  =  count  +  3;  [CE]  cannot  find  symbol  _inputStart  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  _inputStart  =  count  +  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    3;    _inputStart  =  count  +  3;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	24	None	add
236	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  _inputEnd  =  count  /  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    1;    _inputEnd  =  count  /  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	add
237	[BUG]  [BUGGY]  _inputEnd  =  count  /  1;  _inputEnd  =  count  /  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  _inputEnd  =  count  /  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    1;    _inputEnd  =  count  /  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	add
238	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  int  _inputEnd  =  count  /  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    1;    int  _inputEnd  =  count  /  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	add
239	[BUG]  [BUGGY]  _inputEnd  =  count  /  1;  int  _inputEnd  =  count  /  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  int  _inputEnd  =  count  /  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    1;    int  _inputEnd  =  count  /  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	add
240	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  _inputEnd  =  count  /  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    /    1;    _inputEnd  =  count  /  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	add
241	[BUG]  [BUGGY]  _inputEnd  =  count  /  1;  _inputEnd  =  count  /  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  _inputEnd  =  count  /  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    1;    _inputEnd  =  count  /  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	28	1	add
242	[BUG]  [BUGGY]  _inputEnd  =  count  /  1;  ((  _inputEnd  =  count  /  1);  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  ((  _inputEnd  =  count  /  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    1;    ((  _inputEnd  =  count  /  1);	  	non-compiled	[CE]  ')'  expected	28	None	add
243	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
244	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
245	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  <  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  <  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
246	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  <  0)  {  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  <  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  if(count  <  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
247	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'truue':  was  expecting  'null'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  /  3;	  _inputEnd    =    count    *    3;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'truue':  was  expecting  'null'  	79	3	replace
248	[BUG]  [BUGGY]  _inputEnd  =  count  /  3;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'truue':  was  expecting  'null'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  /  3;	  _inputEnd    =    count    *    3;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'truue':  was  expecting  'null'  	79	3	replace
249	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  4;  _inputEnd  =  count  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    4;    _inputEnd  =  count  +  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	add
250	[BUG]  [BUGGY]  _inputEnd  =  count  +  4;  _inputEnd  =  count  +  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  4;  _inputEnd  =  count  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    4;    _inputEnd  =  count  +  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	add
251	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  4;  int  _inputEnd  =  count  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    4;    int  _inputEnd  =  count  +  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	2	add
252	[BUG]  [BUGGY]  _inputEnd  =  count  +  4;  int  _inputEnd  =  count  +  4;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  4;  int  _inputEnd  =  count  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    4;    int  _inputEnd  =  count  +  4;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	2	add
253	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  4;  _inputEnd  =  count  +  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    +    4;    _inputEnd  =  count  +  5;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	add
254	[BUG]  [BUGGY]  _inputEnd  =  count  +  4;  _inputEnd  =  count  +  5;  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  4;  _inputEnd  =  count  +  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    4;    _inputEnd  =  count  +  5;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	56	1	add
255	[BUG]  [BUGGY]  _inputEnd  =  count  +  4;  _inputStart  =  count  +  4;  [CE]  cannot  find  symbol  _inputStart  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  4;  _inputStart  =  count  +  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    4;    _inputStart  =  count  +  4;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	56	None	add
256	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	int  _inputEnd  =  count  *  bufSize;	  _inputEnd    =    count    *    bufSize;    int    _inputEnd    =    count    *    bufSize;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	41	3	replace
257	[BUG]  [BUGGY]  int  _inputEnd  =  count  *  bufSize;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	int  _inputEnd  =  count  *  bufSize;	  _inputEnd    =    count    *    bufSize;    int    _inputEnd    =    count    *    bufSize;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	41	3	replace
258	[BUG]  [BUGGY]  ||(count  <  0  &&  _inputEnd  >  0))  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||(count  <  0  &&  _inputEnd  >  0))  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||(count  <  0  &&  _inputEnd  >  0))  {  throw  new  IOException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
259	[BUG]  [BUGGY]  ||  count  <  0)  {  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||  count  <  0)  {  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||  count  <  0)  {	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
260	[BUG]  [BUGGY]  if(count  <  0)  {  if(_inputPtr  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(_inputPtr  >  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(_inputPtr  >  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	15	None	replace
261	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  ')'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	62	None	replace
262	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
263	[BUG]  [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  ')'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	62	None	replace
264	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  expected  [CE]  ')'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  expected  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  expected	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	62	None	replace
265	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputStart  =  count  -  1;  _inputEnd  =  count  -  1;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputStart  =  count  -  1;  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    _inputStart  =  count  -  1;  _inputEnd  =  count  -  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	43	None	add
266	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1,  _inputEnd  =  count  -  1;  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1,  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1,  _inputEnd  =  count  -  1;	  	non-compiled	[CE]  ';'  expected	43	None	add
267	[BUG]  [BUGGY]  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  /  bufSize  +  1;	  _inputEnd    =    count    /    bufSize;    	compilable	  [FE]  ArithmeticException  	77	3	replace
268	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize  +  1;  [FE]  ArithmeticException  [FE]    ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  /  bufSize  +  1;	  _inputEnd    =    count    /    bufSize;    	compilable	  [FE]  ArithmeticException  	77	3	replace
269	[BUG]  [BUGGY]  _symbols.remove(_inputBuffer.length);  [CE]  cannot  find  symbol  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _symbols.remove(_inputBuffer.length);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_symbols.remove(_inputBuffer.length);	  _symbols.clear();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
270	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length!=    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
271	[BUG]  [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length!=    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
272	[BUG]  [BUGGY]  if(count!=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count!=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count!=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length!=  0)  {  return  false;  }	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length!=    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	63	None	replace
273	[BUG]  [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
274	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
275	[BUG]  [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	65	None	replace
276	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize;  (_inputEnd  =  count  /  bufSize;  [CE]  ')'  expected  [FE]    ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  (_inputEnd  =  count  /  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    bufSize;    (_inputEnd  =  count  /  bufSize;	  	non-compiled	[CE]  ')'  expected	76	None	add
277	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  	  if(count    >    0)    {    for(int    i    =    0,    len    =    _reader.length;    i    <    len;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer[i]);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
278	[BUG]  [BUGGY]  _inputEnd  =  count  *  2;  _inputStart  =  count  *  4;  [CE]  cannot  find  symbol  _inputStart  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2;  _inputStart  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  2;  _inputStart  =  count  *  4;	  _inputEnd    =    count    *    2;    _inputStart    =    count    *    2;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	67	None	replace
279	[BUG]  [BUGGY]  _inputEnd  =  count  *  4;  _inputStart  =  count  *  4;  [CE]  cannot  find  symbol  _inputStart  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  _inputStart  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  4;  _inputStart  =  count  *  4;	  _inputEnd    =    count    *    2;    _inputStart    =    count    *    2;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	67	None	replace
280	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  int  _inputEnd  =  count  -  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    -    2;    int  _inputEnd  =  count  -  2;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	26	3	add
281	[BUG]  [BUGGY]  _inputEnd  =  count  -  2;  int  _inputEnd  =  count  -  2;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  int  _inputEnd  =  count  -  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    2;    int  _inputEnd  =  count  -  2;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'  	26	3	add
282	[BUG]  [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2)  ==  0);  [CE]  not  a  statement  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  2;  ((  _inputEnd  =  count  -  2)  ==  0);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    2;    ((  _inputEnd  =  count  -  2)  ==  0);	  	non-compiled	[CE]  not  a  statement	26	None	add
283	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  Integer  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  Integer  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    Integer  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	40	None	add
284	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  int  _inputStart  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  int  _inputStart  =  count  *  bufSize;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	40	3	add
285	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  int  _inputStart  =  count  *  bufSize;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  int  _inputStart  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  int  _inputStart  =  count  *  bufSize;	  	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	40	3	add
286	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  8;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  8;	  _inputEnd    =    count    *    2;    _inputEnd    =    count    *    4;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
287	[BUG]  [BUGGY]  _inputEnd  =  count  *  8;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  8;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  8;	  _inputEnd    =    count    *    2;    _inputEnd    =    count    *    4;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
288	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd,  _buffer.length  -  1);  [CE]  cannot  find  symbol  _buffer  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd,  _buffer.length  -  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd,  _buffer.length  -  1);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1);    	non-compiled	[CE]  cannot  find  symbol  _buffer	74	None	replace
289	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  4;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        int    _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  4;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	32	None	add
290	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	47	2	replace
291	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  throw  new  IOException( " ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	47	2	replace
292	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  ((  _inputEnd  =  count  *  bufSize  +  1);  [CE]  ')'  expected  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  ((  _inputEnd  =  count  *  bufSize  +  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    bufSize    +    1;    ((  _inputEnd  =  count  *  bufSize  +  1);	  	non-compiled	[CE]  ')'  expected	1	None	add
293	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  ((  _inputEnd  +  1)  >=  _inputBuffer.length));  [CE]  not  a  statement  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  ((  _inputEnd  +  1)  >=  _inputBuffer.length));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    bufSize    +    1;    ((  _inputEnd  +  1)  >=  _inputBuffer.length));	  	non-compiled	[CE]  not  a  statement	1	None	add
294	[BUG]  [BUGGY]  if(count  <  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
295	[BUG]  [BUGGY]  if(count  ==  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
296	[BUG]  [BUGGY]  if(count  >=  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
297	[BUG]  [BUGGY]  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  _inputBuffer.length);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  _inputBuffer.length);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  _inputBuffer.length);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
298	[BUG]  [BUGGY]  if(count  <  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
299	[BUG]  [BUGGY]  if(count  ==  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
300	[BUG]  [BUGGY]  if(count  >=  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
301	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  _inputStart  =  count  *  bufSize;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  _inputStart  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputStart  =  count  *  bufSize;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	38	None	add
302	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputStart  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  [CE]  cannot  find  symbol  _inputStart  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  _inputStart  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    _inputStart  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	38	None	add
303	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
304	[BUG]  [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
305	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
306	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
307	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputStart  =  count  +  1;  _inputEnd  =  count  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputStart  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    _inputStart  =  count  +  1;  _inputEnd  =  count  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	7	None	add
308	[BUG]  [BUGGY]  _inputEnd  =  count  +  3;  ((  _inputEnd  =  count  +  3);  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  +  3;  ((  _inputEnd  =  count  +  3);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    +    3;    ((  _inputEnd  =  count  +  3);	  	non-compiled	[CE]  ')'  expected	24	None	add
309	[BUG]  [BUGGY]  _inputEnd  =  count  *  _inputBuffer;  [CE]  bad  operand  types  for  binary  operator  '*'  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  _inputBuffer;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  _inputBuffer;	  _inputEnd    =    count    *    bufPtr;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '*'	55	None	replace
310	[BUG]  [BUGGY]  _inputEnd  =  count  *  4;  ((  _inputEnd  =  count  *  4);  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  4;  ((  _inputEnd  =  count  *  4);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  4;  ((  _inputEnd  =  count  *  4);	  _inputEnd    =    count    *    2;    ((    _inputEnd    =    count    *    2);    	non-compiled	[CE]  ')'  expected	64	None	replace
311	[BUG]  [BUGGY]  _inputEnd  =  count  *  2;  ((  _inputEnd  =  count  *  4);  [CE]  ')'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2;  ((  _inputEnd  =  count  *  4);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  2;  ((  _inputEnd  =  count  *  4);	  _inputEnd    =    count    *    2;    ((    _inputEnd    =    count    *    2);    	non-compiled	[CE]  ')'  expected	64	None	replace
312	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _reader.read(_inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _reader.read(_inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
313	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _reader.read(_inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _reader.read(_inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _reader.read(_inputBuffer,  0,  _inputPtr);  _inputPtr  =  0;  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	49	2	replace
314	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }  [CE]  inconvertible  types  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _inputPtr  =  0;  }	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd);    _inputEnd    =    count    -    1;    	non-compiled	[CE]  inconvertible  types	73	None	replace
315	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }  [CE]  inconvertible  types  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd);    _inputEnd    =    count    -    1;    	non-compiled	[CE]  inconvertible  types	73	None	replace
316	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputStart  =  count  *  2;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputEnd  =  count  *  2;  _inputStart  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    2;    _inputEnd  =  count  *  2;  _inputStart  =  count  *  2;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	30	None	add
317	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  ')'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	61	None	replace
318	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
319	[BUG]  [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  ')'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	61	None	replace
320	[BUG]  [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  expected  [CE]  ')'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  expected  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  expected	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	61	None	replace
321	[BUG]  [BUGGY]  _inputEnd  =  count  -  4;  ((  _inputEnd  =  count  -  4;  [CE]  ')'  expected  [FE]    JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  ((  _inputEnd  =  count  -  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    4;    ((  _inputEnd  =  count  -  4;	  	non-compiled	[CE]  ')'  expected	52	None	add
322	[BUG]  [BUGGY]  if(count  <  0)  {  if(_inputPtr  >  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  if(_inputPtr  >  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  if(_inputPtr  >  0)  {  throw  new  IOException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	16	None	replace
323	[BUG]  [BUGGY]  ||  count  <  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||  count  <  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||  count  <  0)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
324	[BUG]  [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
325	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [CE]  ';'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
326	[BUG]  [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [CE]  ';'  expected  [FE]                    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
327	[BUG]  [BUGGY]  _inputStart  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputStart  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputStart  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;	  _inputEnd    =    count    *    bufSize;    _inputEnd    =    count    *    bufSize;    	non-compiled	[CE]  cannot  find  symbol  _inputStart	39	None	replace
328	[BUG]  [BUGGY]  _inputEnd  =  count  *  2  +  1;  ((  _inputEnd  =  count  *  2  +  1);  [CE]  ')'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  ((  _inputEnd  =  count  *  2  +  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    2    +    1;    ((  _inputEnd  =  count  *  2  +  1);	  	non-compiled	[CE]  ')'  expected	20	None	add
329	[BUG]  [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputStart  =  count  *  2  +  1;  [CE]  cannot  find  symbol  _inputStart  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  2  +  1;  _inputStart  =  count  *  2  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    2    +    1;    _inputStart  =  count  *  2  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	20	None	add
330	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  Integer  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  Integer  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    Integer  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	48	None	add
331	[BUG]  [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	69	None	replace
332	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	69	None	replace
333	[BUG]  [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [CE]  '('  or  '['  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  '('  or  '['  expected	69	None	replace
334	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  else  {  _inputPtr  =  0;  }  [CE]  ')'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  else  {  _inputPtr  =  0;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  else  {  _inputPtr  =  0;  }	  _inputEnd    =    count    -    1;    ((    _inputEnd    =    count    -    1);    	non-compiled	[CE]  ')'  expected	50	None	replace
335	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  }	  _inputEnd    =    count    *    bufSize;    int    _inputEnd    =    count    *    bufSize;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	41	3	replace
336	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  }	  _inputEnd    =    count    *    bufSize;    int    _inputEnd    =    count    *    bufSize;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	41	3	replace
337	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputPtr,  _inputPtr);  _input  [CE]  not  a  statement  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputPtr,  _inputPtr);  _input  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputPtr,  _inputPtr);  _input	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	non-compiled	[CE]  not  a  statement	12	None	replace
338	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputPtr,  _inputPtr,  _inputPtr  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputPtr,  _inputPtr,  _inputPtr  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputPtr,  _inputPtr,  _inputPtr	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
339	[BUG]  [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [CE]  ';'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
340	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
341	[BUG]  [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >=  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
342	[BUG]  [BUGGY]  ((  _inputEnd  =  count  *  bufSize);  [CE]  ')'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  *  bufSize);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  *  bufSize);	  _inputEnd    =    count    *    bufSize;    ((    _inputEnd    =    count    *    bufSize);    	non-compiled	[CE]  ')'  expected	54	None	replace
343	[BUG]  [BUGGY]  if(count  <  =  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
344	[BUG]  [BUGGY]  if(count  <  1)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [CE]  ';'  expected  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  return  false;  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	71	None	replace
345	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  else  {  throw  new  IOException( " ");  }  [CE]  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  _inputEnd  =  count  -  1);  }  else  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    ((    _inputEnd    =    count    -    1);    	non-compiled	[CE]  	50	None	replace
346	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	46	3	replace
347	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  ==  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    ==    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	46	3	replace
348	[BUG]  [BUGGY]  _inputEnd  =  count  /  2;  _inputStart  =  count  /  2;  [CE]  cannot  find  symbol  _inputStart  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  2;  _inputStart  =  count  /  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    2;    _inputStart  =  count  /  2;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	18	None	add
349	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	48	None	add
350	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  return  false;  }  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    int  _inputEnd  =  count  -  1;  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        int    _inputEnd    =    count    -    1;    if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  return  false;  }	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	48	None	add
351	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  else  {  throw  new  IOException( " ");  }  [CE]  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  else  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  ((  _inputEnd  =  count  +  1);  }  else  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    +    1;    ((    _inputEnd    =    count    +    1);    	non-compiled	[CE]  	58	None	replace
352	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	int  _inputEnd  =  count  *  2;	  _inputEnd    =    count    *    2;    int    _inputEnd    =    count    *    2;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	33	3	replace
353	[BUG]  [BUGGY]  int  _inputEnd  =  count  *  2;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	int  _inputEnd  =  count  *  2;	  _inputEnd    =    count    *    2;    int    _inputEnd    =    count    *    2;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	33	3	replace
354	[BUG]  [BUGGY]  if(count  <  1)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  if(_inputEnd  >  0)  {  throw  new  IOException( " ");  }	          if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	17	None	replace
355	[BUG]  [BUGGY]  if(count  >  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IOException( " ");  }	          if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
356	[BUG]  [BUGGY]  if(count  <  =  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
357	[BUG]  [BUGGY]  if(count  <  1)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  int[]  bufSize  =  _reader.readFully(_inputBuffer,  0,  count);  if(bufSize  ==  0)  {  throw  new  IOException( " ");  }	          if(count    >    0)    {    int[]    bufSize    =    _reader.readFully(_inputBuffer,    0,    count);    if(bufSize    ==    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	68	None	replace
358	[BUG]  [BUGGY]  if(count  <  1)  {  if(_inputEnd  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  if(_inputEnd  >  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  if(_inputEnd  >  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  ';'  expected	14	None	replace
359	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  5;	  _inputEnd    =    count    *    2;    _inputEnd    =    count    *    4;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
360	[BUG]  [BUGGY]  _inputEnd  =  count  *  5;  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  5;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  5;	  _inputEnd    =    count    *    2;    _inputEnd    =    count    *    4;    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	37	2	replace
361	[BUG]  [BUGGY]  ((  _inputEnd  =  count  *  2);  [CE]  ')'  expected  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  *  2);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  *  2);	  _inputEnd    =    count    *    2;    ((    _inputEnd    =    count    *    2);    	non-compiled	[CE]  ')'  expected	64	None	replace
362	[BUG]  [BUGGY]  ((  _inputEnd  =  count  *  2));  [CE]  not  a  statement  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ((  _inputEnd  =  count  *  2));  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	((  _inputEnd  =  count  *  2));	  _inputEnd    =    count    *    2;    ((    _inputEnd    =    count    *    2);    	non-compiled	[CE]  not  a  statement	64	None	replace
363	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputStart  =  count  *  2;  _inputEnd  =  count  *  3;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    _inputEnd  =  count  *  3;  _inputStart  =  count  *  2;  _inputEnd  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        _inputEnd    =    count    *    3;    _inputStart  =  count  *  2;  _inputEnd  =  count  *  3;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	34	None	add
364	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  _inputPtr  -  1,  _bufferRecyclable);  [CE]  inconvertible  types  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  _inputPtr  -  1,  _bufferRecyclable);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  _inputPtr  -  1,  _bufferRecyclable);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1,    _bufferRecyclable);    	non-compiled	[CE]  inconvertible  types	75	None	replace
365	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  count  -  1,  _bufferRecyclable);  [CE]  inconvertible  types  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  count  -  1,  _bufferRecyclable);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  count  -  1,  _bufferRecyclable);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1,    _bufferRecyclable);    	non-compiled	[CE]  inconvertible  types	75	None	replace
366	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputStartOffset  =  count  +  1;  _inputEnd  =  count  +  1;  [CE]  cannot  find  symbol  _inputStartOffset  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  _inputStartOffset  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    _inputStartOffset  =  count  +  1;  _inputEnd  =  count  +  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStartOffset	7	None	add
367	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    int  inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	add
368	[BUG]  [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    +    1;    _inputEnd  =  count  +  1;  int  inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        +        1;        _inputEnd    =    count    +    1;    int  inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	7	1	add
369	[BUG]  [BUGGY]  _inputEnd  =  count  *  1;  _inputStart  =  count  *  1;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  1;  _inputStart  =  count  *  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    1;    _inputStart  =  count  *  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	5	None	add
370	[BUG]  [BUGGY]  if(count  >  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  if(_inputEnd  <  =  0)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
371	[BUG]  [BUGGY]  ||  count  <  _inputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||  count  <  _inputEnd)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||  count  <  _inputEnd)  {  throw  new  IllegalArgumentException( " ");  }	  if(count    ==    0)    {    if(_inputEnd    >    0)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
372	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize;  ((  _inputEnd  =  count  /  bufSize);  [CE]  ')'  expected  [FE]    ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  ((  _inputEnd  =  count  /  bufSize);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    bufSize;    ((  _inputEnd  =  count  /  bufSize);	  	non-compiled	[CE]  ')'  expected	76	None	add
373	[BUG]  [BUGGY]  _inputEnd  =  count  /  bufSize;  _inputStart  =  count  /  bufSize;  [CE]  cannot  find  symbol  _inputStart  [FE]      ArithmeticException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  bufSize;  _inputStart  =  count  /  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    bufSize;    _inputStart  =  count  /  bufSize;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	76	None	add
374	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	int  _inputEnd  =  count  -  1;	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	49	3	replace
375	[BUG]  [BUGGY]  int  _inputEnd  =  count  -  1;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  int  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	int  _inputEnd  =  count  -  1;	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	49	3	replace
376	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  [FE]      com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  int  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }	  _inputEnd    =    count    -    1;    int    _inputEnd    =    count    -    1;    	non-compiled	[CE]  cannot  find  symbol	49	None	replace
377	[BUG]  [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
378	[BUG]  [BUGGY]  if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    false;    }    	non-compiled	[CE]  ';'  expected	70	None	replace
379	[BUG]  [BUGGY]  [FE]  IOException  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	47	3	replace
380	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [FE]  IOException  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(_inputPtr  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  if(count  >=  0)  {  throw  new  IOException( " ");  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >=    0)    {    throw    new    IOException(   "   ");    }    	compilable	  [FE]  IOException  	47	3	replace
381	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
382	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
383	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
384	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
385	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  <  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
386	[BUG]  [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  0)  {  _inputEnd  =  count  -  1;  }  else  {  _inputEnd  =  count  -  1;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    }    else    if(count    >    0)    {    _inputEnd    =    count    -    1;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	45	2	replace
387	[BUG]  [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  ==  0)  {  return  false;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    ==    0)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
388	[BUG]  [BUGGY]  if(count  <  1)  {  if(_inputEnd  >  1)  {  throw  new  IOException( " ");  }  [CE]  ';'  expected  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  if(_inputEnd  >  1)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  if(_inputEnd  >  1)  {  throw  new  IOException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  ';'  expected	16	None	replace
389	[BUG]  [BUGGY]  ||  count  <  0)  {  throw  new  IOException( " ");  }  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||  count  <  0)  {  throw  new  IOException( " ");  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||  count  <  0)  {  throw  new  IOException( " ");  }	  if(count    <    0)    {    if(_inputEnd    >    0)    {    throw    new    IOException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
390	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputStartOffset  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [CE]  cannot  find  symbol  _inputStartOffset  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    int  _inputEnd  =  count  *  bufSize;  _inputStartOffset  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        int    _inputEnd    =    count    *    bufSize;    _inputStartOffset  =  count  *  bufSize;  int  _inputEnd  =  count  *  bufSize;	  	non-compiled	[CE]  cannot  find  symbol  _inputStartOffset	40	None	add
391	[BUG]  [BUGGY]  _inputEnd  =  count  /  1;  _inputStart  =  count  /  1;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  /  1;  _inputStart  =  count  /  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    /    1;    _inputStart  =  count  /  1;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	28	None	add
392	[BUG]  [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
393	[BUG]  [BUGGY]  if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [CE]  ';'  expected  [FE]                  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  return  true;  }	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    return    true;    }    	non-compiled	[CE]  ';'  expected	72	None	replace
394	[BUG]  [BUGGY]  if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException( "  [CE]  unclosed  string  literal  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException( "  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException( "	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  unclosed  string  literal	69	None	replace
395	[BUG]  [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
396	[BUG]  [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException( "  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException( "  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException( "	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
397	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf.length  >  0)  {  throw  new  IOException(	          if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf.length    >    0)    {    throw    new    IOException(   "    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
398	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd    =    count    *    bufSize    +    1;    _inputEnd  =  count  *  bufSize  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	1	add
399	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  2;  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  +  1;  _inputEnd  =  count  *  bufSize  +  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    bufSize    +    1;    _inputEnd  =  count  *  bufSize  +  2;	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	1	1	add
400	[BUG]  [BUGGY]  _symbols.remove(_inputBuffer,  _inputPtr);  [CE]  cannot  find  symbol  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _symbols.remove(_inputBuffer,  _inputPtr);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_symbols.remove(_inputBuffer,  _inputPtr);	  _symbols.clear();    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
401	[BUG]  [BUGGY]  ||(_inputEnd  =  count  *  bufSize);  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  ||(_inputEnd  =  count  *  bufSize);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	||(_inputEnd  =  count  *  bufSize);	  _inputEnd    =    count    *    bufSize;    ((    _inputEnd    =    count    *    bufSize);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
402	[BUG]  [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1,  _inputEnd  -  1;  _inputEnd  =  count  -  1;  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1,  _inputEnd  -  1;  _inputEnd  =  count  -  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        -        1;        _inputEnd    =    count    -    1;    _inputEnd  =  count  -  1,  _inputEnd  -  1;  _inputEnd  =  count  -  1;	  	non-compiled	[CE]  ';'  expected	43	None	add
403	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }  [CE]  cannot  find  symbol  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  _flushBuffer();  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
404	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  return  false;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	44	2	replace
405	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  return  false;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  return  false;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  _inputEnd  =  count  -  1;  }  else  {  return  false;  }	  _inputEnd    =    count    -    1;    _inputEnd    =    count    -    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'  	44	2	replace
406	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	add
407	[BUG]  [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    bufSize;    _inputEnd  =  count  *  bufSize;  if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        bufSize;        _inputEnd    =    count    *    bufSize;    if(count  >  0)  {  _inputEnd  =  count  *  bufSize;  _inputEnd  =  count  *  bufSize;  }	  	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	add
408	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  ')'  expected  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	62	None	replace
409	[BUG]  [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
410	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _closeInput();  }  [CE]  inconvertible  types  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _closeInput();  }  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputEnd);  _inputEnd  =  count  -  1;  }  else  {  _closeInput();  }	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd);    _inputEnd    =    count    -    1;    	non-compiled	[CE]  inconvertible  types	73	None	replace
411	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  /  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	add	_inputEnd  =  count  *  bufSize  /  1;	  _inputEnd    =    count    *    bufSize    +    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	2	3	replace
412	[BUG]  [BUGGY]  _inputEnd  =  count  *  bufSize  /  1;  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  [FE]    com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'ue':  was  expecting  ('true'    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  bufSize  /  1;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  *  bufSize  /  1;	  _inputEnd    =    count    *    bufSize    +    1;    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'  	2	3	replace
413	[BUG]  [BUGGY]  if(count  <  1)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(	  if(count    >    0)    {    for(int    i    =    0,    len    =    _reader.length;    i    <    len;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer[i]);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
414	[BUG]  [BUGGY]  if(count  <  1)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  1)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  1)  {  if(count  >  0)  {  for(int  i  =  0,  len  =  _reader.length;  i  <  len;  ++i)  {  char[]  buf  =  _reader.read(_inputBuffer[i]);  if(buf!=	  if(count    >    0)    {    for(int    i    =    0,    len    =    _reader.length;    i    <    len;    ++i)    {    char[]    buf    =    _reader.read(_inputBuffer[i]);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
415	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  _inputPtr,  _inputPtr  [CE]  ')'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  _inputPtr,  _inputPtr  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  _inputPtr,  _inputPtr	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
416	[BUG]  [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  _inputPtr,  _inputEnd  [CE]  ')'  expected  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  _inputPtr,  _inputEnd  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  >  0)  {  _inputEnd  =  count  +  1;  _inputEnd  =  count  +  1;  }  else  {  System.arraycopy(_inputBuffer,  0,  _inputBuffer,  _inputPtr,  _inputEnd	  _inputEnd    =    count    +    1;    _inputEnd    =    count    +    1;    }    	non-compiled	[CE]  ')'  expected	12	None	replace
417	[BUG]  [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  Integer  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  [CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd    =    count    *    2;    int  _inputEnd  =  count  *  2;  Integer  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd        =        count        *        2;        int    _inputEnd    =    count    *    2;    Integer  _inputEnd  =  count  *  2;  int  _inputEnd  =  count  *  2;	  	non-compiled	[CE]  variable  _inputEnd  is  already  defined  in  method  _loadMore()	32	None	add
418	[BUG]  [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  ')'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  ==  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  ')'  expected	61	None	replace
419	[BUG]  [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'use':  was  expecting  ('true'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	if(count  <  =  0)  {  for(int  i  =  0;  i  <  count;  i++)  {  char[]  buf  =  _reader.read(_inputBuffer,  0,  buf.length);  if(buf!=  ')'	  if(count    >    0)    {    for(int    i    =    0;    i    <    count;    i++)    {    char[]    buf    =    _reader.read(_inputBuffer,    0,    buf.length);    if(buf    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
420	[BUG]  [BUGGY]  _inputEnd  =  count  *  3;  _inputStart  =  count  *  3;  [CE]  cannot  find  symbol  _inputStart  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  *  3;  _inputStart  =  count  *  3;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    *    3;    _inputStart  =  count  *  3;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	78	None	add
421	[BUG]  [BUGGY]  _inputEnd  =  count  -  4;  _inputStart  =  count  -  4;  [CE]  cannot  find  symbol  _inputStart  [FE]    JsonParseException    [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  4;  _inputStart  =  count  -  4;  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd    =    count    -    4;    _inputStart  =  count  -  4;	  	non-compiled	[CE]  cannot  find  symbol  _inputStart	52	None	add
422	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  count  -  1);  [CE]  inconvertible  types  [FE]          com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  count  -  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  count  -  1);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1);    	non-compiled	[CE]  inconvertible  types	74	None	replace
423	[BUG]  [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  _inputPtr  -  1);  [CE]  inconvertible  types  [FE]            com.fasterxml.jackson.core.JsonParseException:  Unrecognized  token  'tue':  was  expecting  'null'      [CONTEXT]          _nameStartOffset  -=  bufSize;  if  (_reader  !=  null)  {  int  count  =  _reader.read(_inputBuffer,  0,  _inputBuffer.length);  if  (count  >  0)  {  _inputPtr  =  0;      [BUGGY]  _inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  _inputPtr  -  1);  [BUGGY]      return  true;  }  _closeInput();  if  (count  ==  0)  {  throw  new  IOException(     "Reader  returned  0  characters  when  trying  to  read       "+_inputEnd);  }  }  return  false;  [CLASS]  ReaderBasedJsonParser  [METHOD]  _loadMore  [RETURN_TYPE]  boolean  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  Reader  _reader  r  int[]  _icLatin1  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bufSize  count  end  features  origPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	246	246	1	replace	_inputEnd  =  count  -  1;  ((  Character)_inputBuffer).read(_inputBuffer,  _inputPtr  -  1);	  _inputEnd    =    count    -    1;    ((    Character)_inputBuffer).read(_inputEnd,    count    -    1);    	non-compiled	[CE]  inconvertible  types	74	None	replace
