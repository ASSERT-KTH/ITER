bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_LF)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LF)    {    if(i  ==  INT_LF)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
2	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_LONG)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_LONG)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LF)    {    if(i  ==  INT_LONG)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
3	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_FLUSH)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LF)    {    if(i  ==  INT_FLUSH)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
4	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_L)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_L)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LF)    {    if(i  ==  INT_L)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
5	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  >=  INT_LCURLY)  {	  if(_currInputRow    >    0)    {    if(_currInputRow    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	16	1	replace
6	[BUG]  [BUGGY]  if(_inputPtr  >=  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  INT_LCURLY)  {	  if(_currInputRow    >    0)    {    if(_currInputRow    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	16	1	replace
7	[BUG]  [BUGGY]  if(_inputPtr  >=  INT_CLOSE)  {  [CE]  cannot  find  symbol  INT_CLOSE  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  INT_CLOSE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  INT_CLOSE)  {	  if(_currInputRow    >    0)    {    if(_currInputRow    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	16	None	replace
8	[BUG]  [BUGGY]  if(i  >=  INT_CLOSE)  {  [CE]  cannot  find  symbol  INT_CLOSE  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_CLOSE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_CLOSE)  {	  if(_currInputRowStart    >=    INT_CLOSE)    {    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	83	None	replace
9	[BUG]  [BUGGY]  if(i!=  INT_CLOSE)  {  [CE]  cannot  find  symbol  INT_CLOSE  [FE]            com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_CLOSE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=  INT_CLOSE)  {	  if(_currInputRowStart    >=    INT_CLOSE)    {    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	83	None	replace
10	[BUG]  [BUGGY]  if(_currInputRowStart!=  INT_CLOSE)  {  [CE]  cannot  find  symbol  INT_CLOSE  [FE]              com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart!=  INT_CLOSE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart!=  INT_CLOSE)  {	  if(_currInputRowStart    >=    INT_CLOSE)    {    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	83	None	replace
11	[BUG]  [BUGGY]  if(_currInputRowStart  >  0)  {  if(_currInputRowStart  >  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >  0)  {  if(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >    0)    {    if(_currInputRowStart  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
12	[BUG]  [BUGGY]  if(_currInputRowStart  >  0)  {  If(_currInputRowStart  >  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >  0)  {  If(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >    0)    {    If(_currInputRowStart  >  0)  {	  	non-compiled	[CE]  ';'  expected	46	None	add
13	[BUG]  [BUGGY]  if(_currInputRowStart  >  0)  {  if(_currInputRowEnt  >  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >  0)  {  if(_currInputRowEnt  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >    0)    {    if(_currInputRowEnt  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
14	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
15	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
16	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
17	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_RBRACKET)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	61	1	replace
18	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	61	1	replace
19	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  ==  INT_RCURLY)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	61	1	replace
20	[BUG]  [BUGGY]  int  i  =  _currInputRow.length;  [CE]  illegal  start  of  type  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  int  i  =  _currInputRow.length;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	int  i  =  _currInputRow.length;	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
21	[BUG]  [BUGGY]  Integer  i  =  _currInputRow.length;  [CE]  illegal  start  of  type  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  Integer  i  =  _currInputRow.length;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	Integer  i  =  _currInputRow.length;	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
22	[BUG]  [BUGGY]  char  i  =  _currInputRow.length;  [CE]  illegal  start  of  type  [FE]            com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  char  i  =  _currInputRow.length;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	char  i  =  _currInputRow.length;	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
23	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
24	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_TAB)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
25	[BUG]  [BUGGY]  if(_currInputRowStart  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  <  =  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  <  =  0)  {	  if(_currInputRow    <    =    0)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
26	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
27	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  If(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  If(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    If(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {	  	non-compiled	[CE]  ';'  expected	23	None	add
28	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  if(i  >=  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    if(i  >=  INT_RBRACKET  ||  i  >  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	23	None	add
29	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
30	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
31	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
32	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LF)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
33	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
34	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
35	[BUG]  [BUGGY]  _currInputRow  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _currInputRow  =  _inputPtr;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_currInputRow  =  _inputPtr;	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
36	[BUG]  [BUGGY]  if(_inputPtr  <  0)  {  if(_inputPtr  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  0)  {  if(_inputPtr  <  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    <    0)    {    if(_inputPtr  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
37	[BUG]  [BUGGY]  if(_inputPtr  <  0)  {  If(_inputPtr  <  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  0)  {  If(_inputPtr  <  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    <    0)    {    If(_inputPtr  <  0)  {	  	non-compiled	[CE]  ';'  expected	52	None	add
38	[BUG]  [BUGGY]  if(_inputPtr  <  0)  {  if(_inputPtr  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  0)  {  if(_inputPtr  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    <    0)    {    if(_inputPtr  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	52	None	add
39	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >=  INT_LF)  {	  if(_currInputRowStart    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	58	1	replace
40	[BUG]  [BUGGY]  if(i  >=  INT_LF)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_LF)  {	  if(_currInputRowStart    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	58	1	replace
41	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i!=  INT_LF)  {	  if(_currInputRowStart    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	58	1	replace
42	[BUG]  [BUGGY]  if(i!=  INT_LF)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=  INT_LF)  {	  if(_currInputRowStart    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	58	1	replace
43	[BUG]  [BUGGY]  if(_currInputRowStart  <  0)  {  if(_currInputRowStart  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  <  0)  {  if(_currInputRowStart  <  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    <    0)    {    if(_currInputRowStart  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
44	[BUG]  [BUGGY]  if(_currInputRowStart  <  0)  {  If(_currInputRowStart  <  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  <  0)  {  If(_currInputRowStart  <  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    <    0)    {    If(_currInputRowStart  <  0)  {	  	non-compiled	[CE]  ';'  expected	54	None	add
45	[BUG]  [BUGGY]  if(_currInputRowStart  <  0)  {  if(_currInputRowStart  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  <  0)  {  if(_currInputRowStart  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    <    0)    {    if(_currInputRowStart  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	54	None	add
46	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    >=    INT_LCURLY)    {    if(i  >=  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
47	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    >=    INT_LCURLY)    {    if(i!=  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
48	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    >=    INT_LCURLY)    {    if(i  ==  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
49	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >>  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(i  >>  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    >=    INT_LCURLY)    {    if(i  >>  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	11	None	add
50	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_LF)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LF)    {    if(i  <  INT_LF)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
51	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_LONG)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_LONG)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LF)    {    if(i  <  INT_LONG)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
52	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_FLUSH)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_FLUSH)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LF)    {    if(i  <  INT_FLUSH)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
53	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  if(i  <  INT_FLOAT)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LF)    {    if(i  <  INT_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
54	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i!=  INT_RCURLY)  {	  if(i    <    =    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	71	1	replace
55	[BUG]  [BUGGY]  if(i!=  INT_RCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=  INT_RCURLY)  {	  if(i    <    =    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	71	1	replace
56	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _currInputRowStart  =  _inputPtr;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_currInputRowStart  =  _inputPtr;	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
57	[BUG]  [BUGGY]  _inputPtr  =  _inputPtr;  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _inputPtr  =  _inputPtr;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_inputPtr  =  _inputPtr;	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
58	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  >=  0)  {	  if(_currInputRowStart    ==    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	49	1	replace
59	[BUG]  [BUGGY]  if(_inputPtr  >=  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  0)  {	  if(_currInputRowStart    ==    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	49	1	replace
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  ==  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  ==  0)  {	  if(_currInputRowStart    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
61	[BUG]  [BUGGY]  if(_inputPtr  ==  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  ==  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  ==  0)  {	  if(_currInputRowStart    ==    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	49	1	replace
62	[BUG]  [BUGGY]  if(_inputPtr  >=  INT_LCURLY)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  INT_LCURLY)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  INT_LCURLY)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
63	[BUG]  [BUGGY]  if(_inputPtr  >=  INT_CLOSE)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  INT_CLOSE)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  INT_CLOSE)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
64	[BUG]  [BUGGY]  if(_inputPtr  <  INT_LCURLY)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  INT_LCURLY)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  <  INT_LCURLY)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
65	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    ==    _inputEnd)    {    if(_inputPtr  ==  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
66	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    ==    _inputEnd)    {    if(_inputPtr  >=  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
67	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    ==    _inputEnd)    {    if(_inputPtr!=  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	35	None	add
68	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  If(_inputPtr  ==  _inputEnd)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  If(_inputPtr  ==  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    ==    _inputEnd)    {    If(_inputPtr  ==  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	35	None	add
69	[BUG]  [BUGGY]  if(_currInputRowStart  ==  0)  {  if(_currInputRowStart  ==  0)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  ==  0)  {  if(_currInputRowStart  ==  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    ==    0)    {    if(_currInputRowStart  ==  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
70	[BUG]  [BUGGY]  if(_currInputRowStart  ==  0)  {  if(_currInputRowStart!=  0)  {  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  ==  0)  {  if(_currInputRowStart!=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    ==    0)    {    if(_currInputRowStart!=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
71	[BUG]  [BUGGY]  if(_currInputRowStart  ==  0)  {  if(_currInputRowStart  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  ==  0)  {  if(_currInputRowStart  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    ==    0)    {    if(_currInputRowStart  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	48	None	add
72	[BUG]  [BUGGY]  if(_currInputRowStart  ==  0)  {  If(_currInputRowStart  ==  0)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  ==  0)  {  If(_currInputRowStart  ==  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    ==    0)    {    If(_currInputRowStart  ==  0)  {	  	non-compiled	[CE]  ';'  expected	48	None	add
73	[BUG]  [BUGGY]  _throwInternal();  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _throwInternal();  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_throwInternal();	  _throwInvalidSpace(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
74	[BUG]  [BUGGY]  _throwInvalidSpace();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _throwInvalidSpace();  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_throwInvalidSpace();	  _throwInvalidSpace(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
75	[BUG]  [BUGGY]  _throwInvalidSpace(i  +  1);  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _throwInvalidSpace(i  +  1);  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_throwInvalidSpace(i  +  1);	  _throwInvalidSpace(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
76	[BUG]  [BUGGY]  _throwInvalidSpace(i,  _inputPtr);  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _throwInvalidSpace(i,  _inputPtr);  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_throwInvalidSpace(i,  _inputPtr);	  _throwInvalidSpace(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
77	[BUG]  [BUGGY]  i  =(char)_inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  i  =(char)_inputBuffer[_inputPtr++];  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	i  =(char)_inputBuffer[_inputPtr++];	  i    =(int)_inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
78	[BUG]  [BUGGY]  i  =(byte)_inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  i  =(byte)_inputBuffer[_inputPtr++];  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	i  =(byte)_inputBuffer[_inputPtr++];	  i    =(int)_inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
79	[BUG]  [BUGGY]  _inputPtr  =(char)_inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _inputPtr  =(char)_inputBuffer[_inputPtr++];  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_inputPtr  =(char)_inputBuffer[_inputPtr++];	  i    =(int)_inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
80	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
81	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >>  _inputEnd)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >>  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    if(i  <  INT_LCURLY)  {  if(_inputPtr  >>  _inputEnd)  {  _throwInvalidSpace(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
82	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr!=  _inputEnd)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr!=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    if(i  <  INT_LCURLY)  {  if(_inputPtr!=  _inputEnd)  {  _throwInvalidSpace(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
83	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  ==  _inputEnd)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  ==  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    if(i  <  INT_LCURLY)  {  if(_inputPtr  ==  _inputEnd)  {  _throwInvalidSpace(i);  }	  	non-compiled	[CE]  illegal  start  of  expression	76	None	add
84	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
85	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i  ==  INT_RCURLY  ||  i!=  INT_TAB)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i  ==  INT_RCURLY  ||  i!=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    if(i  ==  INT_RCURLY  ||  i!=  INT_TAB)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
86	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i!=  INT_RCURLY  ||  i  ==  INT_TAB)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i!=  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    if(i!=  INT_RCURLY  ||  i  ==  INT_TAB)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
87	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {	  	non-compiled	[CE]  illegal  start  of  expression	64	None	add
88	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >=  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	79	1	replace
89	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_TAB)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >=  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	79	1	replace
90	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY  ||  i  >=  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	79	1	replace
91	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY  ||  i  >=  INT_TAB)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY  ||  i  >=  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	79	1	replace
92	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_TAB)  {  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY  ||  i  >  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
93	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	1	replace
94	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	79	1	replace
95	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart  >=  0)  {	  if(_currInputRow    <    0)    {    if(_currInputRow    >=    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	22	1	replace
96	[BUG]  [BUGGY]  if(_currInputRowStart  >=  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  >=  0)  {	  if(_currInputRow    <    0)    {    if(_currInputRow    >=    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	22	1	replace
97	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  if(_inputPtr  >  0)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >  0)  {  if(_inputPtr  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    >    0)    {    if(_inputPtr  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	50	None	add
98	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  If(_inputPtr  >  0)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >  0)  {  If(_inputPtr  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    >    0)    {    If(_inputPtr  >  0)  {	  	non-compiled	[CE]  ';'  expected	50	None	add
99	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RBRACKET)    {    if(i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
100	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RBRACKET)    {    if(i!=  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
101	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RBRACKET)    {    if(i  >=  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
102	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  If(i  ==  INT_RBRACKET)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  If(i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RBRACKET)    {    If(i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
103	[BUG]  [BUGGY]  if(i  <  INT_LONG  ||  i  >  INT_LONG)  {  [CE]  cannot  find  symbol  INT_LONG  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LONG  ||  i  >  INT_LONG)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LONG  ||  i  >  INT_LONG)  {	  if(i    <    INT_LCURLY    ||    i    >    INT_LCURLY)    {    	non-compiled	[CE]  cannot  find  symbol  INT_LONG	85	None	replace
104	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >  INT_RCURLY)  {	  if(i    <    INT_LCURLY    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	85	1	replace
105	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_RCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >  INT_RCURLY)  {	  if(i    <    INT_LCURLY    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	85	1	replace
106	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i!=  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY)    {    if(i!=    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	26	1	replace
107	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY)    {    if(i!=    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	26	1	replace
108	[BUG]  [BUGGY]  If(_currInputRow  <  0)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  If(_currInputRow  <  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	If(_currInputRow  <  0)  {	  if(_currInputRow    <    0)    {    If(_currInputRow    <    0)    {    	non-compiled	[CE]  ';'  expected	21	None	replace
109	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  <  INT_LCURLY)  {	  if(_currInputRow    <    0)    {    If(_currInputRow    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	21	1	replace
110	[BUG]  [BUGGY]  if(_inputPtr  <  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  <  INT_LCURLY)  {	  if(_currInputRow    <    0)    {    If(_currInputRow    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	21	1	replace
111	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
112	[BUG]  [BUGGY]  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
113	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
114	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  If(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  If(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    If(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {	  	non-compiled	[CE]  ';'  expected	87	None	add
115	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    if(i  >=  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
116	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RBRACKET  ||  i  >  INT_RCKET)  {  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RBRACKET  ||  i  >  INT_RCKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    if(i  <  INT_RBRACKET  ||  i  >  INT_RCKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
117	[BUG]  [BUGGY]  If(_inputPtr  >=  _inputEnd)  {  [CE]  ';'  expected  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  If(_inputPtr  >=  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	If(_inputPtr  >=  _inputEnd)  {	  if(_inputPtr    <    _inputEnd)    {    If(_inputPtr    <    _inputEnd)    {    	non-compiled	[CE]  ';'  expected	40	None	replace
118	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	80	1	replace
119	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	80	1	replace
120	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	1	replace
121	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	1	replace
122	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	1	replace
123	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY  ||  i  ==  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	80	1	replace
124	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
125	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  <  0  ||  _currInputRow  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRow  <  0  ||  _currInputRow  >  0)  {	  if(_currInputRowStart    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	55	1	replace
126	[BUG]  [BUGGY]  if(_currInputRow  <  0  ||  _currInputRow  >  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  <  0  ||  _currInputRow  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow  <  0  ||  _currInputRow  >  0)  {	  if(_currInputRowStart    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	55	1	replace
127	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRow  >=  0)  {	  if(_currInputRowStart    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	55	1	replace
128	[BUG]  [BUGGY]  if(_currInputRow  >=  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  >=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow  >=  0)  {	  if(_currInputRowStart    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	55	1	replace
129	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=    INT_LCURLY)    {    if(i!=  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
130	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=    INT_LCURLY)    {    if(i  ==  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
131	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=    INT_LCURLY)    {    if(i  >=  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
132	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  >>  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_LCURLY)  {  if(i  >>  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=    INT_LCURLY)    {    if(i  >>  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
133	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY    ||    i    >    INT_LCURLY)    {    if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
134	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  If(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  If(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY    ||    i    >    INT_LCURLY)    {    If(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  	non-compiled	[CE]  ';'  expected	84	None	add
135	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(i  <  INT_LONG  ||  i  >  INT_LONG)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(i  <  INT_LONG  ||  i  >  INT_LONG)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY    ||    i    >    INT_LCURLY)    {    if(i  <  INT_LONG  ||  i  >  INT_LONG)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
136	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    else    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
137	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY  ||  i  ==  INT_TAB)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    else    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
138	[BUG]  [BUGGY]  _skipWSOrEnd2();  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _skipWSOrEnd2();  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_skipWSOrEnd2();	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    else    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
139	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
140	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >>  _inputEnd)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  >>  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    if(i  <  INT_LCURLY)  {  if(_inputPtr  >>  _inputEnd)  {  return  _skipWSOrEnd2();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
141	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr!=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr!=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    if(i  <  INT_LCURLY)  {  if(_inputPtr!=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
142	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  ==  _inputEnd)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  <  INT_LCURLY)  {  if(_inputPtr  ==  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    if(i  <  INT_LCURLY)  {  if(_inputPtr  ==  _inputEnd)  {  return  _skipWSOrEnd2();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
143	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	78	1	replace
144	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	78	1	replace
145	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY  ||  i  >  INT_RBRACKET)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_RBRACKET)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
146	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_RBRACKET)    {    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
147	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >=  INT_RBRACKET)  {	  if(i    <    =    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	1	replace
148	[BUG]  [BUGGY]  if(i  >=  INT_RBRACKET)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_RBRACKET)  {	  if(i    <    =    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	86	1	replace
149	[BUG]  [BUGGY]  if(i  >  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >  INT_LCURLY)  {  if(i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    >    INT_LCURLY)    {    if(i  >  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
150	[BUG]  [BUGGY]  if(i  >  INT_LCURLY)  {  If(i  >  INT_LCURLY)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >  INT_LCURLY)  {  If(i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    >    INT_LCURLY)    {    If(i  >  INT_LCURLY)  {	  	non-compiled	[CE]  ';'  expected	81	None	add
151	[BUG]  [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart  >=  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart  >=  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >=    _inputEnd)    {    if(_currInputRowStart  >=  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
152	[BUG]  [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart!=  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart!=  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >=    _inputEnd)    {    if(_currInputRowStart!=  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
153	[BUG]  [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart  >>  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart  >>  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >=    _inputEnd)    {    if(_currInputRowStart  >>  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
154	[BUG]  [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart  ==  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  if(_currInputRowStart  ==  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >=    _inputEnd)    {    if(_currInputRowStart  ==  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	57	None	add
155	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  >=  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	88	1	replace
156	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >=  INT_RBRACKET)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  >=  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	88	1	replace
157	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	88	1	replace
158	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	88	1	replace
159	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
160	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
161	[BUG]  [BUGGY]  if(i  ==  INT_CLOSE)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_CLOSE)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_CLOSE)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
162	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
163	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
164	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
165	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  INT_LCURLY)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
166	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
167	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  INT_LONG)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  INT_LONG)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  INT_LONG)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
168	[BUG]  [BUGGY]  if(_inputPtr  <  INT_CLOSE)  {  [CE]  cannot  find  symbol  INT_CLOSE  [FE]        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  INT_CLOSE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  <  INT_CLOSE)  {	  if(_currInputRow    <    0)    {    if(_currInputRow    <    0)    {    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	20	None	replace
169	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
170	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RCURLY  ||  i!=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i  ==  INT_RCURLY  ||  i!=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    if(i  ==  INT_RCURLY  ||  i!=  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
171	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i!=  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i!=  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    if(i!=  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
172	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i  >=  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  if(i  >=  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    if(i  >=  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	60	None	add
173	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_QUOTE)  {	  if(i    ==    INT_LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
174	[BUG]  [BUGGY]  if(i  ==  INT_QUOTE)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_QUOTE)  {	  if(i    ==    INT_LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
175	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_TAB)  {	  if(i    ==    INT_LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
176	[BUG]  [BUGGY]  if(i  ==  INT_TAB)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_TAB)  {	  if(i    ==    INT_LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
177	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
178	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
179	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_LONG)  {  return  _skipWSOrEnd2();  }  [CE]  cannot  find  symbol  INT_LONG  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_LONG)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_LONG)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  cannot  find  symbol  INT_LONG	75	None	replace
180	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_CLOSE)  {  return  _skipWSOrEnd2();  }  [CE]  cannot  find  symbol  INT_CLOSE  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_CLOSE)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_CLOSE)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	75	None	replace
181	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
182	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++currInputRow;  _currInputRowStart  =  _inputPtr;  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
183	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
184	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    if(i  <  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
185	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	1	replace
186	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	77	1	replace
187	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_CLOSE)  {  _throwInvalidSpace(i);  }  [CE]  cannot  find  symbol  INT_CLOSE  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_CLOSE)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  INT_CLOSE)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	77	None	replace
188	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
189	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_RBRACKET)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
190	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
191	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  >=  INT_LCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
192	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  >  INT_TAB)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
193	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_TAB)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  >  INT_TAB)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
194	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
195	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
196	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  <  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  <  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RCURLY)    {    if(i  <  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
197	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  If(i  <  INT_RCURLY)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  If(i  <  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RCURLY)    {    If(i  <  INT_RCURLY)  {	  	non-compiled	[CE]  ';'  expected	62	None	add
198	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  >=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  >=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RCURLY)    {    if(i  >=  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	62	None	add
199	[BUG]  [BUGGY]  If(i  ==  INT_LCURLY)  {  [CE]  ';'  expected  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  If(i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	If(i  ==  INT_LCURLY)  {	  if(i    ==    INT_LCURLY)    {    If(i    ==    INT_LCURLY)    {    	non-compiled	[CE]  ';'  expected	45	None	replace
200	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	1	replace
201	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	1	replace
202	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_QUOTE)  {	  if(i    <    INT_LF)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	38	1	replace
203	[BUG]  [BUGGY]  if(i  <  INT_QUOTE)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_QUOTE)  {	  if(i    <    INT_LF)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	38	1	replace
204	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_CR)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_CR)  {	  if(i    <    INT_LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	replace
205	[BUG]  [BUGGY]  if(i  <  INT_CR)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_CR)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_CR)  {	  if(i    <    INT_LF)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	38	1	replace
206	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart!=  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart!=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr    ==    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	8	1	replace
207	[BUG]  [BUGGY]  if(_currInputRowStart!=  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart!=  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart!=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr    ==    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	8	1	replace
208	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >=  INT_RCURLY)  {	  if(i    <    INT_RBRACKET)    {    if(i    <    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
209	[BUG]  [BUGGY]  if(i  >=  INT_RCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_RCURLY)  {	  if(i    <    INT_RBRACKET)    {    if(i    <    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
210	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	88	1	replace
211	[BUG]  [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	88	1	replace
212	[BUG]  [BUGGY]  if(i  <  INT_Row  ||  i  >  INT_RBRACKET)  {  [CE]  cannot  find  symbol  INT_Row  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_Row  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_Row  ||  i  >  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    	non-compiled	[CE]  cannot  find  symbol  INT_Row	88	None	replace
213	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  <  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRow  <  _inputEnd)  {	  if(_currInputRowStart    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	58	1	replace
214	[BUG]  [BUGGY]  if(_currInputRow  <  _inputEnd)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  <  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow  <  _inputEnd)  {	  if(_currInputRowStart    >=    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	58	1	replace
215	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow!=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRow!=  0)  {	  if(_currInputRowStart    ==    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	49	1	replace
216	[BUG]  [BUGGY]  if(_currInputRow!=  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow!=  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow!=  0)  {	  if(_currInputRowStart    ==    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	49	1	replace
217	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  If(i  <  INT_LF)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  If(i  <  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LF)    {    If(i  <  INT_LF)  {	  	non-compiled	[CE]  ';'  expected	37	None	add
218	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  if(i  >=  INT_LF)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LF)  {  if(i  >=  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LF)    {    if(i  >=  INT_LF)  {	  	non-compiled	[CE]  illegal  start  of  expression	37	None	add
219	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
220	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
221	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
222	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	73	1	replace
223	[BUG]  [BUGGY]  if(_currInputRowStart  >  0)  {  int  i  =  _currInputRowStart.length;  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >  0)  {  int  i  =  _currInputRowStart.length;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart    >    0)    {    int  i  =  _currInputRowStart.length;	  	non-compiled	[CE]  illegal  start  of  expression	46	None	add
224	[BUG]  [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_RCURLY  ||  i  >=  INT_RCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
225	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY  ||  i  >=  INT_RCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	80	1	replace
226	[BUG]  [BUGGY]  if(i  <  INT_RCURLY  ||  i  >=  INT_RCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                  ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >=  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY  ||  i  >=  INT_RCURLY)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	80	1	replace
227	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
228	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	1	replace
229	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	1	replace
230	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	1	replace
231	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET)  {  if(i  ==  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	33	1	replace
232	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY  ||  i  >  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	65	1	replace
233	[BUG]  [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_TAB)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY  ||  i  >  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	65	1	replace
234	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY  ||  i  >=  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	65	1	replace
235	[BUG]  [BUGGY]  if(i  <  INT_RCURLY  ||  i  >=  INT_TAB)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY  ||  i  >=  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	65	1	replace
236	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	1	replace
237	[BUG]  [BUGGY]  if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_RCURLY  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	65	1	replace
238	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY  ||  i  >  INT_LCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
239	[BUG]  [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY  ||  i  >  INT_LCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
240	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
241	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {	  if(i    <    INT_RBRACKET    ||    i    >    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	24	1	replace
242	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length();  if(_currInputRow  >  0)  {  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length();  if(_currInputRow  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length();  if(_currInputRow  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length();    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
243	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length();  if(_currInputRowStart  >  0)  {  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length();  if(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length();  if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length();    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
244	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
245	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
246	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
247	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    else    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
248	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    else    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
249	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
250	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
251	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
252	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
253	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd1();  }  [CE]  illegal  start  of  type  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd1();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd1();  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
254	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart  >=  INT_LCURLY)  {	  if(_currInputRowStart    >=    INT_CLOSE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	1	replace
255	[BUG]  [BUGGY]  if(_currInputRowStart  >=  INT_LCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  >=  INT_LCURLY)  {	  if(_currInputRowStart    >=    INT_CLOSE)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	83	1	replace
256	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    if(i  <  INT_RCURLY  ||  i  >  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
257	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  >  _inputEnd)  {	  if(_inputPtr    ==    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
258	[BUG]  [BUGGY]  if(_inputPtr  >  _inputEnd)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >  _inputEnd)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >  _inputEnd)  {	  if(_inputPtr    ==    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	36	1	replace
259	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY  ||  i  >  INT_RBRACKET)  {	  if(i    <    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	63	1	replace
260	[BUG]  [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_RBRACKET)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  >  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY  ||  i  >  INT_RBRACKET)  {	  if(i    <    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	63	1	replace
261	[BUG]  [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_TAB)  {  [CE]  illegal  start  of  expression  [FE]              ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_RCURLY  ||  i  >=  INT_TAB)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
262	[BUG]  [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]                ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_RCURLY  ||  i  >=  INT_RBRACKET)  {	  if(i    <    =    INT_LCURLY    ||    i    >=    INT_TAB)    {    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
263	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
264	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	70	1	replace
265	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  ==  INT_RCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY)  {  if(i  ==  INT_RCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	70	1	replace
266	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  ==  INT_RCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  ==  INT_RCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY)  {  if(i  ==  INT_RCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	70	1	replace
267	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	70	1	replace
268	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	70	1	replace
269	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
270	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [CE]  illegal  start  of  expression  [FE]            com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >=  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
271	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {  [CE]  illegal  start  of  expression  [FE]              com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  <  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
272	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [CE]  illegal  start  of  expression  [FE]                com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_inputPtr  <  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  <  _inputEnd)  {  int  i  =  _currInputRow.length;  if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    int    i    =    _currInputRow.length;    if(_currInputRow    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
273	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(i  >=  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(i  >=  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY    ||    i    >    INT_LCURLY)    {    if(i  >=  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	84	None	add
274	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  if(i!=  INT_LF)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i!=  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LF)    {    if(i!=  INT_LF)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
275	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  if(i  >=  INT_LF)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LF)  {  if(i  >=  INT_LF)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LF)    {    if(i  >=  INT_LF)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
276	[BUG]  [BUGGY]  if(i  >  INT_LCURLY)  {  int  i  =  _inputPtr;  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >  INT_LCURLY)  {  int  i  =  _inputPtr;  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    >    INT_LCURLY)    {    int  i  =  _inputPtr;	  	non-compiled	[CE]  illegal  start  of  expression	81	None	add
277	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i!=  INT_RCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RCURLY)  {  if(i!=  INT_RCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
278	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i!=  INT_RCURLY)  {  _throwInvalidSpace(i);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i!=  INT_RCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RCURLY)  {  if(i!=  INT_RCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
279	[BUG]  [BUGGY]  if(i  ==  INT_Row)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [CE]  cannot  find  symbol  INT_Row  [FE]                          ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_Row)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_Row)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  cannot  find  symbol  INT_Row	34	None	replace
280	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
281	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [FE]  ArrayIndexOutOfBoundsException  [FE]                            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	34	1	replace
282	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  If(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  If(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_RBRACKET)    {    If(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {	  	non-compiled	[CE]  ';'  expected	60	None	add
283	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  If(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  [CE]  ';'  expected  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  If(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    If(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {	  	non-compiled	[CE]  ';'  expected	64	None	add
284	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  <  0  ||  _inputPtr  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRow  <  0  ||  _inputPtr  >  INT_LCURLY)  {	  if(_currInputRowStart    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	55	1	replace
285	[BUG]  [BUGGY]  if(_currInputRow  <  0  ||  _inputPtr  >  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRow  <  0  ||  _inputPtr  >  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow  <  0  ||  _inputPtr  >  INT_LCURLY)  {	  if(_currInputRowStart    <    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	55	1	replace
286	[BUG]  [BUGGY]  if(i  >  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  type  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  >  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
287	[BUG]  [BUGGY]  _inputPtr  =(int)_inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _inputPtr  =(int)_inputBuffer[_inputPtr++];  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_inputPtr  =(int)_inputBuffer[_inputPtr++];	  i    =(int)_inputBuffer[_inputPtr++];    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
288	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  expression  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
289	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_CLOSE)    {    if(i    ==    INT_LCURLY)    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
290	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {	  if(i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
291	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  ==  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET  ||  i  ==  INT_LCURLY)  {	  if(i    ==    INT_RBRACKET)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
292	[BUG]  [BUGGY]  _throwUnquotedSpace(i);  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _throwUnquotedSpace(i);  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_throwUnquotedSpace(i);	  _throwInvalidSpace(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
293	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  _reportUnsupportedOperation();  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_reportUnsupportedOperation();	  _throwInvalidSpace(i);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
294	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RCURLY  ||  i  >  INT_RCKET)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  if(i  <  INT_RCURLY  ||  i  >  INT_RCKET)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET    ||    i    >    INT_RBRACKET)    {    if(i  <  INT_RCURLY  ||  i  >  INT_RCKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	87	None	add
295	[BUG]  [BUGGY]  if(i  <  =  INT_QUOTE)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_QUOTE)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_QUOTE)  {	  if(i    <    INT_LF)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
296	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
297	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
298	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
299	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	75	1	replace
300	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  type  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)return  _skipWSOrEnd2();  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
301	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
302	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
303	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
304	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  _throwInvalidSpace(i);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  ==  INT_HASH)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
305	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
306	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  _throwInvalidSpace(i);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(i  >  INT_SLASH  ||  i  >=  INT_HASH)  {  _throwInvalidSpace(i);  }	  if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	77	1	replace
307	[BUG]  [BUGGY]  if(i  <  INT_RC)  {  [CE]  cannot  find  symbol  INT_RC  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RC)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RC)  {	  if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr!=    _inputEnd)    {    	non-compiled	[CE]  cannot  find  symbol  INT_RC	7	None	replace
308	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i!=  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	34	1	replace
309	[BUG]  [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                        ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i!=  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=  INT_RBRACKET)  {  if(i!=  INT_RBRACKET)  {  _throwInvalidSpace(i);  }	  if(i    ==    INT_LCURLY)    {    if(i!=    INT_CLOSE)    {    _throwInvalidSpace(i);    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	34	1	replace
310	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  >=  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  if(i  >=  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    if(i  >=  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  	non-compiled	[CE]  illegal  start  of  expression	69	None	add
311	[BUG]  [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  =  INT_RCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_RCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_RCURLY)    {    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
312	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  type  [FE]                      ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)return  _skipWSOrEnd2();  }	  if(i    <    =    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
313	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	70	1	replace
314	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	70	1	replace
315	[BUG]  [BUGGY]  if(i  <  INT_RC)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  cannot  find  symbol  INT_RC  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RC)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RC)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	non-compiled	[CE]  cannot  find  symbol  INT_RC	70	None	replace
316	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  type  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  ++i;  _currInputRowStart  =  _inputPtr;  }	  if(i    <    INT_LCURLY)    {    if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
317	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart!=  INT_CR)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart!=  INT_CR)  {	  if(_inputPtr    <    _inputEnd)    {    if(_inputPtr    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	39	1	replace
318	[BUG]  [BUGGY]  if(_currInputRowStart!=  INT_CR)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(_currInputRowStart!=  INT_CR)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart!=  INT_CR)  {	  if(_inputPtr    <    _inputEnd)    {    if(_inputPtr    <    _inputEnd)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	39	1	replace
319	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(_inputPtr    >=    _inputEnd)    {    return    _skipWSOrEnd2();    }    if(i  >=  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	  	non-compiled	[CE]  illegal  start  of  expression	74	None	add
320	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidScope(i);  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException      [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidScope(i);  }  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidScope(i);  }	  if(i    ==    INT_LCURLY)    {    ++_currInputRow;    _currInputRowStart    =    _inputPtr;    }    else    {    _throwInvalidSpace(i);    }    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
321	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	65	1	replace
322	[BUG]  [BUGGY]  if(i  <  INT_RCURLY  ||  i  ==  INT_TAB)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]      while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }      [BUGGY]  if(i  <  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]      if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RCURLY    ||    i    ==    INT_TAB)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	65	1	replace
