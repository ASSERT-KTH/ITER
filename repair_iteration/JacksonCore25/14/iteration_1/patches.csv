bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
2	[BUG]  [BUGGY]  if(i  ==  INT_RBRACKET)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
3	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LF)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_LF)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
4	[BUG]  [BUGGY]  if(i  ==  INT_LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LF)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LF)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
5	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr  >=  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
6	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >>  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  >>  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr  >>  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
7	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr!=  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr!=  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
8	[BUG]  [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  >=  _inputEnd)  {  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    >=    _inputEnd)    {    if(_inputPtr  ==  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
9	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i!=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i!=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	14	1	replace
10	[BUG]  [BUGGY]  if(i!=  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i!=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i!=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	14	1	replace
11	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  >=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	1	replace
12	[BUG]  [BUGGY]  if(i  >=  INT_LCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  >=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	14	1	replace
13	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  <  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET)    {    if(i  <  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
14	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  If(i  <  INT_RBRACKET)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RBRACKET)  {  If(i  <  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET)    {    If(i  <  INT_RBRACKET)  {	  	non-compiled	[CE]  ';'  expected	17	None	add
15	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RBRACKET)  {  if(i  >=  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_RBRACKET)    {    if(i  >=  INT_RBRACKET)  {	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
16	[BUG]  [BUGGY]  if(_currInputRow  >  0)  {  if(_currInputRow  >  0)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  >  0)  {  if(_currInputRow  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    >    0)    {    if(_currInputRow  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
17	[BUG]  [BUGGY]  if(_currInputRow  >  0)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {  [CE]  illegal  start  of  expression  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  >  0)  {  int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    >    0)    {    int  i  =  _currInputRow.length;  if(_currInputRow  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
18	[BUG]  [BUGGY]  if(_currInputRow  >  0)  {  If(_currInputRow  >  0)  {  [CE]  ';'  expected  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  >  0)  {  If(_currInputRow  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    >    0)    {    If(_currInputRow  >  0)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
19	[BUG]  [BUGGY]  if(_currInputRow  >  0)  {  int  i  =  _currInputRow.length();  if(_currInputRow  >  0)  {  [CE]  illegal  start  of  expression  [FE]          com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  >  0)  {  int  i  =  _currInputRow.length();  if(_currInputRow  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    >    0)    {    int  i  =  _currInputRow.length();  if(_currInputRow  >  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
20	[BUG]  [BUGGY]  if(_currInputRow  <  0)  {  if(_currInputRow  <  0)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  <  0)  {  if(_currInputRow  <  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    <    0)    {    if(_currInputRow  <  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
21	[BUG]  [BUGGY]  if(_currInputRow  <  0)  {  If(_currInputRow  <  0)  {  [CE]  ';'  expected  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  <  0)  {  If(_currInputRow  <  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    <    0)    {    If(_currInputRow  <  0)  {	  	non-compiled	[CE]  ';'  expected	7	None	add
22	[BUG]  [BUGGY]  if(_currInputRow  <  0)  {  if(_currInputRow  >=  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  <  0)  {  if(_currInputRow  >=  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    <    0)    {    if(_currInputRow  >=  0)  {	  	non-compiled	[CE]  illegal  start  of  expression	7	None	add
23	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {	  if(i    <    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	18	1	replace
24	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  >  INT_LCURLY)  {	  if(i    <    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	18	1	replace
25	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  ==  INT_RCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY)    {    if(i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
26	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i!=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i!=  INT_RCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY)    {    if(i!=  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
27	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  >=  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY)  {  if(i  >=  INT_RCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY)    {    if(i  >=  INT_RCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
28	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY)  {  If(i  ==  INT_RCURLY)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY)  {  If(i  ==  INT_RCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_RCURLY)    {    If(i  ==  INT_RCURLY)  {	  	non-compiled	[CE]  ';'  expected	10	None	add
29	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  <  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i  <  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
30	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  If(i  <  INT_LCURLY)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  If(i  <  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    If(i  <  INT_LCURLY)  {	  	non-compiled	[CE]  ';'  expected	15	None	add
31	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    <    INT_LCURLY)    {    if(i  >=  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
32	[BUG]  [BUGGY]  _throwInvalidSpace(i);  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  _throwInvalidSpace(i);  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	_throwInvalidSpace(i);	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
33	[BUG]  [BUGGY]  if(i  ==  INT_CLOSE)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [CE]  cannot  find  symbol  INT_CLOSE  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_CLOSE)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_CLOSE)  {  if(i  ==  INT_LCURLY)  {  _throwInvalidSpace(i);  }	      	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	9	None	replace
34	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i!=  INT_CLOSE)  {  _throwInvalidSpace(i);  }  [CE]  cannot  find  symbol  INT_CLOSE  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i!=  INT_CLOSE)  {  _throwInvalidSpace(i);  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  if(i!=  INT_CLOSE)  {  _throwInvalidSpace(i);  }	      	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	9	None	replace
35	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  ==  _inputEnd)  {	  if(_inputPtr    <    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
36	[BUG]  [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  ==  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  ==  _inputEnd)  {	  if(_inputPtr    <    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
37	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LF)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LF)  {	  if(_inputPtr    <    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
38	[BUG]  [BUGGY]  if(i  <  INT_LF)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LF)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LF)  {	  if(_inputPtr    <    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	4	1	replace
39	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  if(_inputPtr  <  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  <  _inputEnd)  {  if(_inputPtr  <  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    <    _inputEnd)    {    if(_inputPtr  <  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
40	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  <  _inputEnd)  {  [CE]  ';'  expected  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  <  _inputEnd)  {  If(_inputPtr  <  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    <    _inputEnd)    {    If(_inputPtr  <  _inputEnd)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
41	[BUG]  [BUGGY]  if(_inputPtr  <  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [CE]  illegal  start  of  expression  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  <  _inputEnd)  {  if(_inputPtr  >=  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr    <    _inputEnd)    {    if(_inputPtr  >=  _inputEnd)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
42	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LCURLY)    {    if(i  ==  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
43	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i!=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LCURLY)    {    if(i!=  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
44	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  if(i  >=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LCURLY)    {    if(i  >=  INT_LCURLY)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
45	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  If(i  ==  INT_LCURLY)  {  [CE]  ';'  expected  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  If(i  ==  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i    ==    INT_LCURLY)    {    If(i  ==  INT_LCURLY)  {	  	non-compiled	[CE]  ';'  expected	5	None	add
46	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
47	[BUG]  [BUGGY]  if(_currInputRowStart  >  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  >  0)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
48	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  ==  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart  ==  0)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	13	1	replace
49	[BUG]  [BUGGY]  if(_currInputRowStart  ==  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  ==  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  ==  0)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	13	1	replace
50	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  >  0)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	13	1	replace
51	[BUG]  [BUGGY]  if(_inputPtr  >  0)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]        com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  >  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  >  0)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	13	1	replace
52	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  <  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_inputPtr  <  0)  {	  if(_currInputRow    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
53	[BUG]  [BUGGY]  if(_inputPtr  <  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_inputPtr  <  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_inputPtr  <  0)  {	  if(_currInputRow    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
54	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  <  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart  <  0)  {	  if(_currInputRow    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
55	[BUG]  [BUGGY]  if(_currInputRowStart  <  0)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  <  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  <  0)  {	  if(_currInputRow    <    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	8	1	replace
56	[BUG]  [BUGGY]  if(_currInputRow  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  <  =  0)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow  <  =  0)  {	  if(_currInputRow    <    0)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(_currInputRowStart  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
58	[BUG]  [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  >=  _inputEnd)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  >=  _inputEnd)  {	  if(_inputPtr    >=    _inputEnd)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	1	replace
59	[BUG]  [BUGGY]  if(_currInputRow  >  0)  {  int  i  =  _currInputRow.length;  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRow  >  0)  {  int  i  =  _currInputRow.length;  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRow    >    0)    {    int  i  =  _currInputRow.length;	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
60	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
61	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RCURLY  ||  i  ==  INT_RBRACKET)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
62	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RCURLY)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	11	1	replace
63	[BUG]  [BUGGY]  if(i  <  INT_RCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RCURLY)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	11	1	replace
64	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
65	[BUG]  [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_RCURLY  ||  i  ==  INT_TAB)  {	  if(i    ==    INT_RCURLY)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
66	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  {  _throwInvalidSpace(i);  }	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
67	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [CE]  illegal  start  of  type  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
68	[BUG]  [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  type  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  return  _skipWSOrEnd2();  }	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
69	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	9	1	replace
70	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(i  ==  INT_LCURLY)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	9	1	replace
71	[BUG]  [BUGGY]  if(i  <  =  INT_RCURLY)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  =  INT_RCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_RCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
72	[BUG]  [BUGGY]  i  =(int)_inputBuffer[_inputPtr++];  [CE]  illegal  start  of  type  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  i  =(int)_inputBuffer[_inputPtr++];  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	i  =(int)_inputBuffer[_inputPtr++];	      	non-compiled	[CE]  illegal  start  of  type	9	None	replace
73	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [CE]  illegal  start  of  expression  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	      	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
74	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	9	1	replace
75	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  return  _skipWSOrEnd2();  }	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	9	1	replace
76	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	9	1	replace
77	[BUG]  [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]                      ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY)  {  if(_inputPtr  >=  _inputEnd)  {  _throwInvalidSpace(i);  }	      	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	9	1	replace
78	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY  ||  i  >=  INT_RBRACKET)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_TAB)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_TAB)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY  ||  i  >=  INT_TAB)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
80	[BUG]  [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  =  INT_LCURLY  ||  i  >=  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_LCURLY  ||  i  >=  INT_LCURLY)  {	  if(i    <    =    INT_LCURLY)    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
81	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  >  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  >  INT_LCURLY)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
82	[BUG]  [BUGGY]  if(i  >  INT_LCURLY)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  >  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  >  INT_LCURLY)  {	  if(_currInputRow    >    0)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	13	1	replace
83	[BUG]  [BUGGY]  if(_currInputRowStart  >=  INT_CLOSE)  {  [CE]  cannot  find  symbol  INT_CLOSE  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(_currInputRowStart  >=  INT_CLOSE)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(_currInputRowStart  >=  INT_CLOSE)  {	  if(_currInputRow    >    0)    {    	non-compiled	[CE]  cannot  find  symbol  INT_CLOSE	13	None	replace
84	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  if(i    <    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	16	1	replace
85	[BUG]  [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_LCURLY  ||  i  >  INT_LCURLY)  {	  if(i    <    INT_LCURLY)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	16	1	replace
86	[BUG]  [BUGGY]  if(i  <  =  INT_RBRACKET)  {  [CE]  illegal  start  of  expression  [FE]    com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  =  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  =  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET)    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
87	[BUG]  [BUGGY]  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	add	if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	18	1	replace
88	[BUG]  [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  [FE]      com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r    [CONTEXT]    while  (_inputPtr  <  _inputEnd)  {  i  =  (int)  _inputBuffer[_inputPtr++];  if  (i  >  INT_SPACE)  {  if  (i  ==  INT_SLASH  ||  i  ==  INT_HASH)  {  --_inputPtr;  return  _skipWSOrEnd2();  }  return  i;  }    [BUGGY]  if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {  [BUGGY]    if  (i  ==  INT_LF)  {  ++_currInputRow;  _currInputRowStart  =  _inputPtr;  }  else  if  (i  ==  INT_CR)  {  _skipCR();  }  else  if  (i  !=  INT_TAB)  {  _throwInvalidSpace(i);  }  }  }  [CLASS]  ReaderBasedJsonParser  [METHOD]  _skipWSOrEnd  [RETURN_TYPE]  int  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  eof  firstOk  gotColon  inObject  neg  negative  Reader  _reader  r  int[]  _icLatin1  codes  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  ch  count  decodedData  defaultValue  end  endChar  expLen  features  fractLen  hash  i  id  inLen  inPtr  inputLen  intLen  len  maxCode  nameLen  offset  origPtr  outPtr  outputCount  outputEnd  outputPtr  ptr  start  startPtr  long  _nameStartOffset  defaultValue  char[]  _inputBuffer  buf  ch  inBuf  inputBuffer  nameChars  outBuf  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	1.0	2371	2371	1	replace	if(i  <  INT_RBRACKET  ||  i  >  INT_RBRACKET)  {	  if(i    <    INT_RBRACKET)    {    	compilable	  [FE]  com.fasterxml.jackson.core.JsonParseException:  Illegal  character  ('  '  (code  32)):  only  regular  white  space  (\r  	18	1	replace
