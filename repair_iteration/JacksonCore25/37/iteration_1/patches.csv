bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
2	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
3	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
4	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
5	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
6	[BUG]  [BUGGY]  _symbols.add(JsonToken.VALUE_STRING);  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _symbols.add(JsonToken.VALUE_STRING);  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.VALUE_STRING);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
7	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME);  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _symbols.add(JsonToken.FIELD_NAME);  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
8	[BUG]  [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name);  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _symbols.add(JsonToken.FIELD_NAME,  name);  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.FIELD_NAME,  name);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
9	[BUG]  [BUGGY]  _symbols.add(JsonToken.START_OBJECT);  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _symbols.add(JsonToken.START_OBJECT);  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_symbols.add(JsonToken.START_OBJECT);	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
10	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
11	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	2	2	replace
12	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	2	3	replace
13	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	2	3	replace
14	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	9	3	replace
15	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	9	3	replace
16	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	9	3	replace
17	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	9	3	replace
18	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
19	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
20	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
21	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.END_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
22	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
23	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
24	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken!=  JsonToken.VALUE_NULL)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken!=  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
25	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_FULL)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_FULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_FULL)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
26	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
27	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
28	[BUG]  [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_tokenIncomplete  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	11	1	replace
29	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	11	3	replace
30	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	11	3	replace
31	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	11	3	replace
32	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	11	3	replace
33	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	13	3	replace
34	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	13	3	replace
35	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	13	3	replace
36	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	13	3	replace
37	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
38	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
39	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
40	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.END_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
41	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_FUNCTION)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
42	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
43	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
44	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
45	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]          ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER_FLOAT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
46	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [CE]  illegal  start  of  expression  [FE]            ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
47	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
48	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	15	2	replace
49	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	15	3	replace
50	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	15	3	replace
51	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	15	3	replace
52	[BUG]  [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]        ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken!=  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	15	3	replace
53	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
54	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
55	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
56	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
57	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
58	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING)    {    if(_currToken  ==  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
59	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken!=  JsonToken.VALUE_STRING)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING)    {    if(_currToken!=  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
60	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  if(_currToken  >=  JsonToken.VALUE_STRING)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING)    {    if(_currToken  >=  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
61	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  If(_currToken  ==  JsonToken.VALUE_STRING)  {  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING)  {  If(_currToken  ==  JsonToken.VALUE_STRING)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_STRING)    {    If(_currToken  ==  JsonToken.VALUE_STRING)  {	  	non-compiled	[CE]  ';'  expected	1	None	add
62	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	6	2	replace
63	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	6	2	replace
64	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	4	3	replace
65	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.END_OBJECT)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	4	3	replace
66	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	4	3	replace
67	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	4	3	replace
68	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	2	3	replace
69	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_STRING  ||  _currToken!=  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_STRING)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	2	3	replace
70	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken!=  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  illegal  start  of  expression	3	None	add
71	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.START_OBJECT)  {  [CE]  ';'  expected  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT)  {  If(_currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT)    {    If(_currToken  ==  JsonToken.START_OBJECT)  {	  	non-compiled	[CE]  ';'  expected	3	None	add
72	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	13	3	replace
73	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	13	3	replace
74	[BUG]  [BUGGY]  _reportUnsupportedOperation();  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _reportUnsupportedOperation();  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportUnsupportedOperation();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
75	[BUG]  [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  string  value ");  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _reportUnexpectedChar(i, "was  expecting  a  string  value ");  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportUnexpectedChar(i, "was  expecting  a  string  value ");	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
76	[BUG]  [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [CE]  cannot  find  symbol  i  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(i  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(i  ==  0)  {  if(_tokenIncomplete)  {  _skipString();  }	      	non-compiled	[CE]  cannot  find  symbol  i	7	None	replace
77	[BUG]  [BUGGY]  _skipString();  [CE]  <identifier>  expected  [FE]                    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _skipString();  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_skipString();	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
78	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  If(_currToken  ==  JsonToken.VALUE_NULL)  {  [CE]  ';'  expected  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  If(_currToken  ==  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    If(_currToken  ==  JsonToken.VALUE_NULL)  {	  	non-compiled	[CE]  ';'  expected	12	None	add
79	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
80	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    ArrayIndexOutOfBoundsException  e  =  new  ArrayIndexOutOfBoundsException( " ");	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
81	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.FIELD_NAME  ||!_tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
82	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	15	3	replace
83	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.START_OBJECT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	15	3	replace
84	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	15	3	replace
85	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME  	15	3	replace
86	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	11	3	replace
87	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	11	3	replace
88	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _skipString())  {  [CE]  'void'  type  not  allowed  here  [FE]      ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _skipString())  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete  ||  _skipString())  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    	non-compiled	[CE]  'void'  type  not  allowed  here	11	None	replace
89	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");  [CE]  <identifier>  expected  [FE]              ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  value ");	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
90	[BUG]  [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  value ");  [CE]  <identifier>  expected  [FE]                ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  value ");  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_nameStartOffset+ ")not  a  string  value ");	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
91	[BUG]  [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value ");  [CE]  <identifier>  expected  [FE]                  ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  _reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value ");  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	_reportError( "Current  token( "+_tokenIncomplete+ ")not  a  string  or  a  value ");	      	non-compiled	[CE]  <identifier>  expected	7	None	replace
92	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL)  {  if(_currToken  ==  JsonToken.VALUE_NUMBER)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NULL)    {    if(_currToken  ==  JsonToken.VALUE_NUMBER)  {	  	non-compiled	[CE]  illegal  start  of  expression	12	None	add
93	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	6	2	replace
94	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_ARRAY)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_OBJECT  	6	2	replace
95	[BUG]  [BUGGY]  [FE]  ArrayIndexOutOfBoundsException  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
96	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [FE]  ArrayIndexOutOfBoundsException  [FE]      junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    	compilable	  [FE]  ArrayIndexOutOfBoundsException  	6	2	replace
97	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _tokenIncomplete)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _tokenIncomplete)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _tokenIncomplete)  {	  	non-compiled	[CE]  illegal  start  of  expression	10	None	add
98	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	13	3	replace
99	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.VALUE_FALSE)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	13	3	replace
100	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	13	3	replace
101	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  [FE]      junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken!=  JsonToken.VALUE_NULL)  {	  if(_currToken    ==    JsonToken.VALUE_NULL)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  START_ARRAY  	13	3	replace
102	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	add	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	15	3	replace
103	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.VALUE_NUMBER_FLOAT)  {	  if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    	compilable	  [FE]  junit.framework.AssertionFailedError:  Expected  token  VALUE_FALSE  	15	3	replace
104	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.START_OBJECT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.START_ARRAY  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	8	None	add
105	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [CE]  illegal  start  of  expression  [FE]    junit.framework.AssertionFailedError:  Expected  token  FIELD_NAME    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.FIELD_NAME  ||  _currToken  ==  JsonToken.START_OBJECT)  {  if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.FIELD_NAME    ||    _currToken    ==    JsonToken.START_OBJECT)    {    if(_currToken  ==  JsonToken.START_OBJECT  ||  _currToken  ==  JsonToken.START_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
106	[BUG]  [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [CE]  illegal  start  of  expression  [FE]    ArrayIndexOutOfBoundsException    [CONTEXT]    {        [BUGGY]  if(_currToken  ==  JsonToken.VALUE_NUMBER_INT  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {  [BUGGY]    return  _nextAfterName();  }    _numTypesValid  =  NR_UNKNOWN;  if  (_tokenIncomplete)  {  _skipString();  //  only  strings  can  be  partial  }  int  i  =  _skipWSOrEnd();  if  (i  <  0)  {  //  end-of-input  [CLASS]  ReaderBasedJsonParser  [METHOD]  nextToken  [RETURN_TYPE]  JsonToken  [VARIABLES]  boolean  _bufferRecyclable  _tokenIncomplete  bufferRecyclable  inObject  Reader  _reader  r  int[]  _icLatin1  JsonToken  t  ObjectCodec  _objectCodec  c  codec  CharsToNameCanonicalizer  _symbols  st  String  name  int  FEAT_MASK_TRAILING_COMMA  _hashSeed  _nameStartCol  _nameStartRow  bits  bufSize  count  decodedData  end  features  i  nameLen  origPtr  outputCount  outputEnd  outputPtr  start  long  _nameStartOffset  char[]  _inputBuffer  buf  ch  inputBuffer  	projects/JacksonCore25/src/main/java/com/fasterxml/jackson/core/json/ReaderBasedJsonParser.java	0.5773502691896258	647	647	1	replace	if(_currToken    ==    JsonToken.VALUE_NUMBER_INT    ||    _currToken    ==    JsonToken.FIELD_NAME)    {    if(_currToken  ==  JsonToken.VALUE_NULL  ||  _currToken  ==  JsonToken.FIELD_NAME)  {	  	non-compiled	[CE]  illegal  start  of  expression	14	None	add
