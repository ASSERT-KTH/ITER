bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  2;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  2;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  2;	  final    double    a    =    relativeThreshold    *    FastMath.abs(x)/    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
2	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  1;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  1;	  final    double    a    =    relativeThreshold    *    FastMath.abs(x)/    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
3	[BUG]  [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  iter;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  iter;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  iter;	  final    double    b    =    relativeThreshold    *    FastMath.abs(x)+    iter;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
4	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  /  FastMath.abs(x)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  /  FastMath.abs(x)+  absoluteThreshold;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  absoluteThreshold  =  relativeThreshold  /  FastMath.abs(x)+  absoluteThreshold;	  final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
5	[BUG]  [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  Math.abs(fw)/  a;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  Math.abs(fw)/  a;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	int  absoluteThreshold  =  relativeThreshold  *  Math.abs(fw)/  a;	  int    absoluteThreshold    =    relativeThreshold    *    Math.abs(fx)/    a;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
6	[BUG]  [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  Math.abs(fx)/  b;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  Math.abs(fx)/  b;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	int  absoluteThreshold  =  relativeThreshold  *  Math.abs(fx)/  b;	  int    absoluteThreshold    =    relativeThreshold    *    Math.abs(fx)/    a;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
7	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  /  FastMath.abs(fx)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  /  FastMath.abs(fx)+  absoluteThreshold;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  absoluteThreshold  =  relativeThreshold  /  FastMath.abs(fx)+  absoluteThreshold;	  final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(fx)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
8	[BUG]  [BUGGY]  int  absoluteThreshold  =  getRelativeThreshold()  -  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  int  absoluteThreshold  =  getRelativeThreshold()  -  1;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	int  absoluteThreshold  =  getRelativeThreshold()  -  1;	  int    absoluteThreshold    =    getRelativeThreshold();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
9	[BUG]  [BUGGY]  int  absoluteThreshold  =  getRelativeThreshold()  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  int  absoluteThreshold  =  getRelativeThreshold()  +  1;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	int  absoluteThreshold  =  getRelativeThreshold()  +  1;	  int    absoluteThreshold    =    getRelativeThreshold();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
10	[BUG]  [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  a;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  a;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  a;	  final    double    b    =    relativeThreshold    *    FastMath.abs(x)+    a;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
11	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)/  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)/  absoluteThreshold;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(b)/  absoluteThreshold;	  final    double    a    =    relativeThreshold    *    FastMath.abs(b)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
12	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)+  x;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)+  x;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(b)+  x;	  final    double    a    =    relativeThreshold    *    FastMath.abs(x)+    b;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)/  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)/  absoluteThreshold;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)/  absoluteThreshold;	  final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(x)-    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
14	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)-  m;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)-  m;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)-  m;	  final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(x)-    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
15	[BUG]  [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  2;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  2;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  2;	  final    double    b    =    relativeThreshold    *    FastMath.abs(x)/    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
16	[BUG]  [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  1;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  1;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  1;	  final    double    b    =    relativeThreshold    *    FastMath.abs(x)/    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
17	[BUG]  [BUGGY]  boolean  isMinim  =  isMinim?  fx  :!isMinim?  fw  :  true;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  boolean  isMinim  =  isMinim?  fx  :!isMinim?  fw  :  true;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	boolean  isMinim  =  isMinim?  fx  :!isMinim?  fw  :  true;	  boolean    isMinim    =    isMinim?    fx    :!isMinim?    fw    :    false;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  boolean  b  =  isMinim?  fx  :!isMinim?  fw  :  true;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  boolean  b  =  isMinim?  fx  :!isMinim?  fw  :  true;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	boolean  b  =  isMinim?  fx  :!isMinim?  fw  :  true;	  boolean    b    =    isMinim?    fx    :!isMinim?    fw    :    false;    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
19	[BUG]  [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  Math.abs(a)/  fx;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  int  absoluteThreshold  =  relativeThreshold  *  Math.abs(a)/  fx;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	int  absoluteThreshold  =  relativeThreshold  *  Math.abs(a)/  fx;	  int    absoluteThreshold    =    relativeThreshold    *    Math.abs(fx)/    a;    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
20	[BUG]  [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  GOLDEN_SECTION;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  GOLDEN_SECTION;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  b  =  relativeThreshold  *  FastMath.abs(x)/  GOLDEN_SECTION;	  final    double    b    =    relativeThreshold    *    FastMath.abs(x)/    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
21	[BUG]  [BUGGY]  final  double  b  =  absoluteThreshold  *  FastMath.abs(x)/  relativeThreshold;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  b  =  absoluteThreshold  *  FastMath.abs(x)/  relativeThreshold;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  b  =  absoluteThreshold  *  FastMath.abs(x)/  relativeThreshold;	  final    double    b    =    relativeThreshold    *    FastMath.abs(x)/    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
22	[BUG]  [BUGGY]  boolean  b  =  isMinim?  false  :  true;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  boolean  b  =  isMinim?  false  :  true;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	boolean  b  =  isMinim?  false  :  true;	  boolean    b    =    isMinim?    false    :    false;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
23	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  GOLDEN_SECTION;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  GOLDEN_SECTION;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  GOLDEN_SECTION;	  final    double    a    =    relativeThreshold    *    FastMath.abs(x)/    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
24	[BUG]  [BUGGY]  boolean  isMinim  =  isMinim?  fx  :!isMinim?  current  :  false;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  boolean  isMinim  =  isMinim?  fx  :!isMinim?  current  :  false;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	boolean  isMinim  =  isMinim?  fx  :!isMinim?  current  :  false;	  boolean    isMinim    =    isMinim?    fx    :!isMinim?    previous    :    false;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
25	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(y)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(y)+  absoluteThreshold;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(y)+  absoluteThreshold;	  final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(fx)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  b;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  b;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(x)/  b;	  final    double    a    =    relativeThreshold    *    FastMath.abs(x)+    b;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
27	[BUG]  [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(a)+  fw;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  b  =  relativeThreshold  *  FastMath.abs(a)+  fw;  [BUGGY]      final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  b  =  relativeThreshold  *  FastMath.abs(a)+  fw;	  final    double    b    =    relativeThreshold    *    FastMath.abs(x)+    a;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  1;  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  1;  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  1;	  final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
29	[BUG]  [BUGGY]  double  absoluteThreshold  =  getRelativeThreshold();  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {      [BUGGY]  double  absoluteThreshold  =  getRelativeThreshold();  [BUGGY]      final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	154	154	1	replace	double  absoluteThreshold  =  getRelativeThreshold();	  int    absoluteThreshold    =    getRelativeThreshold();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
