bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(checker  ==  null)  {  if(mid  <  min)  {  a  =  lo;  b  =  b;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;      [BUGGY]  if(checker  ==  null)  {  if(mid  <  min)  {  a  =  lo;  b  =  b;  }  [BUGGY]      if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	127	127	1	replace	if(checker  ==  null)  {  if(mid  <  min)  {  a  =  lo;  b  =  b;  }	  if(checker!=    null)    {    if(mid    <    min)    {    a    =    lo;    b    =    b;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
2	[BUG]  [BUGGY]  ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker(a);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;      [BUGGY]  ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker(a);  [BUGGY]      if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	127	127	1	replace	ConvergenceChecker  <  UnivariatePointValuePair>  checker  =  getConvergenceChecker(a);	  ConvergenceChecker    <    UnivariatePointValuePair>    checker    =    getConvergenceChecker();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
3	[BUG]  [BUGGY]  b  =  checker.getConvergenceChecker(a,  mid);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;      [BUGGY]  b  =  checker.getConvergenceChecker(a,  mid);  [BUGGY]      if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	127	127	1	replace	b  =  checker.getConvergenceChecker(a,  mid);	  b    =    checker.getConvergenceChecker(a);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
4	[BUG]  [BUGGY]  b  =  checker.getConvergenceChecker(a,  b);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;      [BUGGY]  b  =  checker.getConvergenceChecker(a,  b);  [BUGGY]      if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	127	127	1	replace	b  =  checker.getConvergenceChecker(a,  b);	  b    =    checker.getConvergenceChecker(a);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  if(checker!=  null)  {  if(mid  <  mid)  {  a  =  lo;  b  =  b;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;      [BUGGY]  if(checker!=  null)  {  if(mid  <  mid)  {  a  =  lo;  b  =  b;  }  [BUGGY]      if  (lo  <  hi)  {  a  =  lo;  b  =  hi;  }  else  {  a  =  hi;  b  =  lo;  }  double  x  =  mid;  double  v  =  x;  double  w  =  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	127	127	1	replace	if(checker!=  null)  {  if(mid  <  mid)  {  a  =  lo;  b  =  b;  }	  if(checker!=    null)    {    if(mid    <    min)    {    a    =    lo;    b    =    b;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
