bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fx;  }	  v    =    w;    fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
2	[BUG]  [BUGGY]  v  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  v  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	v  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }	  v    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
3	[BUG]  [BUGGY]  if(isMinim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(isMinim)  {  return  null;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(isMinim)  {  return  null;  }	  if(!isMinim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  }	  if(fu    ==    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fw;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fw;  }	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  luate(iter.next(),  x)  {  v  =  fw;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  luate(iter.next(),  x)  {  v  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	luate(iter.next(),  x)  {  v  =  fw;  }	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
7	[BUG]  [BUGGY]  fv  =  w;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  fv  =  w;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	fv  =  w;	  fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
8	[BUG]  [BUGGY]  fv  =  b;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  fv  =  b;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	fv  =  b;	  fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
9	[BUG]  [BUGGY]  v  =  w;  fv  =  fw;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  v  =  w;  fv  =  fw;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	v  =  w;  fv  =  fw;	  if(fu    <    =    fv    ||    Precision.equals(v,    w))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
10	[BUG]  [BUGGY]  v  =  w;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  v  =  w;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	v  =  w;	  if(fu    <    =    fv    ||    Precision.equals(v,    w))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
11	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  fw))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  fw))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  fw))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    x)||    Precision.equals(v,    fw))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  v  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  v  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	v  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }	  if(fu    ==    w)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
13	[BUG]  [BUGGY]  if(fu  <  =  0  ||  Precision.equals(w,  x))  {  v  =  0;  fv  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  0  ||  Precision.equals(w,  x))  {  v  =  0;  fv  =  0;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  0  ||  Precision.equals(w,  x))  {  v  =  0;  fv  =  0;  }	  if(fu    <    =    fv    ||    Precision.equals(w,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  if(fu  ==  GOLDEN_SECTION)  {  if(!isMinim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  GOLDEN_SECTION)  {  if(!isMinim)  {  return  null;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  GOLDEN_SECTION)  {  if(!isMinim)  {  return  null;  }	  if(fu    ==    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
15	[BUG]  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(x,  fv)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(x,  fv)||  Precision.equals(v,  fv))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  fw  ||  Precision.equals(x,  fv)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    fv)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
16	[BUG]  [BUGGY]  if(isMinim)  {  if(!isMinimim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(isMinim)  {  if(!isMinimim)  {  return  null;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(isMinim)  {  if(!isMinimim)  {  return  null;  }	  if(fu    <    =    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
17	[BUG]  [BUGGY]  }  else  if(fu  <  =  x  ||  Precision.equals(v,  fu)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  x  ||  Precision.equals(v,  fu)||  Precision.equals(v,  w))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  x  ||  Precision.equals(v,  fu)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    fu    ||    Precision.equals(v,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
18	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    fu    ||    Precision.equals(w,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  v  =  w;  fv  =  w;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  v  =  w;  fv  =  w;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	v  =  w;  fv  =  w;	  if(fu    <    =    fv    ||    Precision.equals(w,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
20	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }	  if(fu    <    =    fv    ||    Precision.equals(w,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  b  =  fw;  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  b  =  fw;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	b  =  fw;	  b    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
23	[BUG]  [BUGGY]  luate(iter.next(),  x)  {  v  =  w;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  luate(iter.next(),  x)  {  v  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	luate(iter.next(),  x)  {  v  =  w;  }	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
24	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }	  if(fu    ==    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
25	[BUG]  [BUGGY]  luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	luate(iter,  x)  {  for(int  x  =  0;  x  <  iter.next();  x++)  {  v  =  fx;  }	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  luate(iter.next(),  x)  {  v  =  fx;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  luate(iter.next(),  x)  {  v  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	luate(iter.next(),  x)  {  v  =  fx;  }	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
27	[BUG]  [BUGGY]  }  else  if(fu  ==  0  ||  Precision.equals(w,  x)||  Precision.equals(v,  x))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  ==  0  ||  Precision.equals(w,  x)||  Precision.equals(v,  x))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  ==  0  ||  Precision.equals(w,  x)||  Precision.equals(v,  x))  {	  }    else    if(fu    ==    0    ||    Precision.equals(v,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
28	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  fx;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  fx;  fv  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fv  ||  Precision.equals(w,  x))  {  v  =  fx;  fv  =  fx;  }	  v    =    fx;    fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
29	[BUG]  [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  fx;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  fx;  fv  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  fx;  fv  =  fx;  }	  v    =    fx;    fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
30	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  >=  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  0)  {  if(fu  >=  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  0)  {  if(fu  >=  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }	  if(fu    ==    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  0)  {  if(fu  <  =  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }	  if(fu    ==    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  if(!isMinim)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(!isMinim)  {  return  this;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(!isMinim)  {  return  this;  }	  if(!isMinim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
33	[BUG]  [BUGGY]  if(!isMinim)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(!isMinim)  {  return;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(!isMinim)  {  return;  }	  if(!isMinim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
34	[BUG]  [BUGGY]  }  else  if(fu  ==  0  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  ==  0  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  ==  0  ||  Precision.equals(w,  x)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    v    ||    Precision.equals(w,    x)||    Precision.equals(v,    w))    {    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
35	[BUG]  [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  w;  }	  v    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  fv)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  fv)||  Precision.equals(v,  fv))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(v,  fv)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    fv)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
37	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  fv)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  fv)||  Precision.equals(v,  fv))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(w,  fv)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    fv)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
38	[BUG]  [BUGGY]  Integer  fv  =  iter.next();  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  Integer  fv  =  iter.next();  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	Integer  fv  =  iter.next();	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    fx;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
39	[BUG]  [BUGGY]  if(fu  ==  a)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  a)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  a)  {  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }	  if(fu    ==    w)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
40	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  x)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  x)||  Precision.equals(v,  fv))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(v,  x)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    x)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
41	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  fx)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(w,  fx)||  Precision.equals(v,  fv))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(w,  fx)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    x)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
42	[BUG]  [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(v,  x)||  Precision.equals(v,  fw))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  fw  ||  Precision.equals(v,  x)||  Precision.equals(v,  fw))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  fw  ||  Precision.equals(v,  x)||  Precision.equals(v,  fw))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    x)||    Precision.equals(v,    fw))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
43	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  fw)||  Precision.equals(v,  fw))  {  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  fw)||  Precision.equals(v,  fw))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(v,  fw)||  Precision.equals(v,  fw))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    x)||    Precision.equals(v,    fw))    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
44	[BUG]  [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(v,  x))  {  v  =  fx;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(v,  x))  {  v  =  fx;  fv  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fw  ||  Precision.equals(v,  x))  {  v  =  fx;  fv  =  fx;  }	  v    =    fx;    fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
45	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  fx;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  fx;  fv  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  fx;  fv  =  fx;  }	  v    =    fx;    fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
46	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  >=  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  0)  {  if(fu  >=  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  0)  {  if(fu  >=  v  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  w;  }	  if(fu    ==    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
47	[BUG]  [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fx;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fx;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fx;  }	  v    =    w;    fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
48	[BUG]  [BUGGY]  if(fv  <  =  0  ||  Precision.equals(w,  x))  {  v  =  0;  fv  =  0;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fv  <  =  0  ||  Precision.equals(w,  x))  {  v  =  0;  fv  =  0;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fv  <  =  0  ||  Precision.equals(w,  x))  {  v  =  0;  fv  =  0;  }	  if(fu    <    =    fv    ||    Precision.equals(w,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  fv  =  a;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  fv  =  a;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	fv  =  a;	  fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
50	[BUG]  [BUGGY]  }  else  if(fu  <  =  v  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  v  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  v  ||  Precision.equals(w,  x)||  Precision.equals(v,  fv))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    x)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
51	[BUG]  [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  fv  ||  Precision.equals(v,  x))  {  v  =  w;  fv  =  fw;  }	  if(fu    <    =    fv    ||    Precision.equals(w,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	int  x  =  0;  x  <  iter.next();  x++)  {  v  =  w;  }	  if(isMinimum)    {    for(int    x    =    0;    x    <    iter.next();    x++)    {    v    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
53	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }	  if(fu    ==    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  if(fu  <  =  MIN_RELATIVE_TOLERANCE)  {  if(!isMinimim)  {  return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  <  =  MIN_RELATIVE_TOLERANCE)  {  if(!isMinimim)  {  return  null;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  <  =  MIN_RELATIVE_TOLERANCE)  {  if(!isMinimim)  {  return  null;  }	  if(fu    <    =    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
55	[BUG]  [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  fv)||  Precision.equals(v,  w))  {  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  }  else  if(fu  <  =  w  ||  Precision.equals(v,  fv)||  Precision.equals(v,  w))  {  [BUGGY]      Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	}  else  if(fu  <  =  w  ||  Precision.equals(v,  fv)||  Precision.equals(v,  w))  {	  }    else    if(fu    <    =    fw    ||    Precision.equals(w,    fv)||    Precision.equals(v,    fv))    {    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
56	[BUG]  [BUGGY]  if(!isMinimim)  {  return  this;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(!isMinimim)  {  return  this;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(!isMinimim)  {  return  this;  }	  if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
57	[BUG]  [BUGGY]  if(!isMinimim)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(!isMinimim)  {  return;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(!isMinimim)  {  return;  }	  if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
58	[BUG]  [BUGGY]  if(fu  >=  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  >=  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  >=  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  w;  }	  if(fu    >=    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    w;    }    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  fw;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  fw;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  0)  {  if(fu  <  =  fv  ||  Precision.equals(v,  w))  {  v  =  w;  fv  =  fw;  }	  if(fu    ==    0)    {    if(fu    <    =    fv    ||    Precision.equals(v,    x))    {    v    =    w;    fv    =    fw;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  if(!isMinim)return  this;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(!isMinim)return  this;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(!isMinim)return  this;  }	  if(!isMinim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
61	[BUG]  [BUGGY]  v  =  w;  fv  =  fv;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  v  =  w;  fv  =  fv;  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	v  =  w;  fv  =  fv;	  v    =    w;    fv    =    fx;    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
62	[BUG]  [BUGGY]  if(fu  ==  GOLDEN_SECTION)  {  if(!isMinimim)return  null;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      a  =  u;  }  else  {  b  =  u;  }  if  (fu  <=  fw  ||  Precision.equals(w,  x))  {  v  =  w;  fv  =  fw;  w  =  u;  fw  =  fu;      [BUGGY]  if(fu  ==  GOLDEN_SECTION)  {  if(!isMinimim)return  null;  }  [BUGGY]      }  else  if  (fu  <=  fv  ||        Precision.equals(v,  x)  ||                Precision.equals(v,  w))  {  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  fv  =  fu;  }  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3779644730092272	266	268	1	replace	if(fu  ==  GOLDEN_SECTION)  {  if(!isMinimim)return  null;  }	  if(fu    ==    GOLDEN_SECTION)    {    if(!isMinimim)    {    return    null;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
