bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Preconditions.checkState(previous  ==  null);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  Preconditions.checkState(previous  ==  null);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	Preconditions.checkState(previous  ==  null);	  Preconditions.checkState(previous!=    null);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  fv?  fx  :  -fx);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  fv?  fx  :  -fx);  [BUGGY]      =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  fv?  fx  :  -fx);	  UnivariatePointValuePair    current    =    new    UnivariatePointValuePair(fw,    fv?    fx    :    -fx);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
3	[BUG]  [BUGGY]  previous  =  new  UnivariatePointValuePair(x,  fv?  fx  :  -fx);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  previous  =  new  UnivariatePointValuePair(x,  fv?  fx  :  -fx);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	previous  =  new  UnivariatePointValuePair(x,  fv?  fx  :  -fx);	  if(!isMinim)    {    previous    =    new    UnivariatePointValuePair(x,    isMinim?    fx    :    -fx);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
4	[BUG]  [BUGGY]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(fx,  fv?  fw  :  -fx);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(fx,  fv?  fw  :  -fx);  [BUGGY]      =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(fx,  fv?  fw  :  -fx);	  UnivariatePointValuePair    current    =    new    UnivariatePointValuePair(fx,    fv?    fx    :    -fx);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
5	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(fw);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  fx  =  computeObjectiveValue(fw);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	fx  =  computeObjectiveValue(fw);	  if(!isMinim)    {    fx    =    computeObjectiveValue(fv);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
6	[BUG]  [BUGGY]  Preconditions.checkState(!isMaximum)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  Preconditions.checkState(!isMaximum)  {  fx  =  -fx;  }  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	Preconditions.checkState(!isMaximum)  {  fx  =  -fx;  }	  if(previous!=    null)    {    if(!isMaximum)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
7	[BUG]  [BUGGY]  previous  =  new  UnivariatePointValuePair(fx,  isMinim?  fw  :  -fx);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  previous  =  new  UnivariatePointValuePair(fx,  isMinim?  fw  :  -fx);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	previous  =  new  UnivariatePointValuePair(fx,  isMinim?  fw  :  -fx);	  previous    =    new    UnivariatePointValuePair(fw,    isMinim?    fx    :    -fx);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(v);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  fx  =  computeObjectiveValue(v);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	fx  =  computeObjectiveValue(v);	  fx    =    computeObjectiveValue(fv);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
9	[BUG]  [BUGGY]  fx  =  -fx  +  1;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  fx  =  -fx  +  1;  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	fx  =  -fx  +  1;	  fx    =    -fx;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
10	[BUG]  [BUGGY]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim?  fw  :  -fx);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim?  fw  :  -fx);  [BUGGY]      =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim?  fw  :  -fx);	  UnivariatePointValuePair    current    =    new    UnivariatePointValuePair(fx,    isMinim?    fw    :    -fx);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
11	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  fx  =  computeObjectiveValue(x);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	fx  =  computeObjectiveValue(x);	  fx    =    computeObjectiveValue(fv);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
12	[BUG]  [BUGGY]  Preconditions.checkState(!isMinim);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  Preconditions.checkState(!isMinim);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	Preconditions.checkState(!isMinim);	  if(!isMinim)    {    fx    =    computeObjectiveValue(fv);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
13	[BUG]  [BUGGY]  fx  =  -fw;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  fx  =  -fw;  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	fx  =  -fw;	  fx    =    -fx;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
14	[BUG]  [BUGGY]  if(!isMinim)  {  fx  =  computeObjectiveValue(fw);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  if(!isMinim)  {  fx  =  computeObjectiveValue(fw);  }  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	if(!isMinim)  {  fx  =  computeObjectiveValue(fw);  }	  if(!isMinim)    {    fx    =    computeObjectiveValue(fv);    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
15	[BUG]  [BUGGY]  Preconditions.checkNotNull(fv);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  Preconditions.checkNotNull(fv);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	Preconditions.checkNotNull(fv);	  Preconditions.checkNotNull(previous);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  Preconditions.checkState(fv  >  previous);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  Preconditions.checkState(fv  >  previous);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	Preconditions.checkState(fv  >  previous);	  Preconditions.checkNotNull(previous);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  if(!isMaximum)  {  fx  =  -fx;  }  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  if(!isMaximum)  {  fx  =  -fx;  }  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	if(!isMaximum)  {  fx  =  -fx;  }	  if(previous!=    null)    {    if(!isMaximum)    {    fx    =    -fx;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
18	[BUG]  [BUGGY]  fx  =  -previous;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  fx  =  -previous;  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	fx  =  -previous;	  fx    =    -fx;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  if(!isMinim)  {  previous  =  new  UnivariatePointValuePair(fx,  isMinim?  fx  :  -fx);  }  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  if(!isMinim)  {  previous  =  new  UnivariatePointValuePair(fx,  isMinim?  fx  :  -fx);  }  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	if(!isMinim)  {  previous  =  new  UnivariatePointValuePair(fx,  isMinim?  fx  :  -fx);  }	  if(!isMinim)    {    previous    =    new    UnivariatePointValuePair(x,    isMinim?    fx    :    -fx);    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  fx  =  computeObjectiveValue(x,  fv);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]      double  d  =  0;  double  e  =  0;  double  fx  =  computeObjectiveValue(x);  if  (!isMinim)  {  fx  =  -fx;  }  double  fv  =  fx;  double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;      [BUGGY]  fx  =  computeObjectiveValue(x,  fv);  [BUGGY]      UnivariatePointValuePair  current    =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);  final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;    [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	148	149	1	replace	fx  =  computeObjectiveValue(x,  fv);	  fx    =    computeObjectiveValue(fv);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
