projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){if(isMinim){previous=newUnivariatePointValuePair(x,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){if(!isMinim){previous=newUnivariatePointValuePair(x,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){if(isMinim){previous=newUnivariatePointValuePair(fx,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(x,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(fx,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(fw,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){if(isMinim){previous=newUnivariatePointValuePair(fw,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148intiter=0;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){if(isMinim){fx=computeObjectiveValue(fv);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){if(!isMinim){fx=-fx;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148previous=newUnivariatePointValuePair(fw,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148previous=newUnivariatePointValuePair(fx,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(fx,fv?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148previous=newUnivariatePointValuePair(x,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=computeObjectiveValue(fv);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148Preconditions.checkState(previous!=null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148doubleiter=0;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=-fx;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(fx,isMinim?fw:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148Preconditions.checkNotNull(previous);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){if(!isMaximum){fx=-fx;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(fw,fv?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(!isMinim){previous=newUnivariatePointValuePair(x,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(!isMinim){fx=-fx;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){previous=newUnivariatePointValuePair(x,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(previous!=null){previous=newUnivariatePointValuePair(fx,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(!isMinim){fx=computeObjectiveValue(fv);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148Preconditions.checkState(previous==null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(x,fv?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148previous=newUnivariatePointValuePair(x,fv?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(fx,fv?fw:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=computeObjectiveValue(fw);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148Preconditions.checkState(!isMaximum){fx=-fx;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148previous=newUnivariatePointValuePair(fx,isMinim?fw:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=computeObjectiveValue(v);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=-fx+1;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148UnivariatePointValuePaircurrent=newUnivariatePointValuePair(x,isMinim?fw:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=computeObjectiveValue(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148Preconditions.checkState(!isMinim);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=-fw;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(!isMinim){fx=computeObjectiveValue(fw);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148Preconditions.checkNotNull(fv);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148Preconditions.checkState(fv>previous);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(!isMaximum){fx=-fx;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=-previous;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148if(!isMinim){previous=newUnivariatePointValuePair(fx,isMinim?fx:-fx);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java148fx=computeObjectiveValue(x,fv);
