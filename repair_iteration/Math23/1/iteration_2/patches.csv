bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  e  =  b  -  x;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]        AssertionError      [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  int  e  =  b  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	int  e  =  b  -  x;	          e    =    b    -    x;    int    e    =    b    -    x;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	20	None	replace
2	[BUG]  [BUGGY]  int  e  =  b  -  m;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]          AssertionError      [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  int  e  =  b  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	int  e  =  b  -  m;	          e    =    b    -    x;    int    e    =    b    -    x;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	20	None	replace
3	[BUG]  [BUGGY]  d  =  a  -  x;  dev  =  b  -  x;  [CE]  cannot  find  symbol  dev  [FE]        AssertionError      [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  a  -  x;  dev  =  b  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d  =  a  -  x;  dev  =  b  -  x;	          d    =    a    -    x;    dev    =    a    -    x;    	non-compiled	[CE]  cannot  find  symbol  dev	23	None	replace
4	[BUG]  [BUGGY]  d  =  m  -  x;  d  =  m  -  x;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  m  -  x;  d  =  m  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    m    -    x;    d  =  m  -  x;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	21	None	add
5	[BUG]  [BUGGY]  d  =  m  -  x;  int  d  =  m  -  x;  [CE]  variable  d  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  m  -  x;  int  d  =  m  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    m    -    x;    int  d  =  m  -  x;	  	non-compiled	[CE]  variable  d  is  already  defined  in  method  doOptimize()	21	None	add
6	[BUG]  [BUGGY]  d  =  m  -  x;  d  =  m  -  x);  [CE]  ';'  expected  [FE]        AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  m  -  x;  d  =  m  -  x);  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    m    -    x;    d  =  m  -  x);	  	non-compiled	[CE]  ';'  expected	21	None	add
7	[BUG]  [BUGGY]  d  =  b  -  m;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  b  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d  =  b  -  m;	  d    =    a    -    m;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	2	None	replace
8	[BUG]  [BUGGY]          e    =    b    -    x;    e  =  a  -  x;  e  =  b  -  x;  e  =  a  -  x;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    b    -    x;    e  =  a  -  x;  e  =  b  -  x;  e  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        b        -        x;        e    =    a    -    x;    e  =  b  -  x;  e  =  a  -  x;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	7	None	add
9	[BUG]  [BUGGY]          e    =    b    -    x;    e  =  a  -  x;  int  e  =  b  -  x;  e  =  a  -  x;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    b    -    x;    e  =  a  -  x;  int  e  =  b  -  x;  e  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        b        -        x;        e    =    a    -    x;    int  e  =  b  -  x;  e  =  a  -  x;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	7	None	add
10	[BUG]  [BUGGY]          e    =    b    -    x;    e  =  b  -  x;  e  =  b  -  x;  e  =  b  -  x;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    b    -    x;    e  =  b  -  x;  e  =  b  -  x;  e  =  b  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        b        -        x;        e    =    b    -    x;    e  =  b  -  x;  e  =  b  -  x;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	5	None	add
11	[BUG]  [BUGGY]          e    =    b    -    x;    e  =  b  -  x;  e  =  b  -  x;  e  =  b  -  y;  [CE]  cannot  find  symbol  y  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    b    -    x;    e  =  b  -  x;  e  =  b  -  x;  e  =  b  -  y;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        b        -        x;        e    =    b    -    x;    e  =  b  -  x;  e  =  b  -  y;	  	non-compiled	[CE]  cannot  find  symbol  y	5	None	add
12	[BUG]  [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  -  x;  d  =  a  -  x;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    TooManyEvaluationsException    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  -  x;  d  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                d        =        a        -        x;        d    =    a    -    x;    d  =  a  -  x;  d  =  a  -  x;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	17	None	add
13	[BUG]  [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  -  x;  d  =  a  -  y;  [CE]  cannot  find  symbol  y  [FE]      TooManyEvaluationsException    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  -  x;  d  =  a  -  y;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                d        =        a        -        x;        d    =    a    -    x;    d  =  a  -  x;  d  =  a  -  y;	  	non-compiled	[CE]  cannot  find  symbol  y	17	None	add
14	[BUG]  [BUGGY]  d  =  a  -  m;  d  =  a  -  m;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  a  -  m;  d  =  a  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    a    -    m;    d  =  a  -  m;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	1	None	add
15	[BUG]  [BUGGY]  d  =  a  -  m;  dev  d  =  a  -  m;  [CE]  cannot  find  symbol  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  a  -  m;  dev  d  =  a  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    a    -    m;    dev  d  =  a  -  m;	  	non-compiled	[CE]  cannot  find  symbol	1	None	add
16	[BUG]  [BUGGY]  e    =    b    -    m;    e  =  a  -  m;  e  =  b  -  m;  e  =  a  -  m;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e    =    b    -    m;    e  =  a  -  m;  e  =  b  -  m;  e  =  a  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e        =        b        -        m;        e    =    a    -    m;    e  =  b  -  m;  e  =  a  -  m;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	15	None	add
17	[BUG]  [BUGGY]  e    =    b    -    m;    e  =  a  -  m;  int  e  =  b  -  m;  e  =  a  -  m;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e    =    b    -    m;    e  =  a  -  m;  int  e  =  b  -  m;  e  =  a  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e        =        b        -        m;        e    =    a    -    m;    int  e  =  b  -  m;  e  =  a  -  m;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	15	None	add
18	[BUG]  [BUGGY]  int  e  =  a  -  x;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]        AssertionError      [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  int  e  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	int  e  =  a  -  x;	          e    =    a    -    x;    int    e    =    a    -    x;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	24	None	replace
19	[BUG]  [BUGGY]  int  e  =  a  -  m;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]          AssertionError      [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  int  e  =  a  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	int  e  =  a  -  m;	          e    =    a    -    x;    int    e    =    a    -    x;    	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	24	None	replace
20	[BUG]  [BUGGY]  e  =  a  -  m;  e  =  a  -  m;  [CE]  variable  e  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e  =  a  -  m;  e  =  a  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e    =    a    -    m;    e  =  a  -  m;	  	non-compiled	[CE]  variable  e  is  already  defined  in  method  doOptimize()	3	None	add
21	[BUG]  [BUGGY]  e  =  a  -  m;  e  =  b  -  m;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e  =  a  -  m;  e  =  b  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e    =    a    -    m;    e  =  b  -  m;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	3	None	add
22	[BUG]  [BUGGY]          e    =    a    -    x;    e  =  b  -  x;  e  =  a  -  x;  e  =  b  -  x;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    a    -    x;    e  =  b  -  x;  e  =  a  -  x;  e  =  b  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        a        -        x;        e    =    b    -    x;    e  =  a  -  x;  e  =  b  -  x;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	11	None	add
23	[BUG]  [BUGGY]          e    =    a    -    x;    e  =  b  -  x;  e  =  a  -  x;  e  =  b  -  y;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    a    -    x;    e  =  b  -  x;  e  =  a  -  x;  e  =  b  -  y;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        a        -        x;        e    =    b    -    x;    e  =  a  -  x;  e  =  b  -  y;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	11	None	add
24	[BUG]  [BUGGY]  e    =    b    -    m;    e  =  b  -  m;  e  =  b  -  m;  e  =  b  -  m;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e    =    b    -    m;    e  =  b  -  m;  e  =  b  -  m;  e  =  b  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e        =        b        -        m;        e    =    b    -    m;    e  =  b  -  m;  e  =  b  -  m;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	13	None	add
25	[BUG]  [BUGGY]  e    =    b    -    m;    e  =  b  -  m;  e  =  a  -  m;  e  =  b  -  m;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e    =    b    -    m;    e  =  b  -  m;  e  =  a  -  m;  e  =  b  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e        =        b        -        m;        e    =    b    -    m;    e  =  a  -  m;  e  =  b  -  m;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	13	None	add
26	[BUG]  [BUGGY]  int  d  =  a  -  x;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]          AssertionError      [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  int  d  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	int  d  =  a  -  x;	          d    =    a    -    x;    int    d    =    a    -    x;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	19	None	replace
27	[BUG]  [BUGGY]  int  d  =  a  -  m;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]            AssertionError      [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  int  d  =  a  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	int  d  =  a  -  m;	          d    =    a    -    x;    int    d    =    a    -    x;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	19	None	replace
28	[BUG]  [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  e  =  a  -  x;  e  =  a  -  x;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  e  =  a  -  x;  e  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        a        -        x;        e    =    a    -    x;    e  =  a  -  x;  e  =  a  -  x;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	9	None	add
29	[BUG]  [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  int  e  =  a  -  x;  e  =  a  -  x;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]      AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  int  e  =  a  -  x;  e  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        a        -        x;        e    =    a    -    x;    int  e  =  a  -  x;  e  =  a  -  x;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	9	None	add
30	[BUG]  [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  e  =  a  -  x;  e  =  a  -  y;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  e  =  a  -  x;  e  =  a  -  y;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        a        -        x;        e    =    a    -    x;    e  =  a  -  x;  e  =  a  -  y;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	9	None	add
31	[BUG]  [BUGGY]  d  =  m  -  a;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  m  -  a;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d  =  m  -  a;	  d    =    a    -    m;    	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	2	None	replace
32	[BUG]  [BUGGY]  e  =  a  -  m;  e  =  a  -  m.;  [CE]  <identifier>  expected  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e  =  a  -  m;  e  =  a  -  m.;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e    =    a    -    m;    e  =  a  -  m.;	  	non-compiled	[CE]  <identifier>  expected	3	None	add
33	[BUG]  [BUGGY]  d  =  m  -  x;  dev  d  =  m  -  x;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  m  -  x;  dev  d  =  m  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    m    -    x;    dev  d  =  m  -  x;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	21	None	add
34	[BUG]  [BUGGY]  d  =  a  -  m;  dev  =  a  -  m;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  a  -  m;  dev  =  a  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    a    -    m;    dev  =  a  -  m;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	1	None	add
35	[BUG]  [BUGGY]  e    =    b    -    m;    e  =  b  -  m;  E  =  b  -  m;  e  =  b  -  m;  [CE]  variable  u  is  already  defined  in  method  doOptimize()  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e    =    b    -    m;    e  =  b  -  m;  E  =  b  -  m;  e  =  b  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e        =        b        -        m;        e    =    b    -    m;    E  =  b  -  m;  e  =  b  -  m;	  	non-compiled	[CE]  variable  u  is  already  defined  in  method  doOptimize()	13	None	add
36	[BUG]  [BUGGY]          e    =    b    -    x;    e  =  a  -  x;  e  =  b  -  x;  e  =  a  -  y;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    b    -    x;    e  =  a  -  x;  e  =  b  -  x;  e  =  a  -  y;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        b        -        x;        e    =    a    -    x;    e  =  b  -  x;  e  =  a  -  y;	  	non-compiled	[CE]  'else'  without  'if'	7	None	add
37	[BUG]  [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  *  x;  d  =  a  -  x;  [CE]  'else'  without  'if'  [FE]    TooManyEvaluationsException    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  *  x;  d  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                d        =        a        -        x;        d    =    a    -    x;    d  =  a  *  x;  d  =  a  -  x;	  	non-compiled	[CE]  'else'  without  'if'	17	None	add
38	[BUG]  [BUGGY]  e  =  a  -  m;  e  =  a  *  m;  [CE]  'else'  without  'if'  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e  =  a  -  m;  e  =  a  *  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e    =    a    -    m;    e  =  a  *  m;	  	non-compiled	[CE]  'else'  without  'if'	3	None	add
39	[BUG]  [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  e  =  a  +  x;  e  =  a  -  x;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    a    -    x;    e  =  a  -  x;  e  =  a  +  x;  e  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        a        -        x;        e    =    a    -    x;    e  =  a  +  x;  e  =  a  -  x;	  	non-compiled	[CE]  illegal  start  of  expression	9	None	add
40	[BUG]  [BUGGY]  d  =  a  -  m;  d  =  b  -  m;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  d  =  a  -  m;  d  =  b  -  m;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	d    =    a    -    m;    d  =  b  -  m;	  	non-compiled	[CE]  illegal  start  of  expression	1	None	add
41	[BUG]  [BUGGY]          e    =    b    -    x;    e  =  b  -  x;  e  =  a  -  x;  e  =  b  -  x;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          e    =    b    -    x;    e  =  b  -  x;  e  =  a  -  x;  e  =  b  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                e        =        b        -        x;        e    =    b    -    x;    e  =  a  -  x;  e  =  b  -  x;	  	non-compiled	[CE]  illegal  start  of  expression	5	None	add
42	[BUG]  [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  +  x;  d  =  a  -  x;  [CE]  illegal  start  of  expression  [FE]    TooManyEvaluationsException    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]          d    =    a    -    x;    d  =  a  -  x;  d  =  a  +  x;  d  =  a  -  x;  [BUGGY]      e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	                d        =        a        -        x;        d    =    a    -    x;    d  =  a  +  x;  d  =  a  -  x;	  	non-compiled	[CE]  illegal  start  of  expression	17	None	add
43	[BUG]  [BUGGY]  e    =    b    -    m;    e  =  a  -  m;  d  =  b  -  m;  e  =  a  -  m;  [CE]  illegal  start  of  expression  [FE]    AssertionError    [CONTEXT]      if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  }  else  {  if  (x  <  m)  {      [BUGGY]  e    =    b    -    m;    e  =  a  -  m;  d  =  b  -  m;  e  =  a  -  m;  [BUGGY]      }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.7071067811865475	208	208	1	replace	e        =        b        -        m;        e    =    a    -    m;    d  =  b  -  m;  e  =  a  -  m;	  	non-compiled	[CE]  illegal  start  of  expression	15	None	add
