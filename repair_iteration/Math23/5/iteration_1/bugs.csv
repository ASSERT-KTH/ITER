bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  fv  =  fu;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  fv  =  fu;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  fv  =  fu;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
2	[BUG]  [BUGGY]    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  v  =  fu;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  v  =  fu;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  v  =  fu;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
3	[BUG]  [BUGGY]    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  fv  =  u;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  fv  =  u;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  0  ||  Precision.equals(v,  x)||  Precision.equals(v,  w))  {  fv  =  u;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
4	[BUG]  [BUGGY]  fv  =  w;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]  fv  =  w;  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	fv  =  w;	fv  =  fu;  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  fv  =  x;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]  fv  =  x;  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	fv  =  x;	fv  =  fu;  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
6	[BUG]  [BUGGY]    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  w;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  w;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  w;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
7	[BUG]  [BUGGY]    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  h;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  h;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  h;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
8	[BUG]  [BUGGY]    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  u;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  u;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  x  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  u;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
9	[BUG]  [BUGGY]  fv  =  v;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]  fv  =  v;  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	fv  =  v;	fv  =  fu;  	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  w;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  w;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  w;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
11	[BUG]  [BUGGY]    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  u;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  u;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  u;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
12	[BUG]  [BUGGY]    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  h;  }  else  {  v  =  v;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  }  else  if  (fu  <=  fv  ||  Precision.equals(v,  x)  ||  Precision.equals(v,  w))  {  v  =  u;  [BUGGY]    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  h;  }  else  {  v  =  v;  }  [BUGGY]  fv  =  fu;  }  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4082482904638631	270	270	1	replace	    if(fu  <  =  v  ||  Precision.equals(v,  w)||  Precision.equals(v,  w))  {  v  =  h;  }  else  {  v  =  v;  }		non-compiled	[CE]  illegal  start  of  expression	10	None	add
