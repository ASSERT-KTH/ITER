bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double  tol1  =  1  *  FastMath.abs(m)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  1  *  FastMath.abs(m)+  1;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  1  *  FastMath.abs(m)+  1;	  final    double    tol1    =    1    *    FastMath.abs(x)+    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
2	[BUG]  [BUGGY]  final  double  tol1  =  1  *  m  *  FastMath.abs(x)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  1  *  m  *  FastMath.abs(x)+  1;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  1  *  m  *  FastMath.abs(x)+  1;	  final    double    tol1    =    1    *    FastMath.abs(x)+    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
3	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  b;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  b;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  b;	      final    double    a    =    relativeThreshold    *    FastMath.abs(m)+    b;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
4	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  m;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  m;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  m;	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(m)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
5	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)/  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)/  absoluteThreshold;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)/  absoluteThreshold;	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(m)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
6	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(relativeThreshold)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(relativeThreshold)+  absoluteThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(relativeThreshold)+  absoluteThreshold;	  final    double    tol1    =    relativeThreshold    *    FastMath.abs(m)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  final  double  tol1  =  absoluteThreshold  *  FastMath.abs(m)+  relativeThreshold;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  absoluteThreshold  *  FastMath.abs(m)+  relativeThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  absoluteThreshold  *  FastMath.abs(m)+  relativeThreshold;	  final    double    tol1    =    relativeThreshold    *    FastMath.abs(m)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
8	[BUG]  [BUGGY]  final  double  a  =  absoluteThreshold  *  FastMath.abs(a)/  GOLDEN_SECTION;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  a  =  absoluteThreshold  *  FastMath.abs(a)/  GOLDEN_SECTION;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  a  =  absoluteThreshold  *  FastMath.abs(a)/  GOLDEN_SECTION;	      final    double    a    =    relativeThreshold    *    FastMath.abs(a)/    GOLDEN_SECTION;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
9	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(m)/  relativeThreshold;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(m)/  relativeThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(m)/  relativeThreshold;	  final    double    tol1    =    m    *    FastMath.abs(x)+    relativeThreshold;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
10	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(m)+  1;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(m)+  1;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(m)+  1;	  final    double    tol1    =    m    *    FastMath.abs(x)+    relativeThreshold;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
11	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  m;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  m;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(x)+  m;	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
12	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  2;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  2;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(m)/  2;	      final    double    a    =    relativeThreshold    *    FastMath.abs(m)/    GOLDEN_SECTION;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
13	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m  -  1);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m  -  1);  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m  -  1);	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(m);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
14	[BUG]  [BUGGY]  final  double  tol1  =  a  *  FastMath.abs(m)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  a  *  FastMath.abs(m)+  absoluteThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  a  *  FastMath.abs(m)+  absoluteThreshold;	  final    double    tol1    =    a    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)/  a;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)/  a;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)/  a;	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(m)+    a;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
16	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  b;  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  b;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(m)+  b;	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(m)+    a;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(m)/  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(m)/  absoluteThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(m)/  absoluteThreshold;	  final    double    tol1    =    m    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
18	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(m)+  absoluteThreshold;	      final    double    a    =    relativeThreshold    *    FastMath.abs(m)+    b;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
19	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(v)+  relativeThreshold;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(v)+  relativeThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(v)+  relativeThreshold;	  final    double    tol1    =    m    *    FastMath.abs(x)+    relativeThreshold;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(x)/  relativeThreshold;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(x)/  relativeThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(x)/  relativeThreshold;	  final    double    tol1    =    m    *    FastMath.abs(x)+    relativeThreshold;    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  final  double  tol1  =  1  /  FastMath.abs(x)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  1  /  FastMath.abs(x)+  1;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  1  /  FastMath.abs(x)+  1;	  final    double    tol1    =    1    *    FastMath.abs(x)+    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
22	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(a)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(a)+  absoluteThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(a)+  absoluteThreshold;	  final    double    tol1    =    m    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
23	[BUG]  [BUGGY]  final  double  tol1  =  absoluteThreshold  *  FastMath.abs(m)+  m;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  absoluteThreshold  *  FastMath.abs(m)+  m;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  absoluteThreshold  *  FastMath.abs(m)+  m;	  final    double    tol1    =    m    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  final  double  tol1  =  a  *  FastMath.abs(b)+  absoluteThreshold;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  a  *  FastMath.abs(b)+  absoluteThreshold;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  a  *  FastMath.abs(b)+  absoluteThreshold;	  final    double    tol1    =    a    *    FastMath.abs(x)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
25	[BUG]  [BUGGY]  final  double  tol1  =  1  *  FastMath.abs(a)+  1;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  1  *  FastMath.abs(a)+  1;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  1  *  FastMath.abs(a)+  1;	  final    double    tol1    =    1    *    FastMath.abs(x)+    1;    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
26	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)+  m;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)+  m;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(b)+  m;	      final    double    a    =    relativeThreshold    *    FastMath.abs(m)+    b;    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
27	[BUG]  [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(relativeThreshold)+  m;  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  tol1  =  m  *  FastMath.abs(relativeThreshold)+  m;  [BUGGY]    final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  tol1  =  m  *  FastMath.abs(relativeThreshold)+  m;	  final    double    tol1    =    relativeThreshold    *    FastMath.abs(m)+    absoluteThreshold;    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
28	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(b)-  a;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(b)-  a;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(b)-  a;	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(m)-    a;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
29	[BUG]  [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)/  GOLDEN_SECTION;  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  a  =  relativeThreshold  *  FastMath.abs(b)/  GOLDEN_SECTION;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  a  =  relativeThreshold  *  FastMath.abs(b)/  GOLDEN_SECTION;	      final    double    a    =    relativeThreshold    *    FastMath.abs(a)/    GOLDEN_SECTION;    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
30	[BUG]  [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(b)+  a;  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]    double  fw  =  fx;  UnivariatePointValuePair  previous  =  null;  UnivariatePointValuePair  current  =  new  UnivariatePointValuePair(x,  isMinim  ?  fx  :  -fx);  int  iter  =  0;  while  (true)  {  final  double  m  =  0.5  *  (a  +  b);    [BUGGY]  final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(b)+  a;  [BUGGY]    final  double  tol1  =  relativeThreshold  *  FastMath.abs(x)  +  absoluteThreshold;  final  double  tol2  =  2  *  tol1;  final  boolean  stop  =  FastMath.abs(x  -  m)  <=  tol2  -  0.5  *  (b  -  a);  if  (!stop)  {  double  p  =  0;  double  q  =  0;  double  r  =  0;  double  u  =  0;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	155	155	1	replace	final  double  absoluteThreshold  =  relativeThreshold  *  FastMath.abs(b)+  a;	      final    double    absoluteThreshold    =    relativeThreshold    *    FastMath.abs(m)+    a;    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
