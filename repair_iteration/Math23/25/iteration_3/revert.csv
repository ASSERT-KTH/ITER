projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getStartValue();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalintmax=getMax();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getStartValue().getIndex();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getGoalType()==GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMin()==GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMax()==GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(this.getOptimizer()==null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkNotNull(checker);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(this.isOptimized());
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116booleanisMinim=getGoalType()==GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116booleanisMinim=getMax()==GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116booleanisMinim=getMax()!=GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublea=getStartValue().getIndex();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getEndValue().getIndex();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMin()>GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(!this.isOptimized());
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(!isMinim&&checker!=null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublea=getStartValue();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finallonga=getStartValue();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublemax=getMax();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalintmax=getMax()-1;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMax()!=GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(this.getOptimizer()!=null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116booleanisMinim=getMin()==GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMax()>GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(this.isOptimized(),isMinim);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(checker!=null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getStartValue().getIndex()+1;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getEndValue();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getMax();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(this.isOptimized()||this.isOptimized());
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMax()<GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMin()<GoalType.MINIMIZE;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(!isMinim&&checker==null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(!isOptimized());
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublea=getMax();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublemax=getMax()-1;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublea=getEndValue();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(checker==null);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublea=getStartValue().getIndex()+1;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finaldoublea=getEndValue().getIndex();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(isOptimized(),isMinim);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(this.isOptimized()&&this.isOptimized());
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getEndValue().getIndex()+1;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(this.isOptimized(),GoalType.MINIMIZE);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116Preconditions.checkState(!this.isOptimized(),isMinim);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMax()>GoalType.MINIMIZE||
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalinta=getEndValue().getIndex()-1;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java116finalbooleanisMinim=getMax()>GoalType.MINIMIZE_ROOT;
