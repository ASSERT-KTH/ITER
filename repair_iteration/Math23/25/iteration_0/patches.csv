bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  int  a  =  getStartValue();  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    final  int  a  =  getStartValue();  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    final  int  a  =  getStartValue();		non-compiled	[CE]  illegal  start  of  type	50	None	add
2	[BUG]  [BUGGY]    final  int  max  =  getMax();  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    final  int  max  =  getMax();  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    final  int  max  =  getMax();		non-compiled	[CE]  illegal  start  of  type	50	None	add
3	[BUG]  [BUGGY]    final  int  a  =  getStartValue().getIndex();  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    final  int  a  =  getStartValue().getIndex();  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    final  int  a  =  getStartValue().getIndex();		non-compiled	[CE]  illegal  start  of  type	50	None	add
4	[BUG]  [BUGGY]  final  boolean  isMinim  =  getMin()  ==  GoalType.MINIMIZE;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]  final  boolean  isMinim  =  getMin()  ==  GoalType.MINIMIZE;  [BUGGY]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	final  boolean  isMinim  =  getMin()  ==  GoalType.MINIMIZE;	final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
5	[BUG]  [BUGGY]  final  boolean  isMinim  =  getMax()  ==  GoalType.MINIMIZE;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]  final  boolean  isMinim  =  getMax()  ==  GoalType.MINIMIZE;  [BUGGY]  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	final  boolean  isMinim  =  getMax()  ==  GoalType.MINIMIZE;	final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  	non-compiled	[CE]  illegal  start  of  type	49	None	replace
6	[BUG]  [BUGGY]    Preconditions.checkState(this.getOptimizer()  ==  null);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    Preconditions.checkState(this.getOptimizer()  ==  null);  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    Preconditions.checkState(this.getOptimizer()  ==  null);		non-compiled	[CE]  illegal  start  of  type	50	None	add
7	[BUG]  [BUGGY]    Preconditions.checkNotNull(checker);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    Preconditions.checkNotNull(checker);  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    Preconditions.checkNotNull(checker);		non-compiled	[CE]  illegal  start  of  type	50	None	add
8	[BUG]  [BUGGY]    Preconditions.checkState(this.isOptimized());  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    Preconditions.checkState(this.isOptimized());  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    Preconditions.checkState(this.isOptimized());		non-compiled	[CE]  illegal  start  of  type	50	None	add
9	[BUG]  [BUGGY]    boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;		non-compiled	[CE]  illegal  start  of  type	50	None	add
10	[BUG]  [BUGGY]    boolean  isMinim  =  getMax()  ==  GoalType.MINIMIZE;  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    boolean  isMinim  =  getMax()  ==  GoalType.MINIMIZE;  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    boolean  isMinim  =  getMax()  ==  GoalType.MINIMIZE;		non-compiled	[CE]  illegal  start  of  type	50	None	add
11	[BUG]  [BUGGY]    boolean  isMinim  =  getMax()!=  GoalType.MINIMIZE;  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  protected  UnivariatePointValuePair  doOptimize()  {  [BUGGY]    boolean  isMinim  =  getMax()!=  GoalType.MINIMIZE;  [BUGGY]  final  boolean  isMinim  =  getGoalType()  ==  GoalType.MINIMIZE;  final  double  lo  =  getMin();  final  double  mid  =  getStartValue();  final  double  hi  =  getMax();  final  ConvergenceChecker<UnivariatePointValuePair>  checker  =  getConvergenceChecker();  double  a;  double  b;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	116	116	1	replace	    boolean  isMinim  =  getMax()!=  GoalType.MINIMIZE;		non-compiled	[CE]  illegal  start  of  type	50	None	add
