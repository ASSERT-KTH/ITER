bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  d  =  -m;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]  d  =  -m;  [BUGGY]  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	d  =  -m;	d  =  -tol1;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
2	[BUG]  [BUGGY]  d  =  -a;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]  d  =  -a;  [BUGGY]  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	d  =  -a;	d  =  -tol1;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
3	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    [BUGGY]  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	  	d  =  -tol1;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
4	[BUG]  [BUGGY]    u  =  a  -  m;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    u  =  a  -  m;  [BUGGY]  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	    u  =  a  -  m;		non-compiled	[CE]  illegal  start  of  expression	4	None	add
5	[BUG]  [BUGGY]    u  =  a  -  x;  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    u  =  a  -  x;  [BUGGY]  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	    u  =  a  -  x;		non-compiled	[CE]  illegal  start  of  expression	4	None	add
6	[BUG]  [BUGGY]    d  =  m  -  x;  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    d  =  m  -  x;  [BUGGY]  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	    d  =  m  -  x;		non-compiled	[CE]  illegal  start  of  expression	4	None	add
7	[BUG]  [BUGGY]    u  =  m  -  a;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    u  =  m  -  a;  [BUGGY]  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	    u  =  m  -  a;		non-compiled	[CE]  illegal  start  of  expression	4	None	add
8	[BUG]  [BUGGY]  d  =  -1;  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]  d  =  -1;  [BUGGY]  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	d  =  -1;	d  =  -tol1;  	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]    d  =  p  /  q;  [CE]  cannot  find  symbol  y  [FE]    AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    d  =  p  /  q;  [BUGGY]  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	    d  =  p  /  q;		non-compiled	[CE]  cannot  find  symbol  y	4	None	add
10	[BUG]  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  [CE]  cannot  find  symbol  y  [FE]      AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    d  =  p  /  q;  u  =  x  +  d;  [BUGGY]  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	    d  =  p  /  q;  u  =  x  +  d;		non-compiled	[CE]  cannot  find  symbol  y	4	None	add
11	[BUG]  [BUGGY]    d  =  -m  -  x;  [CE]  cannot  find  symbol  y  [FE]        AssertionError  [CONTEXT]  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  [BUGGY]    d  =  -m  -  x;  [BUGGY]  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  e  =  a  -  x;  }  d  =  GOLDEN_SECTION  *  e;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.5773502691896258	193	193	1	replace	    d  =  -m  -  x;		non-compiled	[CE]  cannot  find  symbol  y	4	None	add
