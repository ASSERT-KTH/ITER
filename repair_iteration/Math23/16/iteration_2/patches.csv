bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  b  =  a.getValue()  <  b.getValue()?  a  :  b;  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]      UnivariatePointValuePair  b,  boolean  isMinim)  {  if  (a  ==  null)  {  return  b;  }  if  (b  ==  null)  {  return  a;  }  if  (isMinim)  {      [BUGGY]  b  =  a.getValue()  <  b.getValue()?  a  :  b;  [BUGGY]      return  a.getValue()  <=  b.getValue()  ?  a  :  b;  }  else  {  return  a.getValue()  >=  b.getValue()  ?  a  :  b;  }  }  [CLASS]  BrentOptimizer  [METHOD]  best  [RETURN_TYPE]  UnivariatePointValuePair  UnivariatePointValuePair  a  UnivariatePointValuePair  b  boolean  isMinim  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  UnivariatePointValuePair  a  b  boolean  isMinim  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	305	305	1	replace	b  =  a.getValue()  <  b.getValue()?  a  :  b;	  b    =    a.getValue()    <    =    b.getValue()?    a    :    b;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
2	[BUG]  [BUGGY]  b  =  a.getValue()  >=  b.getValue()?  a  :  b;  [CE]  illegal  start  of  type  [FE]                  AssertionError      [CONTEXT]      UnivariatePointValuePair  b,  boolean  isMinim)  {  if  (a  ==  null)  {  return  b;  }  if  (b  ==  null)  {  return  a;  }  if  (isMinim)  {      [BUGGY]  b  =  a.getValue()  >=  b.getValue()?  a  :  b;  [BUGGY]      return  a.getValue()  <=  b.getValue()  ?  a  :  b;  }  else  {  return  a.getValue()  >=  b.getValue()  ?  a  :  b;  }  }  [CLASS]  BrentOptimizer  [METHOD]  best  [RETURN_TYPE]  UnivariatePointValuePair  UnivariatePointValuePair  a  UnivariatePointValuePair  b  boolean  isMinim  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  UnivariatePointValuePair  a  b  boolean  isMinim  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	305	305	1	replace	b  =  a.getValue()  >=  b.getValue()?  a  :  b;	  b    =    a.getValue()    <    =    b.getValue()?    a    :    b;    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
3	[BUG]  [BUGGY]  UnivariatePointValuePair  b  =(UnivariatePointValuePair)a.clone();  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      UnivariatePointValuePair  b,  boolean  isMinim)  {  if  (a  ==  null)  {  return  b;  }  if  (b  ==  null)  {  return  a;  }  if  (isMinim)  {      [BUGGY]  UnivariatePointValuePair  b  =(UnivariatePointValuePair)a.clone();  [BUGGY]      return  a.getValue()  <=  b.getValue()  ?  a  :  b;  }  else  {  return  a.getValue()  >=  b.getValue()  ?  a  :  b;  }  }  [CLASS]  BrentOptimizer  [METHOD]  best  [RETURN_TYPE]  UnivariatePointValuePair  UnivariatePointValuePair  a  UnivariatePointValuePair  b  boolean  isMinim  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  UnivariatePointValuePair  a  b  boolean  isMinim  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	305	305	1	replace	UnivariatePointValuePair  b  =(UnivariatePointValuePair)a.clone();	  UnivariatePointValuePair    b    =(UnivariatePointValuePair)b.clone();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
4	[BUG]  [BUGGY]  a  =  b.getValue()?  min  :  b;  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]      UnivariatePointValuePair  b,  boolean  isMinim)  {  if  (a  ==  null)  {  return  b;  }  if  (b  ==  null)  {  return  a;  }  if  (isMinim)  {      [BUGGY]  a  =  b.getValue()?  min  :  b;  [BUGGY]      return  a.getValue()  <=  b.getValue()  ?  a  :  b;  }  else  {  return  a.getValue()  >=  b.getValue()  ?  a  :  b;  }  }  [CLASS]  BrentOptimizer  [METHOD]  best  [RETURN_TYPE]  UnivariatePointValuePair  UnivariatePointValuePair  a  UnivariatePointValuePair  b  boolean  isMinim  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  UnivariatePointValuePair  a  b  boolean  isMinim  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.3333333333333333	305	305	1	replace	a  =  b.getValue()?  min  :  b;	  a    =    b.getValue()?    a    :    b;    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
