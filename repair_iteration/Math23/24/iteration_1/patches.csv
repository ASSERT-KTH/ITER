bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue()));  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]      [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue()));  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(FieldUtils.safeMultiply(getValue()));	      if(isOptimizer())    {    for(int    i    =    1;    i    <    =    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.ulp(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
2	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(1,  1d);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(1,  1d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(1,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.max(1d,    1d);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
3	[BUG]  [BUGGY]  Validate.notEmpty(getValue());  [CE]  <identifier>  expected  [FE]        AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(getValue());  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	Validate.notEmpty(getValue());	      Validate.notNull(getValue());    	non-compiled	[CE]  <identifier>  expected	12	None	replace
4	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.ulp(1d);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.ulp(1d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.ulp(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.ulp(1d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
5	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.ulp(1d);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.ulp(1d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.ulp(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.ulp(1d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
6	[BUG]  [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type ");  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "JavaOptimizer.start  of  type ");	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
7	[BUG]  [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type: "  +  getName());  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type: "  +  getName());  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "JavaOptimizer.start  of  type: "  +  getName());	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
8	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1  *  FastMath.log(1d);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1  *  FastMath.log(1d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1  *  FastMath.log(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
9	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.log(1d);  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.log(1d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.log(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
10	[BUG]  [BUGGY]  Validate.notEmpty(this);  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  Validate.notEmpty(this);  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	Validate.notEmpty(this);	      Validate.notNull(this);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
11	[BUG]  [BUGGY]  safeMultiply(Factory.ulp(1d));  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]      [BUGGY]  safeMultiply(Factory.ulp(1d));  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(Factory.ulp(1d));	      if(isOptimizer())    {    for(int    i    =    1;    i    <    =    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.sqrt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
12	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.ulp(2d);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.ulp(2d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.ulp(2d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.ulp(2d);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
13	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.ulp(2d);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.ulp(2d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.ulp(2d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.ulp(2d);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
14	[BUG]  [BUGGY]  safeMultiply(getOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]        AssertionError    [CONTEXT]      [BUGGY]  safeMultiply(getOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(getOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }	      if(isOptimizer())    {    for(int    i    =    1;    i    <    =    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.ulp(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	4	None	replace
15	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.min(1d,  2);  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.min(1d,  2);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.min(1d,  2);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.ulp(1d);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
16	[BUG]  [BUGGY]  AssertionError.warning( "msg.end-of.type ",  Arrays.asList(values));  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  AssertionError.warning( "msg.end-of.type ",  Arrays.asList(values));  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "msg.end-of.type ",  Arrays.asList(values));	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
17	[BUG]  [BUGGY]  AssertionError.warning( "NonOptimizer.start  of  type ",  Arrays.asList(values));  [CE]  <identifier>  expected  [FE]              AssertionError    [CONTEXT]      [BUGGY]  AssertionError.warning( "NonOptimizer.start  of  type ",  Arrays.asList(values));  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "NonOptimizer.start  of  type ",  Arrays.asList(values));	      	non-compiled	[CE]  <identifier>  expected	3	None	replace
18	[BUG]  [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getOptimizer()))  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.sqrt  [CE]  invalid  method  declaration;  return  type  required  [FE]          AssertionError    [CONTEXT]      [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getOptimizer()))  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.sqrt  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(FieldUtils.safeMultiply(getOptimizer()))  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.sqrt	      if(isOptimizer())    {    for(int    i    =    1;    i    <    =    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.sqrt(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	5	None	replace
19	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1d);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
20	[BUG]  [BUGGY]  AssertionError.checkState(isOptimizer());  [CE]  <identifier>  expected  [FE]          AssertionError    [CONTEXT]      [BUGGY]  AssertionError.checkState(isOptimizer());  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.checkState(isOptimizer());	      if(isOptimizer())    {    for(int    i    =    1;    i    <    =    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.sqrt(i);    }    	non-compiled	[CE]  <identifier>  expected	5	None	replace
21	[BUG]  [BUGGY]  if(type  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }  [CE]  illegal  start  of  type  [FE]            AssertionError    [CONTEXT]      [BUGGY]  if(type  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	if(type  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
22	[BUG]  [BUGGY]  if(type  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( "Optimizer  is  not  an  object  type. ");  }  [CE]  illegal  start  of  type  [FE]              AssertionError    [CONTEXT]      [BUGGY]  if(type  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( "Optimizer  is  not  an  object  type. ");  }  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	if(type  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }  else  {  throw  new  IllegalArgumentException( "Optimizer  is  not  an  object  type. ");  }	      	non-compiled	[CE]  illegal  start  of  type	3	None	replace
23	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.max(1d,  1d);  [CE]  illegal  start  of  type  [FE]          AssertionError    [CONTEXT]      [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.max(1d,  1d);  [BUGGY]      [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.max(1d,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.max(1d,    1d);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
24	[BUG]  [BUGGY]  AssertionError  <  1  ||  isOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [CE]  illegal  start  of  type  [FE]        AssertionError    [CONTEXT]      [BUGGY]  AssertionError  <  1  ||  isOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError  <  1  ||  isOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }	      if(isOptimizer())    {    for(int    i    =    1;    i    <    =    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.ulp(i);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  AssertionError.warning( "msg.illegal.character ");  [CE]  <identifier>  expected  [FE]            AssertionError    [CONTEXT]      [BUGGY]  AssertionError.warning( "msg.illegal.character ");  [BUGGY]    private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "msg.illegal.character ");	      if(isOptimizer())    {    for(int    i    =    1;    i    <    =    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE;    }    	non-compiled	[CE]  <identifier>  expected	6	None	replace
