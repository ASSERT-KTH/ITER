bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  AssertionError.error( "msg.illegal.character ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.error( "msg.illegal.character ");  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.error( "msg.illegal.character ");	  AssertionError.warning(   "msg.illegal.character   ");    	non-compiled	[CE]  <identifier>  expected	25	None	replace
2	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  /  FastMath.ulp(1d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  /  FastMath.ulp(1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  /  FastMath.ulp(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2d    *    FastMath.ulp(1d);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
3	[BUG]  [BUGGY]  safeMultiply(Factory.ulp(1d),  MIN_RELATIVE_TOLERANCE);  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(Factory.ulp(1d),  MIN_RELATIVE_TOLERANCE);  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(Factory.ulp(1d),  MIN_RELATIVE_TOLERANCE);	  safeMultiply(Factory.ulp(1d));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
4	[BUG]  [BUGGY]  parent  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  parent  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	parent  ==  AssertionError.NON_SYNTHETIC)  {  return  null;  }	  if(type    ==    AssertionError.NON_SYNTHETIC)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
5	[BUG]  [BUGGY]  parent  ==  AssertionError.NON_SYNTHETIC;  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  parent  ==  AssertionError.NON_SYNTHETIC;  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	parent  ==  AssertionError.NON_SYNTHETIC;	  if(type    ==    AssertionError.NON_SYNTHETIC)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
6	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.log(1d);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.log(1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.log(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
7	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  /  FastMath.ulp(2d);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  /  FastMath.ulp(2d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  /  FastMath.ulp(2d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2d    *    FastMath.ulp(2d);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
8	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.min(2d,  2d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.min(2d,  2d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.min(2d,  2d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2d    *    FastMath.ulp(2d);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
9	[BUG]  [BUGGY]  aughtInternalException( "Optimizer  is  not  an  object  type. ");  [CE]  invalid  method  declaration;  return  type  required  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  aughtInternalException( "Optimizer  is  not  an  object  type. ");  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	aughtInternalException( "Optimizer  is  not  an  object  type. ");	  if(type    ==    AssertionError.NON_SYNTHETIC)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "Optimizer    is    not    an    object    type.   ");    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	22	None	replace
10	[BUG]  [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getOptimizer()))  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getOptimizer()))  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(FieldUtils.safeMultiply(getOptimizer()))  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.	  safeMultiply(FieldUtils.safeMultiply(getOptimizer()))    {    for(int    i    =    1;    i    <    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.sqrt    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	18	None	replace
11	[BUG]  [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue(),  getMask()));  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue(),  getMask()));  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(FieldUtils.safeMultiply(getValue(),  getMask()));	  safeMultiply(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
12	[BUG]  [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue(),  2));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue(),  2));  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(FieldUtils.safeMultiply(getValue(),  2));	  safeMultiply(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
13	[BUG]  [BUGGY]  AssertionError.checkState(this.isOptimizer());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.checkState(this.isOptimizer());  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.checkState(this.isOptimizer());	  AssertionError.checkState(isOptimizer());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
14	[BUG]  [BUGGY]  safeMultiply(getOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(1d);  }  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(getOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(1d);  }  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(getOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(1d);  }	  safeMultiply(getOptimizer())    {    for(int    i    =    1;    i    <    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.ulp(i);    }    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	14	None	replace
15	[BUG]  [BUGGY]  AssertionError.warning( "msg.type.end-of.type ",  Arrays.asList(values));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "msg.type.end-of.type ",  Arrays.asList(values));  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "msg.type.end-of.type ",  Arrays.asList(values));	  AssertionError.warning(   "msg.end-of.type   ",    Arrays.asList(values));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
16	[BUG]  [BUGGY]  AssertionError.error( "JavaOptimizer.start  of  type: "  +  getName());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.error( "JavaOptimizer.start  of  type: "  +  getName());  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.error( "JavaOptimizer.start  of  type: "  +  getName());	  AssertionError.warning(   "JavaOptimizer.start    of    type:   "    +    getName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
17	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.min(1,  1d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.min(1,  1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.min(1,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.max(1,    1d);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
18	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(1,  4);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(1,  4);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(1,  4);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.max(1,    1d);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
19	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1L  *  FastMath.log(1d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1L  *  FastMath.log(1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1L  *  FastMath.log(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1    *    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type ",  expected);  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type ",  expected);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "JavaOptimizer.start  of  type ",  expected);	  AssertionError.warning(   "JavaOptimizer.start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
21	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.max(1d,  1d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.max(1d,  1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.max(1d,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.max(1d,    1d);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
22	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.max(1d,  1d);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.max(1d,  1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.max(1d,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.max(1d,    1d);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
23	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.min(1d,  2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.min(1d,  2);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.min(1d,  2);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.min(1d,    2);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
24	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1000);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1000);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1000);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
25	[BUG]  [BUGGY]  private  static  final  long  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1d);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  long  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  long  MIN_RELATIVE_TOLERANCE  =  FastMath.log(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
26	[BUG]  [BUGGY]  AssertionError  <  1  ||  isInterface())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  1  ||  isInterface())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError  <  1  ||  isInterface())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }	  AssertionError    <    1    ||    isOptimizer())    {    for(int    i    =    1;    i    <    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.ulp(i);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
27	[BUG]  [BUGGY]  AssertionError.warning( "NonOptimizer.start  of  type "  +  name,  Arrays.asList(values));  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "NonOptimizer.start  of  type "  +  name,  Arrays.asList(values));  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "NonOptimizer.start  of  type "  +  name,  Arrays.asList(values));	  AssertionError.warning(   "NonOptimizer.start    of    type   ",    Arrays.asList(values));    	non-compiled	[CE]  <identifier>  expected	17	None	replace
28	[BUG]  [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type:  {  0  }   ");  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type:  {  0  }   ");  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "JavaOptimizer.start  of  type:  {  0  }   ");	  AssertionError.warning(   "JavaOptimizer.start    of    type   ");    	non-compiled	[CE]  <identifier>  expected	6	None	replace
29	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.log(1d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.log(1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.log(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2d    *    FastMath.ulp(1d);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
30	[BUG]  [BUGGY]  aughtExceptionHandler.handleOptimizer(null,  null);  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  aughtExceptionHandler.handleOptimizer(null,  null);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	aughtExceptionHandler.handleOptimizer(null,  null);	  if(type    ==    AssertionError.NON_SYNTHETIC)    {    return    null;    }    else    {    throw    new    IllegalArgumentException(   "Optimizer    is    not    an    object    type.   ");    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
31	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(0,  1d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(0,  1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(0,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.max(1,    1d);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
32	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(Locale.getDefault());  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(Locale.getDefault());  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  FastMath.log(Locale.getDefault());	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    FastMath.log(1d);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
33	[BUG]  [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue()  +  1));  [CE]  invalid  method  declaration;  return  type  required  [FE]            AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue()  +  1));  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(FieldUtils.safeMultiply(getValue()  +  1));	  safeMultiply(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
34	[BUG]  [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue(),  getOptimizer()));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(FieldUtils.safeMultiply(getValue(),  getOptimizer()));  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(FieldUtils.safeMultiply(getValue(),  getOptimizer()));	  safeMultiply(FieldUtils.safeMultiply(getValue()));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	1	None	replace
35	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.log(2d);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.log(2d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.log(2d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2d    *    FastMath.ulp(2d);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
36	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.min(2d,  1);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.min(2d,  1);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2d  *  FastMath.min(2d,  1);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2d    *    FastMath.ulp(2d);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
37	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.min(1,  2);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.min(1,  2);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.min(1,  2);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    *    FastMath.min(1d,    2);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
38	[BUG]  [BUGGY]  AssertionError.warning( "msg.end-of.type "  +  name,  Arrays.asList(values));  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "msg.end-of.type "  +  name,  Arrays.asList(values));  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "msg.end-of.type "  +  name,  Arrays.asList(values));	  AssertionError.warning(   "msg.end-of.type   ",    Arrays.asList(values));    	non-compiled	[CE]  <identifier>  expected	16	None	replace
39	[BUG]  [BUGGY]  final  AssertionError  <  1  ||  isOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  final  AssertionError  <  1  ||  isOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	final  AssertionError  <  1  ||  isOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }	  AssertionError    <    1    ||    isOptimizer())    {    for(int    i    =    1;    i    <    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.ulp(i);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
40	[BUG]  [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type: "  +  getClass());  [CE]  <identifier>  expected  [FE]                  AssertionError      [CONTEXT]        [BUGGY]  AssertionError.warning( "JavaOptimizer.start  of  type: "  +  getClass());  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.warning( "JavaOptimizer.start  of  type: "  +  getClass());	  AssertionError.warning(   "JavaOptimizer.start    of    type:   "    +    getName());    	non-compiled	[CE]  <identifier>  expected	7	None	replace
41	[BUG]  [BUGGY]  parent  ==  AssertionError.NON_SYNTHETIC  ||  type  ==  AssertionError.NON_SYNTHETIC;  [CE]  <identifier>  expected  [FE]                AssertionError      [CONTEXT]        [BUGGY]  parent  ==  AssertionError.NON_SYNTHETIC  ||  type  ==  AssertionError.NON_SYNTHETIC;  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	parent  ==  AssertionError.NON_SYNTHETIC  ||  type  ==  AssertionError.NON_SYNTHETIC;	  if(type    ==    AssertionError.NON_SYNTHETIC)    {    return    null;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
42	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.rint(1d);  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.rint(1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  /  FastMath.rint(1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    1d    /    FastMath.ulp(1d);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
43	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.max(1,  1d);  [CE]  illegal  start  of  type  [FE]              AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.max(1,  1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  1d  *  FastMath.max(1,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.max(1,    1d);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
44	[BUG]  [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(2,  1d);  [CE]  illegal  start  of  type  [FE]                AssertionError      [CONTEXT]        [BUGGY]  private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(2,  1d);  [BUGGY]        [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.max(2,  1d);	  private    static    final    double    MIN_RELATIVE_TOLERANCE    =    2    *    FastMath.max(1,    1d);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
45	[BUG]  [BUGGY]  safeMultiply(Factory.ulp(2d));  [CE]  invalid  method  declaration;  return  type  required  [FE]              AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(Factory.ulp(2d));  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(Factory.ulp(2d));	  safeMultiply(Factory.ulp(1d));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
46	[BUG]  [BUGGY]  safeMultiply(Factory.ulp(1d),  0);  [CE]  invalid  method  declaration;  return  type  required  [FE]                AssertionError      [CONTEXT]        [BUGGY]  safeMultiply(Factory.ulp(1d),  0);  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	safeMultiply(Factory.ulp(1d),  0);	  safeMultiply(Factory.ulp(1d));    	non-compiled	[CE]  invalid  method  declaration;  return  type  required	11	None	replace
47	[BUG]  [BUGGY]  AssertionError.checkState(isRelative());  [CE]  <identifier>  expected  [FE]              AssertionError      [CONTEXT]        [BUGGY]  AssertionError.checkState(isRelative());  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError.checkState(isRelative());	  AssertionError.checkState(isOptimizer());    	non-compiled	[CE]  <identifier>  expected	20	None	replace
48	[BUG]  [BUGGY]  AssertionError  <  1  ||  isImmutableAndOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [CE]  illegal  start  of  type  [FE]            AssertionError      [CONTEXT]        [BUGGY]  AssertionError  <  1  ||  isImmutableAndOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }  [BUGGY]      private  static  final  double  MIN_RELATIVE_TOLERANCE  =  2  *  FastMath.ulp(1d);  [CLASS]  BrentOptimizer  [VARIABLES]  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	52	52	1	replace	AssertionError  <  1  ||  isImmutableAndOptimizer())  {  for(int  i  =  1;  i  <  10;  i++)  {  return  MIN_RELATIVE_TOLERANCE  *  FastMath.ulp(i);  }	  AssertionError    <    1    ||    isOptimizer())    {    for(int    i    =    1;    i    <    10;    i++)    {    return    MIN_RELATIVE_TOLERANCE    *    FastMath.ulp(i);    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
