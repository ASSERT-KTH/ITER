bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  u  =  x  +  d;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  x  +  d;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  x  +  d;	      u    =    r    +    d;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  u  =  d  +  r;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  d  +  r;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  d  +  r;	      u    =    r    +    d;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  m  <  tol1  ||  b  -  u  <  tol2)  {	  if    (u    -    m    <    tol2    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
4	[BUG]  [BUGGY]  u  =  p  -  q;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  -  q;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  p  -  q;	      u    =    b    -    q;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  if  (u  <  =  m  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  m  ||  b  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  <  =  m  ||  b  -  u  <  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
6	[BUG]  [BUGGY]  u  =  d  +  m;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  d  +  m;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  d  +  m;	      u    =    m    +    d;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
7	[BUG]  [BUGGY]  m  =  m;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  m  =  m;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	m  =  m;	      if(m    >    a)    {    if(m    >    a)    {    m    =    m;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
8	[BUG]  [BUGGY]  if(m  <  =  0)  {  if(m  >  a)  {  m  =  m;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  <  =  0)  {  if(m  >  a)  {  m  =  m;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(m  <  =  0)  {  if(m  >  a)  {  m  =  m;  }	      if(m    >    a)    {    if(m    >    a)    {    m    =    m;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
9	[BUG]  [BUGGY]  if  (u  -  tol1  <  tol2  ||  e  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  <  tol2  ||  e  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  tol1  <  tol2  ||  e  -  u  <  tol2)  {	  if    (u    -    tol1    <    tol2    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  if  (u  -  tol1  <  tol2  ||  e  -  u  <  tol1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  <  tol2  ||  e  -  u  <  tol1)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  tol1  <  tol2  ||  e  -  u  <  tol1)  {	  if    (u    -    tol1    <    tol2    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  if  (u  <  tol1  ||  b  -  u  >  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  <  tol1  ||  b  -  u  >  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  u  =  b  -  m;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  b  -  m;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  b  -  m;	      u    =    b    -    x;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  u  =  p  -  x;  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  p  -  x;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  p  -  x;	      u    =    b    -    x;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
14	[BUG]  [BUGGY]  if(u  ==  0)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  0)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  -tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  ==  0)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  -tol1;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(x  <  =  m)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(x  <  =  m)  {  d  =  -tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  <  =  m)  {  if(x  <  =  m)  {  d  =  -tol1;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
16	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(x  <  =  m)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(x  <  =  m)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  <  =  m)  {  if(x  <  =  m)  {  d  =  tol1;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  if(u  ==  0)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  0)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  ==  0)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(m  >  tol1)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(m  >  tol1)  {  d  =  -tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  <  =  m)  {  if(m  >  tol1)  {  d  =  -tol1;  }	      if(m    >    tol1)    {    if(a    <    =    m)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  d  =  -tol1;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  d  =  -tol1;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	d  =  -tol1;	      if(m    >    tol1)    {    if(a    <    =    m)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
20	[BUG]  [BUGGY]  if  (u  <  tol1  ||  e  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  e  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  <  tol1  ||  e  -  u  <  tol2)  {	  if    (u    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
21	[BUG]  [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  >  tol2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  tol1  ||  b  -  u  >  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  <  =  tol1  ||  b  -  u  >  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if  (u  <  =  tol1  &&  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  =  tol1  &&  b  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  <  =  tol1  &&  b  -  u  <  tol2)  {	  if    (u    <    =    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
23	[BUG]  [BUGGY]  u  =  b  -  q  +  d;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  b  -  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  b  -  q  +  d;	      u    =    b    -    q;    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  if(u  <  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  <  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  if(u  ==  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  ==  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol1;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
26	[BUG]  [BUGGY]  u  =  q  +  d;  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  q  +  d;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  q  +  d;	      u    =    m    +    d;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
27	[BUG]  [BUGGY]  if(u  >  tol2)  {  if(a  <  =  m)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  >  tol2)  {  if(a  <  =  m)  {  d  =  -tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  >  tol2)  {  if(a  <  =  m)  {  d  =  -tol1;  }	      if(m    >    tol1)    {    if(a    <    =    m)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
28	[BUG]  [BUGGY]  if(u  <  tol2)  {  if(m  >  tol1)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  tol2)  {  if(m  >  tol1)  {  d  =  -tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  <  tol2)  {  if(m  >  tol1)  {  d  =  -tol1;  }	      if(m    >    tol1)    {    if(a    <    =    m)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
29	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(m  >  a)  {  m  =  m;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(m  >  a)  {  m  =  m;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  <  =  m)  {  if(m  >  a)  {  m  =  m;  }	      if(m    >    a)    {    if(m    >    a)    {    m    =    m;    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  if  (u  -  tol1  ==  tol2  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  ==  tol2  ||  b  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  tol1  ==  tol2  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
31	[BUG]  [BUGGY]  if  (u  -  tol1  >=  m  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  >=  m  ||  b  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  tol1  >=  m  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
32	[BUG]  [BUGGY]  if(u  ==  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol2;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  ==  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol2;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  ==  tol2)  {  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol2;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  u  =  b  -  d;  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  b  -  d;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  b  -  d;	      u    =    b    -    x;    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  if  (u  -  m  <  tol1  ||  b  -  m  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  m  <  tol1  ||  b  -  m  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  m  <  tol1  ||  b  -  m  <  tol2)  {	  if    (u    -    m    <    tol2    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
35	[BUG]  [BUGGY]  if  (u  -  tol1  <  tol2  ||  b  -  e  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  <  tol2  ||  b  -  e  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  tol1  <  tol2  ||  b  -  e  <  tol2)  {	  if    (u    -    tol1    <    tol2    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
36	[BUG]  [BUGGY]  if  (u  <  tol1  ||  b  -  e  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  <  tol1  ||  b  -  e  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  <  tol1  ||  b  -  e  <  tol2)  {	  if    (u    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  if(u  <  =  m)  {  if(x  <  =  e)  {  d  =  tol1;  }  [CE]  illegal  start  of  expression  [FE]            AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(u  <  =  m)  {  if(x  <  =  e)  {  d  =  tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(u  <  =  m)  {  if(x  <  =  e)  {  d  =  tol1;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
38	[BUG]  [BUGGY]  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol2;  }  [CE]  illegal  start  of  expression  [FE]              AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol2;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(m  >  a)  {  if(x  <  =  e)  {  d  =  tol2;  }	      if(m    >    a)    {    if(x    <    =    e)    {    d    =    tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
39	[BUG]  [BUGGY]  if(a  <  =  m)  {  d  =  -tol1;  }  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if(a  <  =  m)  {  d  =  -tol1;  }  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if(a  <  =  m)  {  d  =  -tol1;  }	      if(m    >    tol1)    {    if(a    <    =    m)    {    d    =    -tol1;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  u  =  w  +  d;  [CE]  illegal  start  of  expression  [FE]          AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  u  =  w  +  d;  [BUGGY]    if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {  if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	u  =  w  +  d;	      u    =    r    +    d;    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  if  (u  -  tol1  <  m  ||  b  -  u  <  tol2)  {  [CE]  illegal  start  of  expression  [FE]        AssertionError    [CONTEXT]    if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;      [BUGGY]  if  (u  -  tol1  <  m  ||  b  -  u  <  tol2)  {  [BUGGY]    if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.35355339059327373	189	189	1	replace	if  (u  -  tol1  <  m  ||  b  -  u  <  tol2)  {	  if    (u    -    a    <    tol1    ||    b    -    u    <    tol2)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
