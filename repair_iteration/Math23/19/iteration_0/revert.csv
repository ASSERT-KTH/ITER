projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86ConvergenceChecker<Object>checker=checker.getOptimizer();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86ConvergenceChecker<GOLDEN_SECTION||checker.isOptional();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86ConvergenceChecker<GOLDEN_SECTION||checker.isOptimizer();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86if(abs<=0){
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86if(rel<=0){
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86ConvergenceChecker<GOLDEN_SECTION||checker==GOLDEN_SECTION);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86ConvergenceChecker<Object>absoluteThreshold=checker.getRelativeThreshold();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86ConvergenceChecker<GOLDEN_SECTION||checker==GOLDEN_SECTION;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86if(rel<=GOLDEN_SECTION){if(rel>GOLDEN_SECTION){thrownewNotStrictlyPositiveException(rel);}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86RelativePointValuePairabsoluteThreshold=checker.getRelativePointValuePair();
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java86if(rel<=GOLDEN_SECTION){if(rel>GOLDEN_SECTION){thrownewNotStrictlyPositiveException(rel,rel);}
