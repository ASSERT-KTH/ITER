bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    super(rel,  abs,  checker);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  public  BrentOptimizer(double  rel,  double  abs,  ConvergenceChecker<UnivariatePointValuePair>  checker)  {  [BUGGY]    super(rel,  abs,  checker);  [BUGGY]  super(checker);  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	81	81	1	replace	    super(rel,  abs,  checker);		non-compiled	[CE]  illegal  start  of  type	34	None	add
2	[BUG]  [BUGGY]    super(rel);  [CE]  illegal  start  of  type  [FE]      AssertionError  [CONTEXT]  public  BrentOptimizer(double  rel,  double  abs,  ConvergenceChecker<UnivariatePointValuePair>  checker)  {  [BUGGY]    super(rel);  [BUGGY]  super(checker);  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	81	81	1	replace	    super(rel);		non-compiled	[CE]  illegal  start  of  type	34	None	add
3	[BUG]  [BUGGY]    super(checker);  [CE]  illegal  start  of  type  [FE]        AssertionError  [CONTEXT]  public  BrentOptimizer(double  rel,  double  abs,  ConvergenceChecker<UnivariatePointValuePair>  checker)  {  [BUGGY]    super(checker);  [BUGGY]  super(checker);  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	81	81	1	replace	    super(checker);		non-compiled	[CE]  illegal  start  of  type	34	None	add
4	[BUG]  [BUGGY]  super(rel,  checker);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  public  BrentOptimizer(double  rel,  double  abs,  ConvergenceChecker<UnivariatePointValuePair>  checker)  {  [BUGGY]  super(rel,  checker);  [BUGGY]    if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	81	81	1	replace	super(rel,  checker);	super(checker);  	non-compiled	[CE]  illegal  start  of  type	33	None	replace
5	[BUG]  [BUGGY]    super(rel,  abs);  [CE]  illegal  start  of  type  [FE]    AssertionError  [CONTEXT]  public  BrentOptimizer(double  rel,  double  abs,  ConvergenceChecker<UnivariatePointValuePair>  checker)  {  [BUGGY]    super(rel,  abs);  [BUGGY]  super(checker);  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	81	81	1	replace	    super(rel,  abs);		non-compiled	[CE]  illegal  start  of  type	34	None	add
