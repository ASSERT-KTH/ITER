bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  relativeThreshold);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  relativeThreshold);  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  relativeThreshold);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
2	[BUG]  [BUGGY]    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  relativeThreshold,  true);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  relativeThreshold,  true);  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  relativeThreshold,  true);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
3	[BUG]  [BUGGY]    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  absoluteThreshold);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  absoluteThreshold);  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(rel  <  =  GOLDEN_SECTION)  {  if(rel  >  GOLDEN_SECTION)  {  throw  new  NumberIsTooSmallException(rel,  absoluteThreshold);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
4	[BUG]  [BUGGY]  return  checker.nextToken();  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]  return  checker.nextToken();  [BUGGY]    [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	return  checker.nextToken();	}  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
5	[BUG]  [BUGGY]  return  checker.getOptimizer();  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]  return  checker.getOptimizer();  [BUGGY]    [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	return  checker.getOptimizer();	}  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
6	[BUG]  [BUGGY]    if(relativeThreshold!=  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(relativeThreshold!=  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(relativeThreshold!=  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
7	[BUG]  [BUGGY]    if(relativeThreshold  >  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(relativeThreshold  >  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(relativeThreshold  >  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
8	[BUG]  [BUGGY]    if(relativeThreshold  >  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }  else  {  checker.checkState(rel);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(relativeThreshold  >  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }  else  {  checker.checkState(rel);  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(relativeThreshold  >  absoluteThreshold)  {  absoluteThreshold  =  absoluteThreshold;  }  else  {  checker.checkState(rel);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
9	[BUG]  [BUGGY]  return  checker.evaluate(relativeThreshold,  abs);  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]  return  checker.evaluate(relativeThreshold,  abs);  [BUGGY]    [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	return  checker.evaluate(relativeThreshold,  abs);	}  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
10	[BUG]  [BUGGY]  return  checker.evaluate(relativeThreshold,  absoluteThreshold);  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]  return  checker.evaluate(relativeThreshold,  absoluteThreshold);  [BUGGY]    [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	return  checker.evaluate(relativeThreshold,  absoluteThreshold);	}  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
11	[BUG]  [BUGGY]    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }  else  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }  else  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }  else  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
12	[BUG]  [BUGGY]    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  absoluteThreshold  =  Math.min(relativeThreshold,  rel);  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  absoluteThreshold  =  Math.min(relativeThreshold,  rel);  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  absoluteThreshold  =  Math.min(relativeThreshold,  rel);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
13	[BUG]  [BUGGY]    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }  [CE]  illegal  start  of  expression  [FE]        AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }  [BUGGY]  }  [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	    if(rel  <  relativeThreshold)  {  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  absoluteThreshold  =  Math.max(relativeThreshold,  rel);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
14	[BUG]  [BUGGY]  if(rel  >  absoluteThreshold)  {  double  abs  =  Math.abs(relativeThreshold);  absoluteThreshold  =  abs;  }  [CE]  illegal  start  of  expression  [FE]    AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]  if(rel  >  absoluteThreshold)  {  double  abs  =  Math.abs(relativeThreshold);  absoluteThreshold  =  abs;  }  [BUGGY]    [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	if(rel  >  absoluteThreshold)  {  double  abs  =  Math.abs(relativeThreshold);  absoluteThreshold  =  abs;  }	}  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
15	[BUG]  [BUGGY]  if(rel  >  absoluteThreshold)  {  double  abs  =  Math.abs(relativeThreshold);  absoluteThreshold  =  abs  +  1;  }  [CE]  illegal  start  of  expression  [FE]      AssertionError  [CONTEXT]  if  (rel  <  MIN_RELATIVE_TOLERANCE)  {  throw  new  NumberIsTooSmallException(rel,  MIN_RELATIVE_TOLERANCE,  true);  }  if  (abs  <=  0)  {  throw  new  NotStrictlyPositiveException(abs);  }  relativeThreshold  =  rel;  absoluteThreshold  =  abs;  [BUGGY]  if(rel  >  absoluteThreshold)  {  double  abs  =  Math.abs(relativeThreshold);  absoluteThreshold  =  abs  +  1;  }  [BUGGY]    [CLASS]  BrentOptimizer  [METHOD]  <init>  [RETURN_TYPE]  ConvergenceChecker)  double  rel  double  abs  UnivariatePointValuePair>  checker  [VARIABLES]  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  abs  absoluteThreshold  rel  relativeThreshold  ConvergenceChecker  checker  boolean  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	92	92	1	replace	if(rel  >  absoluteThreshold)  {  double  abs  =  Math.abs(relativeThreshold);  absoluteThreshold  =  abs  +  1;  }	}  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
