bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
95	[BUG] [BUGGY] final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a); [FE] AssertionError [CONTEXT] = new UnivariatePointValuePair(x, isMinim ? fx : -fx);  int iter = 0; while (true) { final double m = 0.5 * (a + b); final double tol1 = relativeThreshold * FastMath.abs(x) + absoluteThreshold; final double tol2 = 2 * tol1;  [BUGGY] final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a); [BUGGY] if (!stop) { double p = 0; double q = 0; double r = 0; double u = 0; if (FastMath.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; [CLASS] BrentOptimizer [METHOD] doOptimize [RETURN_TYPE] UnivariatePointValuePair  [VARIABLES] ConvergenceChecker checker UnivariatePointValuePair current previous boolean isMinim stop double GOLDEN_SECTION MIN_RELATIVE_TOLERANCE a abs absoluteThreshold b d e fu fv fw fx hi lo m mid p q r rel relativeThreshold tol1 tol2 u v w x int iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	159	159	1	replace	
96	[BUG] [BUGGY] [FE] AssertionError [CONTEXT] = new UnivariatePointValuePair(x, isMinim ? fx : -fx);  int iter = 0; while (true) { final double m = 0.5 * (a + b); final double tol1 = relativeThreshold * FastMath.abs(x) + absoluteThreshold; final double tol2 = 2 * tol1;  [BUGGY] [BUGGY] final boolean stop = FastMath.abs(x - m) <= tol2 - 0.5 * (b - a); if (!stop) { double p = 0; double q = 0; double r = 0; double u = 0; if (FastMath.abs(e) > tol1) { // Fit parabola. r = (x - w) * (fx - fv); q = (x - v) * (fx - fw); p = (x - v) * q - (x - w) * r; [CLASS] BrentOptimizer [METHOD] doOptimize [RETURN_TYPE] UnivariatePointValuePair  [VARIABLES] ConvergenceChecker checker UnivariatePointValuePair current previous boolean isMinim stop double GOLDEN_SECTION MIN_RELATIVE_TOLERANCE a abs absoluteThreshold b d e fu fv fw fx hi lo m mid p q r rel relativeThreshold tol1 tol2 u v w x int iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.31622776601683794	159	159	1	add	
