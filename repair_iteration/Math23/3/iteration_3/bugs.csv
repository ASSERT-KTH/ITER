bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  d  =  0;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  d  =  0;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	d  =  0;	  d    =    -1;    	non-compiled	[CE]  'else'  without  'if'	29	None	replace
2	[BUG]  [BUGGY]  parent  ==  null  &&  u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent  ==  null  &&  u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent  ==  null  &&  u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent    ==    null    ||    u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
3	[BUG]  [BUGGY]  parent!=  (null  <  a)&&(u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  <  a)&&(u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  <  a)&&(u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    a)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
4	[BUG]  [BUGGY]  parent!=  (u  >  a)&&(b  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                    AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (u  >  a)&&(b  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (u  >  a)&&(b  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    a)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
5	[BUG]  [BUGGY]  u  =  u  +  tol2;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  u  +  tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  u  +  tol2;	  u    =    u    +    d;    	non-compiled	[CE]  'else'  without  'if'	3	None	replace
6	[BUG]  [BUGGY]  u  =  a  *  r  +  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  a  *  r  +  1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  a  *  r  +  1;	  u    =    a    *    r;    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
7	[BUG]  [BUGGY]  u  =  u  *  tol2;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  u  *  tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  u  *  tol2;	  u    =    u    *    r;    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
8	[BUG]  [BUGGY]  u  =  p  *  r  +  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  p  *  r  +  1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  p  *  r  +  1;	  u    =    p    *    r;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
9	[BUG]  [BUGGY]  u  =  a  -  tol2;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  a  -  tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  a  -  tol2;	  u    =    m    -    tol2;    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
10	[BUG]  [BUGGY]  u  =  u  -  tol2;  [CE]  'else'  without  'if'  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  u  -  tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  u  -  tol2;	  u    =    m    -    tol2;    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
11	[BUG]  [BUGGY]  if(u  <  tol1  ||  b  >  m)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if(u  <  tol1  ||  b  >  m)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if(u  <  tol1  ||  b  >  m)  {	  if(u    <    tol1    ||    b    >    e)    {    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
12	[BUG]  [BUGGY]  d  =  -a;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  d  =  -a;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	d  =  -a;	  d    =    -tol2;    	non-compiled	[CE]  'else'  without  'if'	30	None	replace
13	[BUG]  [BUGGY]  u  =  u  *  q;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  u  *  q;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  u  *  q;	  u    =    r    *    q;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
14	[BUG]  [BUGGY]  u  =  a  *  q;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  a  *  q;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  a  *  q;	  u    =    r    *    q;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
15	[BUG]  [BUGGY]  cearc  {  d  =  -a;  }  [CE]  not  a  statement  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  cearc  {  d  =  -a;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	cearc  {  d  =  -a;  }	  cearcă    {    d    =    -tol1;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
16	[BUG]  [BUGGY]  Cearc  {  d  =  -a;  }  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  Cearc  {  d  =  -a;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	Cearc  {  d  =  -a;  }	  cearcă    {    d    =    -tol1;    }    	non-compiled	[CE]  not  a  statement	26	None	replace
17	[BUG]  [BUGGY]  if  (u  <  tol1  ||  b  >  0.5)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if  (u  <  tol1  ||  b  >  0.5)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if  (u  <  tol1  ||  b  >  0.5)  {	  if    (u    <    tol1)    {    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
18	[BUG]  [BUGGY]  u  =  r  *  q  +  1;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  r  *  q  +  1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  r  *  q  +  1;	  u    =    q    *    r    +    1;    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
19	[BUG]  [BUGGY]  u  =  u  *  r  +  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  u  *  r  +  1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  u  *  r  +  1;	  u    =    q    *    r    +    1;    	non-compiled	[CE]  'else'  without  'if'	25	None	replace
20	[BUG]  [BUGGY]  cast(u)  {  d  =  -a;  }  else  {  d  =  -a;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  cast(u)  {  d  =  -a;  }  else  {  d  =  -a;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	cast(u)  {  d  =  -a;  }  else  {  d  =  -a;  }	  cast(u)    {    d    =    -tol1;    }    else    {    d    =    -tol2;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
21	[BUG]  [BUGGY]  cast(u)  {  d  =  -a;  }  [CE]  ';'  expected  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  cast(u)  {  d  =  -a;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	cast(u)  {  d  =  -a;  }	  cast(u)    {    d    =    -tol1;    }    else    {    d    =    -tol2;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
22	[BUG]  [BUGGY]  if(u  >  tol1)  {  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if(u  >  tol1)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if(u  >  tol1)  {	  if(m    >    a)    {    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
23	[BUG]  [BUGGY]  u  =  u  -  a  +  1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  u  -  a  +  1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  u  -  a  +  1;	  u    =    u    -    a;    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
24	[BUG]  [BUGGY]  tate(u  >  a)&&  d  <  -tol1;  [CE]  not  a  statement  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  tate(u  >  a)&&  d  <  -tol1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	tate(u  >  a)&&  d  <  -tol1;	  tate(u    >    a)&&    d    <    =    -tol1;    	non-compiled	[CE]  not  a  statement	5	None	replace
25	[BUG]  [BUGGY]  tate(u  >  a)&&  d  ==  -tol1;  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  tate(u  >  a)&&  d  ==  -tol1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	tate(u  >  a)&&  d  ==  -tol1;	  tate(u    >    a)&&    d    <    =    -tol1;    	non-compiled	[CE]  not  a  statement	5	None	replace
26	[BUG]  [BUGGY]  parent!=  (null  &&  u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  &&  u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  &&  u  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    m)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
27	[BUG]  [BUGGY]  parent!=  (null  &&(u  >  a))  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  &&(u  >  a))  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  &&(u  >  a))  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    m)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
28	[BUG]  [BUGGY]  parent  ==  null  &&  u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent  ==  null  &&  u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent  ==  null  &&  u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }	  parent    ==    null    ||    u    >    a)    {    d    =    -tol2;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
29	[BUG]  [BUGGY]  d  =  -m;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  d  =  -m;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	d  =  -m;	  d    =    -tol1;    	non-compiled	[CE]  'else'  without  'if'	4	None	replace
30	[BUG]  [BUGGY]  parent!=  (null  <  a)&&(u  >  m)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  <  a)&&(u  >  m)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  <  a)&&(u  >  m)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    m)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	15	None	replace
31	[BUG]  [BUGGY]  parent!=  (null  <  =  m)&&(u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  <  =  m)&&(u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  <  =  m)&&(u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    m)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  if  (u  <  tol1  ||  m  >  tol2)  {  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if  (u  <  tol1  ||  m  >  tol2)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if  (u  <  tol1  ||  m  >  tol2)  {	  if    (m    <    tol1)    {    	non-compiled	[CE]  'else'  without  'if'	18	None	replace
33	[BUG]  [BUGGY]  if  (u  >  tol1  ||  b  >  tol2)  {  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if  (u  >  tol1  ||  b  >  tol2)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if  (u  >  tol1  ||  b  >  tol2)  {	  if    (u    <    m)    {    	non-compiled	[CE]  'else'  without  'if'	21	None	replace
34	[BUG]  [BUGGY]  if(u  <  tol1  ||  b  >  a)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if(u  <  tol1  ||  b  >  a)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if(u  <  tol1  ||  b  >  a)  {	  if(u    <    tol1    ||    b    >    e)    {    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
35	[BUG]  [BUGGY]  luate(u)  {  d  =  -tol1;  }  else  {  d  =  -tol2;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  luate(u)  {  d  =  -tol1;  }  else  {  d  =  -tol2;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	luate(u)  {  d  =  -tol1;  }  else  {  d  =  -tol2;  }	  cast(u)    {    d    =    -tol1;    }    else    {    d    =    -tol2;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
36	[BUG]  [BUGGY]  parent  ==  null  ||  u  <  tol2)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent  ==  null  ||  u  <  tol2)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent  ==  null  ||  u  <  tol2)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent    ==    null    ||    u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
37	[BUG]  [BUGGY]  u  =  u  -  tol1;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  u  -  tol1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  u  -  tol1;	  u    =    u    -    a;    	non-compiled	[CE]  'else'  without  'if'	10	None	replace
38	[BUG]  [BUGGY]  if(m  >  x)  {  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if(m  >  x)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if(m  >  x)  {	  if(m    <    x)    {    	non-compiled	[CE]  'else'  without  'if'	6	None	replace
39	[BUG]  [BUGGY]  u  =  b  -  tol2;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  b  -  tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  b  -  tol2;	  u    =    b    -    a;    	non-compiled	[CE]  'else'  without  'if'	27	None	replace
40	[BUG]  [BUGGY]  parent!=  (null  <  a)&&(u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  <  a)&&(u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  <  a)&&(u  >  a)  {  d  =  -tol2;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    a)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	16	None	replace
41	[BUG]  [BUGGY]  parent  ==  null  ||  u  <  tol2)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [CE]  not  a  statement  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent  ==  null  ||  u  <  tol2)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent  ==  null  ||  u  <  tol2)  {  d  =  -tol2;  }  else  {  d  =  -1;  }	  parent    ==    null    ||    u    >    a)    {    d    =    -tol2;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  not  a  statement	2	None	replace
42	[BUG]  [BUGGY]  u  =  m  -  tol1;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  m  -  tol1;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  m  -  tol1;	  u    =    m    -    tol2;    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
43	[BUG]  [BUGGY]  u  =  r  *  p;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  r  *  p;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  r  *  p;	  u    =    p    *    r;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
44	[BUG]  [BUGGY]  u  =  a  *  tol2;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  a  *  tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  a  *  tol2;	  u    =    a    *    r;    	non-compiled	[CE]  'else'  without  'if'	33	None	replace
45	[BUG]  [BUGGY]  if  (u  <  tol1  ||  b  -  u  <  tol2)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if  (u  <  tol1  ||  b  -  u  <  tol2)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if  (u  <  tol1  ||  b  -  u  <  tol2)  {	  if    (u    <    tol1)    {    	non-compiled	[CE]  'else'  without  'if'	20	None	replace
46	[BUG]  [BUGGY]  if(a  >  m)  {  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if(a  >  m)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if(a  >  m)  {	  if(m    >    a)    {    	non-compiled	[CE]  'else'  without  'if'	19	None	replace
47	[BUG]  [BUGGY]  u  =  p  /  r;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  p  /  r;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  p  /  r;	  u    =    p    *    r;    	non-compiled	[CE]  'else'  without  'if'	34	None	replace
48	[BUG]  [BUGGY]  if(a  <  tol1  ||  b  >  e)  {  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if(a  <  tol1  ||  b  >  e)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if(a  <  tol1  ||  b  >  e)  {	  if(u    <    tol1    ||    b    >    e)    {    	non-compiled	[CE]  'else'  without  'if'	32	None	replace
49	[BUG]  [BUGGY]  u  =  w  -  tol2;  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  w  -  tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  w  -  tol2;	  u    =    m    -    tol2;    	non-compiled	[CE]  'else'  without  'if'	11	None	replace
50	[BUG]  [BUGGY]  parent!=  (null  <  =  a)&&(b  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  <  =  a)&&(b  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  <  =  a)&&(b  >  a)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    a)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  u  =  tol1  *  r;  [CE]  'else'  without  'if'  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  tol1  *  r;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  tol1  *  r;	  u    =    u    *    r;    	non-compiled	[CE]  'else'  without  'if'	9	None	replace
52	[BUG]  [BUGGY]  if(u  >  a  ||  b  <  a)  {  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  if(u  >  a  ||  b  <  a)  {  [BUGGY]      d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	if(u  >  a  ||  b  <  a)  {	  if(u    >    a)    {    	non-compiled	[CE]  'else'  without  'if'	31	None	replace
53	[BUG]  [BUGGY]  cast(u)  {  d  =  -a;  }  else  {  d  =  -tol2;  }  [CE]  ';'  expected  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  cast(u)  {  d  =  -a;  }  else  {  d  =  -tol2;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	cast(u)  {  d  =  -a;  }  else  {  d  =  -tol2;  }	  cast(u)    {    d    =    -tol1;    }    else    {    d    =    -tol2;    }    	non-compiled	[CE]  ';'  expected	14	None	replace
54	[BUG]  [BUGGY]  tate(u  <  a)&&  d  <  =  -tol2;  [CE]  illegal  start  of  expression  [FE]              AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  tate(u  <  a)&&  d  <  =  -tol2;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	tate(u  <  a)&&  d  <  =  -tol2;	  tate(u    >    a)&&    d    <    =    -tol1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
55	[BUG]  [BUGGY]  parent!=  (null  <  =  m)&&(u  >  1)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [CE]  illegal  start  of  expression  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  <  =  m)&&(u  >  1)  {  d  =  -tol2;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  <  =  m)&&(u  >  1)  {  d  =  -tol2;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    m)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
56	[BUG]  [BUGGY]  parent!=  (null  <  =  m)&&(a  <  =  d)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  parent!=  (null  <  =  m)&&(a  <  =  d)  {  d  =  -tol1;  }  else  {  d  =  -1;  }  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	parent!=  (null  <  =  m)&&(a  <  =  d)  {  d  =  -tol1;  }  else  {  d  =  -1;  }	  parent!=    (null    <    =    m)&&(u    >    a)    {    d    =    -tol1;    }    else    {    d    =    -1;    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
57	[BUG]  [BUGGY]  aughtExceptionHandler.handleMalformedException( "malformed  exception: ");  [CE]  'else'  without  'if'  [FE]                AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  aughtExceptionHandler.handleMalformedException( "malformed  exception: ");  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	aughtExceptionHandler.handleMalformedException( "malformed  exception: ");	  aughtExceptionHandler.handleMalformedException(   "   ");    	non-compiled	[CE]  'else'  without  'if'	24	None	replace
58	[BUG]  [BUGGY]  u  =  p  *  q;  [CE]  'else'  without  'if'  [FE]            AssertionError      [CONTEXT]      if  (p  >  q  *  (a  -  x)  &&  p  <  q  *  (b  -  x)  &&  FastMath.abs(p)  <  FastMath.abs(0.5  *  q  *  r))  {  d  =  p  /  q;  u  =  x  +  d;  if  (u  -  a  <  tol2  ||  b  -  u  <  tol2)  {      [BUGGY]  u  =  p  *  q;  [BUGGY]      if  (x  <=  m)  {  d  =  tol1;  }  else  {  d  =  -tol1;  }  }  }  else  {  if  (x  <  m)  {  e  =  b  -  x;  }  else  {  [CLASS]  BrentOptimizer  [METHOD]  doOptimize  [RETURN_TYPE]  UnivariatePointValuePair  [VARIABLES]  ConvergenceChecker  checker  UnivariatePointValuePair  current  previous  boolean  isMinim  stop  double  GOLDEN_SECTION  MIN_RELATIVE_TOLERANCE  a  abs  absoluteThreshold  b  d  e  fu  fv  fw  fx  hi  lo  m  mid  p  q  r  rel  relativeThreshold  tol1  tol2  u  v  w  x  int  iter  	projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java	0.4472135954999579	190	190	1	replace	u  =  p  *  q;	  u    =    r    *    q;    	non-compiled	[CE]  'else'  without  'if'	8	None	replace
