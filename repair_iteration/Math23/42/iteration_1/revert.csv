projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doublefv=computeObjectiveValue(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(isMinim){for(intiter=0;iter<iter.next();iter++){if(!isMinim){continue;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(isMinim){for(intiter=0;iter<relativeThreshold;iter++){if(!isMinim&&isMinim){continue;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147UnivariatePointValuePairprevious=null;
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147UnivariatePointValuePairprevious=newUnivariatePointValuePair(x,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147UnivariatePointValuePairprevious=newUnivariatePointValuePair(fv,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=computeObjectiveValue(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=getObjectiveValue(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=computeObjectiveValue(fv);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(isMinim){fv=computeObjectiveValue(x);if(!isMinim){fv=-fv;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(isMinim){fv=computeObjectiveValue(x);if(!isMinim){fv=-fw;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(isMinim){fv=computeObjectiveValue(x);if(!isMinim){fv=fv;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147UnivariatePointValuePairprevious=newUnivariatePointValuePair(fx,isMinim?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=computeObjectiveValue(fv,fw);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147UnivariatePointValuePairprevious=newUnivariatePointValuePair(x,fv?fx:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(isMinim){for(intiter=0;iter<iter.get();iter++){if(!isMinim){continue;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147UnivariatePointValuePairprevious=newUnivariatePointValuePair(fx,isMinim?fv:-fx);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147fv=computeObjectiveValue(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=computeObjectiveValue(d);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147intrelativeThreshold=computeRelativeThreshold(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147intrelativeThreshold=calculateRelativeThreshold(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=getObjectiveValue(fv);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doublefv=computeObjectiveValue(w);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doublefv=computeObjectiveValue(d);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(!stop){fv=computeObjectiveValue(x);if(!isMinim){fv=fv;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147intrelativeThreshold=computeObjectiveValue(x);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=computeObjectiveValue(x,fv);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doubleb=getObjectiveValue(x,fv);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(isMinim){for(intiter=1;iter<iter.next();iter++){if(!isMinim){continue;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147doublefv=computeObjectiveValue(x+1);
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(!isMinim){fv=-fv;}
projects/Math23/src/main/java/org/apache/commons/math3/optimization/univariate/BrentOptimizer.java147if(!isMinim){fv=-fw;}
