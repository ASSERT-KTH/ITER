bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  n  =  an.getFirstChild();  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	add	n  =  an.getFirstChild();	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
2	[BUG]  [BUGGY]  n  =  an.getFirstChild();  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  n  =  an.getFirstChild();  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
3	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  n  =  an.getLastChild();  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	add	n  =  an.getLastChild();	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
4	[BUG]  [BUGGY]  n  =  an.getLastChild();  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  n  =  an.getLastChild();  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
5	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	add	if(ancestorType  ==  Token.COMMA)  {  continue;  }	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
6	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  continue;  }  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  continue;  }	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
7	[BUG]  [BUGGY]  if(!isResultUsed)  {  continue;  }  [CE]  cannot  find  symbol  isResultUsed  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(!isResultUsed)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isResultUsed)  {  continue;  }	continue;  	non-compiled	[CE]  cannot  find  symbol  isResultUsed	1	None	replace
8	[BUG]  [BUGGY]  if(isResultUsed)  {  continue;  }  [CE]  cannot  find  symbol  isResultUsed  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(isResultUsed)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed)  {  continue;  }	continue;  	non-compiled	[CE]  cannot  find  symbol  isResultUsed	1	None	replace
9	[BUG]  [BUGGY]  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  n.removeChild(an);  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	add	n.removeChild(an);	continue;  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a  	1	1	replace
10	[BUG]  [BUGGY]  n.removeChild(an);  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  n.removeChild(an);  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);	continue;  	compilable	  [FE]  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a  	1	1	replace
11	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]    [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	add	  	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
12	[BUG]  [BUGGY]    [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]    [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	  	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
13	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,int)  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));	continue;  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType,int)	1	None	replace
14	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,CheckLevel,DiagnosticType)  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));	continue;  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,CheckLevel,DiagnosticType)	1	None	replace
15	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR),  ancestorType);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR),  ancestorType);	continue;  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)	1	None	replace
16	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR));  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR));	continue;  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,DiagnosticType)	1	None	replace
17	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,CheckLevel,DiagnosticType,int)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));	continue;  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,CheckLevel,DiagnosticType,int)	1	None	replace
18	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [CE]  no  suitable  method  found  for  make(NodeTraversal,Node,CheckLevel,DiagnosticType)  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);	continue;  	non-compiled	[CE]  no  suitable  method  found  for  make(NodeTraversal,Node,CheckLevel,DiagnosticType)	1	None	replace
19	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  cannot  find  symbol  [FE]    junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an))  {  continue;  }	continue;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
20	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	add	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
21	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]      junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
22	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }	continue;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
23	[BUG]  [BUGGY]  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	add	if(ancestorType!=  Token.COMMA)  {  continue;  }	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
24	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  continue;  }	continue;  	compilable	  [FE]  junit.framework.AssertionFailedError:  There  should  be  one  warning  	1	1	replace
25	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning  [CONTEXT]  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }	continue;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
