bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
2	[BUG]  [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	28	None	replace
3	[BUG]  [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
4	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  not  a  statement	162	None	replace
5	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  level)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  level)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  level)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
6	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isSimpleOp)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
7	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
8	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(n)||  isResultUsed)  {  continue;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(n)||  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(n)||  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  not  a  statement	162	None	replace
9	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  an  =  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  an  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  an  =  parent.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
10	[BUG]  [BUGGY]  Node  an  =  n.getLastChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getLastChild();	  n    =    an.getLastChild();    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	18	None	replace
11	[BUG]  [BUGGY]  n  =  an.getLastChild();  node  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  node  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  node  =  n.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
12	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	204	None	replace
13	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	204	None	replace
14	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	204	None	replace
15	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	204	None	replace
16	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
17	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol	164	None	replace
18	[BUG]  [BUGGY]  if(isResultUsed)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  isResultUsed  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  isResultUsed	164	None	replace
19	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	164	None	replace
20	[BUG]  [BUGGY]  NodeUtil.removeChild(an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an);  n.removeChild(an);	  n.removeChild(an);    if(n.getType()    ==    Token.COMMA)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
21	[BUG]  [BUGGY]  parent.removeChild(an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.removeChild(an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.removeChild(an);  n.removeChild(an);	  n.removeChild(an);    if(n.getType()    ==    Token.COMMA)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
22	[BUG]  [BUGGY]  n.addChildToFront(an,  level);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToFront(an,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToFront(an,  level);	  n.addChildToFront(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
23	[BUG]  [BUGGY]  n.addChildToFront(ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToFront(ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToFront(ancestor);	  n.addChildToFront(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
24	[BUG]  [BUGGY]  n.addChildToFront(a);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToFront(a);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToFront(a);	  n.addChildToFront(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
25	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
26	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
27	[BUG]  [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	87	None	replace
28	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
29	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isSimpleOp  ||  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isSimpleOp  ||  isResultUsed)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
30	[BUG]  [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  protectSideEffectFreeCode)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
31	[BUG]  [BUGGY]  ||  isSimpleEffectFreeCode)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  isSimpleEffectFreeCode)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
32	[BUG]  [BUGGY]  ||  isResultUsed  ||  isSimpleOp)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  isResultUsed  ||  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  isResultUsed  ||  isSimpleOp)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
33	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  isSimpleEffectFreeCode);  [CE]  class,  interface,  or  enum  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Context.checkState(ancestorType  ==  isSimpleEffectFreeCode);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Context.checkState(ancestorType  ==  isSimpleEffectFreeCode);	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
34	[BUG]  [BUGGY]  AssertionFailedError:  There  should  be  one  warning  for  an;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  AssertionFailedError:  There  should  be  one  warning  for  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	AssertionFailedError:  There  should  be  one  warning  for  an;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
35	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning  for  an;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning  for  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Annotated.AssertionFailedError:  There  should  be  one  warning  for  an;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
36	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  the  an;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  the  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  for  the  an;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
37	[BUG]  [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning  for  an;  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning  for  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	ntă.framework.AssertionFailedError:  There  should  be  one  warning  for  an;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
38	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  any;  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  any;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  for  any;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
39	[BUG]  [BUGGY]  n.replaceChild(an,  level,  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  level,  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  level,  USELESS_CODE_ERROR);	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
40	[BUG]  [BUGGY]  n.removeChild(an,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an,  level);	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
41	[BUG]  [BUGGY]  n.replaceChild(an,  level  +  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  level  +  1);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  level  +  1);	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
42	[BUG]  [BUGGY]  n.replaceChild(an,  level,  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  level,  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  level,  PROTECTOR_FN);	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
43	[BUG]  [BUGGY]  n.replaceChild(an,  new  CheckLevel(ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  CheckLevel(ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  CheckLevel(ancestorType));	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
44	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	217	None	replace
45	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	217	None	replace
46	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	217	None	replace
47	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	217	None	replace
48	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  not  a  statement	217	None	replace
49	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  not  a  statement	217	None	replace
50	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
51	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
52	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
53	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
54	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
55	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
56	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  parent.getFirstChild();	          Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
57	[BUG]  [BUGGY]  Node  an  =  n.getNext();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getNext();	          Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
58	[BUG]  [BUGGY]  Node  an  =  n.getAncestors();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getAncestors();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getAncestors();	          Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
59	[BUG]  [BUGGY]  Node  an  =  node.getFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  node.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  node.getFirstChild();	          Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
60	[BUG]  [BUGGY]  Node  an  =  this.n.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  this.n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  this.n.getFirstChild();	          Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
61	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	replace
62	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	replace
63	[BUG]  [BUGGY]  Node  gramps  =  an.getNext();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getNext();	  n    =    an.getLastChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  not  a  statement	23	None	replace
64	[BUG]  [BUGGY]  Node  an  =  an.getParent();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getParent();	  n    =    an.getLastChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  not  a  statement	23	None	replace
65	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  an.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  an.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  gramps  =  an.getNext();	  n    =    an.getLastChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
66	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  parent.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  gramps  =  parent.getParent();	  n    =    an.getLastChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
67	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	79	None	replace
68	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	79	None	replace
69	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	79	None	replace
70	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
71	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
72	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
73	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isResultUsed);  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isResultUsed);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  isResultUsed);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
74	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
75	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  proTECTOR_FN);  [CE]  ')'  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  proTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  proTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
76	[BUG]  [BUGGY]  n.removeChild(a);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(a);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(a);	  n.removeChild(ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	38	None	replace
77	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    return;    }    	non-compiled	[CE]  not  a  statement	200	None	replace
78	[BUG]  [BUGGY]  Context.checkState(an.getType()  ==  Token.COMMA);  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Context.checkState(an.getType()  ==  Token.COMMA);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Context.checkState(an.getType()  ==  Token.COMMA);	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	200	None	replace
79	[BUG]  [BUGGY]  Node  gramps  =  an.getLastChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getLastChild();	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    return;    }    	non-compiled	[CE]  not  a  statement	200	None	replace
80	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    &&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
81	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  ancestorType);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
82	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  ancestor);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
83	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  level);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
84	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  1);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  1);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  1);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
85	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  level);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  level);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  level);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
86	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  parent);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  parent);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  parent);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
87	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
88	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
89	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
90	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
91	[BUG]  [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
92	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
93	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
94	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
95	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  INVALID_TYPE,  an,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  INVALID_TYPE,  an,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  INVALID_TYPE,  an,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
96	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  msg));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
97	[BUG]  [BUGGY]  if(isResultUsed  ||!isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||!isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||!isSimpleOp)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
98	[BUG]  [BUGGY]  if(!isSimpleOp  &&  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isSimpleOp  &&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isSimpleOp  &&  isResultUsed)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
99	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  t.getCompiler()).reportCodeChange();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeTraversal.traverse(compiler,  t.getCompiler()).reportCodeChange();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeTraversal.traverse(compiler,  t.getCompiler()).reportCodeChange();	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
100	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
101	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
102	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
103	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level.WARNING,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level.WARNING,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level.WARNING,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
104	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  isResultUsed));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  isResultUsed));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  isResultUsed));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
105	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR),  msg);	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
106	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR,  msg));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
107	[BUG]  [BUGGY]  n  =  an.getLastChild();  class,  interface,  or  enum  expected  [CE]  <identifier>  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  class,  interface,  or  enum  expected  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  class,  interface,  or  enum  expected	  n    =    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	83	None	replace
108	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    message));    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
109	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  message));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  message));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  message));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    message));    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
110	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    message));    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
111	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  level);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  level);	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
112	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  level));  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  level));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  level));	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
113	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType,  level));  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType,  level));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType,  level));	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
114	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  level));  [CE]  ';'  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  level));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  level));	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  ';'  expected	234	None	replace
115	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType  +  1));  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType  +  1));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType  +  1));	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
116	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  level),  ancestorType));  [CE]  ';'  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  level),  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  level),  ancestorType));	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  ';'  expected	234	None	replace
117	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
118	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
119	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
120	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protocol_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protocol_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protocol_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
121	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
122	[BUG]  [BUGGY]  while(ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType  ==  Token.COMMA)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
123	[BUG]  [BUGGY]  while(ancestorType  >=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType  >=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType  >=  Token.COMMA)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
124	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
125	[BUG]  [BUGGY]  while(an.getType()!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(an.getType()!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(an.getType()!=  Token.COMMA)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
126	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
127	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
128	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
129	[BUG]  [BUGGY]  if(ancestorType  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
130	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
131	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
132	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
133	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
134	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(ancestorType)||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  not  a  statement	33	None	replace
135	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ancestorType)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(ancestorType)||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
136	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  an.getLastChild();	  n    =    an.getFirstChild();    Node    gramps    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	135	None	replace
137	[BUG]  [BUGGY]  AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	AssertionFailedError:  There  should  be  one  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
138	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  two  warnings;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  two  warnings;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  two  warnings;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
139	[BUG]  [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	ntă.framework.AssertionFailedError:  There  should  be  one  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
140	[BUG]  [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Joiner.AssertionFailedError:  There  should  be  one  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
141	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Annotated.AssertionFailedError:  There  should  be  one  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
142	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	144	None	replace
143	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	144	None	replace
144	[BUG]  [BUGGY]  n  =  parent.getLastChild();  n  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  parent.getLastChild();  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  parent.getLastChild();  n  =  an.getFirstChild();	  n    =    an.getLastChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	17	None	replace
145	[BUG]  [BUGGY]  Node  gramps  =  an.getLastChild();  gramps  =  n.getFirstChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getLastChild();  gramps  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getLastChild();  gramps  =  n.getFirstChild();	  n    =    an.getLastChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	17	None	replace
146	[BUG]  [BUGGY]  Node  n  =  an.getLastChild();  n  =  n.getFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getLastChild();  n  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getLastChild();  n  =  n.getFirstChild();	  n    =    an.getLastChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	17	None	replace
147	[BUG]  [BUGGY]  Node  an  =  n.getLastChild();  n  =  an.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getLastChild();  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getLastChild();  n  =  an.getFirstChild();	  n    =    an.getLastChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	17	None	replace
148	[BUG]  [BUGGY]  allowSideEffectFreeCode(t,  ancestorType)  {  continue;  }  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  allowSideEffectFreeCode(t,  ancestorType)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	allowSideEffectFreeCode(t,  ancestorType)  {  continue;  }	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  ';'  expected	155	None	replace
149	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType)  {  continue;  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  allowSideEffectFreeCode(ancestorType)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	allowSideEffectFreeCode(ancestorType)  {  continue;  }	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  ';'  expected	155	None	replace
150	[BUG]  [BUGGY]  allowSideEffectFreeCode(t,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  allowSideEffectFreeCode(t,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	allowSideEffectFreeCode(t,  ancestorType);	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
151	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  and  there  should  be  one;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  and  there  should  be  one;	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    junit.framework.AssertionFailedError:    There    should    be    one    warning    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	179	None	replace
152	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    parent));    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
153	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getFirstChild()));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getFirstChild()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getFirstChild()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    parent));    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
154	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getType()));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getType()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getType()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    parent));    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
155	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno()));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    parent));    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
156	[BUG]  [BUGGY]  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
157	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
158	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  not  a  statement	218	None	replace
159	[BUG]  [BUGGY]  n  =  an.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
160	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  not  a  statement	218	None	replace
161	[BUG]  [BUGGY]  Node  gramps  =  parent.getParent();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  parent.getParent();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	60	None	replace
162	[BUG]  [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps.getType()  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
163	[BUG]  [BUGGY]  if(gramps.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
164	[BUG]  [BUGGY]  gramps  ==  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  ==  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  ==  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	60	None	replace
165	[BUG]  [BUGGY]  gramps  ==  null  ||  gramps.getType()  ==  Token.COMMA;  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  ==  null  ||  gramps.getType()  ==  Token.COMMA;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  ==  null  ||  gramps.getType()  ==  Token.COMMA;	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	60	None	replace
166	[BUG]  [BUGGY]  if(gramps!=  null)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps!=  null)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps!=  null)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	60	None	replace
167	[BUG]  [BUGGY]  n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
168	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
169	[BUG]  [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  ASSIGN_FailedError:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
170	[BUG]  [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FAILURE:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FAILURE:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  ASSIGN_FAILURE:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
171	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  proTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  proTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  proTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	176	None	replace
172	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	176	None	replace
173	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString(),  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString(),  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString(),  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
174	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString(),  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString(),  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString(),  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
175	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getString()));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getString()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getString()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
176	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  n.getString()));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  n.getString()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  n.getString()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
177	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getSourceName()));  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getSourceName()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getSourceName()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
178	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getName()));  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getName()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getName()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
179	[BUG]  [BUGGY]  safely(protectSideEffectFreeCode)  {  continue;  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  safely(protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	safely(protectSideEffectFreeCode)  {  continue;  }	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  ';'  expected	154	None	replace
180	[BUG]  [BUGGY]  safeSideEffects)  {  continue;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  safeSideEffects)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	safeSideEffects)  {  continue;  }	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  not  a  statement	154	None	replace
181	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT);	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
182	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT);	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
183	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
184	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  message);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  message);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  message);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
185	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  parent);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  parent);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  parent);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
186	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  USELESS_CODE_ERROR);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
187	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  isResultUsed);  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  isResultUsed);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
188	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
189	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	replace
190	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	replace
191	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	167	None	replace
192	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN,  message));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN,  message));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN,  message));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    PROTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
193	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isResultUsed  &&  isSimpleOp)  {  continue;  }	  if(!isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
194	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(!isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
195	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(!isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
196	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  &&  isSimpleOp)  {  continue;  }	  if(!isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
197	[BUG]  [BUGGY]  if(!isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(!isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
198	[BUG]  [BUGGY]  if(isSimpleOp  ||!isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isSimpleOp  ||!isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isSimpleOp  ||!isResultUsed)  {  continue;  }	  if(!isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
199	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType    >=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	211	None	replace
200	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType    >=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	211	None	replace
201	[BUG]  [BUGGY]  Node  gramps  =  an.getLastChild();  n  =  gramps.getLastChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getLastChild();  n  =  gramps.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getLastChild();  n  =  gramps.getLastChild();	  n    =    an.getLastChild();    n    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	16	None	replace
202	[BUG]  [BUGGY]  node  =  an.getLastChild();  n  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getLastChild();  n  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getLastChild();  n  =  an.getLastChild();	  n    =    an.getLastChild();    n    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	16	None	replace
203	[BUG]  [BUGGY]  Node  n  =  an.getLastChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getLastChild();	  n    =    an.getLastChild();    n    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	16	None	replace
204	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ancestorType)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(ancestorType)||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	92	None	replace
205	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(ancestorType)||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  not  a  statement	92	None	replace
206	[BUG]  [BUGGY]  if(ancestorType!=  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	236	None	replace
207	[BUG]  [BUGGY]  if(ancestorType  ==  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	236	None	replace
208	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	236	None	replace
209	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	236	None	replace
210	[BUG]  [BUGGY]  if(ancestorType  ==  Token.SEMI  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.SEMI  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.SEMI  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	236	None	replace
211	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	replace
212	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	replace
213	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	replace
214	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	replace
215	[BUG]  [BUGGY]  n.replaceChild(an,  new  CheckLevel(level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  CheckLevel(level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  CheckLevel(level,  USELESS_CODE_ERROR,  ancestorType));	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
216	[BUG]  [BUGGY]  n.replaceChild(an,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  CheckLevel(level,  USELESS_CODE_ERROR));	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
217	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Compiler.EXPR_RESULT,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Compiler.EXPR_RESULT,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Compiler.EXPR_RESULT,  ancestorType));	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
218	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Compiler.SOURCENAME_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Compiler.SOURCENAME_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Compiler.SOURCENAME_ERROR,  ancestorType));	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
219	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
220	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
221	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
222	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  MISSING_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  MISSING_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  MISSING_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
223	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	197	None	replace
224	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	197	None	replace
225	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	197	None	replace
226	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	181	None	replace
227	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	181	None	replace
228	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
229	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
230	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	231	None	replace
231	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	231	None	replace
232	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  n.removeChild(an);  [CE]  not  a  statement  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  n.removeChild(an);	  n.removeChild(an);    if(ancestorType!=    Token.COMMA)    {    n.removeChild(an);    }    	non-compiled	[CE]  not  a  statement	151	None	replace
233	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
234	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
235	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
236	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
237	[BUG]  [BUGGY]  if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
238	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
239	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
240	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
241	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
242	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
243	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA    &&    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	237	None	replace
244	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one  remaining;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one  remaining;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one  remaining;	  if(ancestorType!=    Token.COMMA)    {    continue;    }    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one    remaining;    	non-compiled	[CE]  not  a  statement	148	None	replace
245	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  node,  level,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  node,  level,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  node,  level,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    node,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
246	[BUG]  [BUGGY]  n.addChildToBack(an,  level);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToBack(an,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToBack(an,  level);	  n.addChildToBack(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	replace
247	[BUG]  [BUGGY]  n.addChildToBack(a);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToBack(a);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToBack(a);	  n.addChildToBack(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	replace
248	[BUG]  [BUGGY]  n.addChildToBack(prototype);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToBack(prototype);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToBack(prototype);	  n.addChildToBack(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	replace
249	[BUG]  [BUGGY]  n.addChildToBack(level);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToBack(level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToBack(level);	  n.addChildToBack(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	replace
250	[BUG]  [BUGGY]  if(isResultUsed  ||!protectSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||!protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||!protectSideEffectFreeCode)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
251	[BUG]  [BUGGY]  ||!protectSideEffectFreeCode)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||!protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||!protectSideEffectFreeCode)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
252	[BUG]  [BUGGY]  Node  gramps  =  n.getParent();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  n.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  n.getParent();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
253	[BUG]  [BUGGY]  Node  gramps  =  n.getNext();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  n.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  n.getNext();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
254	[BUG]  [BUGGY]  gramps!=  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps!=  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps!=  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
255	[BUG]  [BUGGY]  Node  gramps  =  gramps.getParent();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  gramps.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  gramps.getParent();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  not  a  statement	66	None	replace
256	[BUG]  [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(an,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(an,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  NodeUtil.removeChild(an,  level);	  n.removeChild(an);    NodeUtil.removeChild(parent,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	226	None	replace
257	[BUG]  [BUGGY]  AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
258	[BUG]  [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	ntă.framework.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
259	[BUG]  [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Joiner.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
260	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Annotated.AssertionFailedError:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
261	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  (See  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  (See  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  (See  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
262	[BUG]  [BUGGY]  node  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getFirstChild();	  n    =    an.getFirstChild();    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
263	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(n);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	replace
264	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(n);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	replace
265	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(n);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(n);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(n);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	replace
266	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  parent.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  parent.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  parent.removeChild(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(n);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	replace
267	[BUG]  [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()!=  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	180	None	replace
268	[BUG]  [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	180	None	replace
269	[BUG]  [BUGGY]  if(gramps  ==  null)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps  ==  null)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps  ==  null)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	180	None	replace
270	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  n.getLastChild();	  n    =    an.getFirstChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
271	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  parent.getFirstChild();	  n    =    an.getFirstChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
272	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getFirstChild();	  n    =    an.getFirstChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	7	None	replace
273	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  NodeUtil.isExpressionNode(n))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
274	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
275	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
276	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild();  class,  interface,  or  enum  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getFirstChild();  class,  interface,  or  enum  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getFirstChild();  class,  interface,  or  enum	  n    =    an.getFirstChild();    Node    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	138	None	replace
277	[BUG]  [BUGGY]  Node  gramps  =  an.getGrandparent();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getGrandparent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getGrandparent();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
278	[BUG]  [BUGGY]  Node  gramps  =  an.getChildCount();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getChildCount();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getChildCount();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
279	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType));	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
280	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
281	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType));	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
282	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
283	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
284	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType);  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	51	None	replace
285	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	51	None	replace
286	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	51	None	replace
287	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
288	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
289	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
290	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
291	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
292	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
293	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
294	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
295	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	78	None	replace
296	[BUG]  [BUGGY]  Context.checkState(an.getType()  ==  Token.EXPR_RESULT);  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Context.checkState(an.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Context.checkState(an.getType()  ==  Token.EXPR_RESULT);	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    n,    ancestorType);    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	201	None	replace
297	[BUG]  [BUGGY]  Context.checkState(an.getLastChild()!=  null);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Context.checkState(an.getLastChild()!=  null);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Context.checkState(an.getLastChild()!=  null);	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    n,    ancestorType);    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	201	None	replace
298	[BUG]  [BUGGY]  if(isResultUsed  ||!protectionSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||!protectionSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||!protectionSimpleOp)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
299	[BUG]  [BUGGY]  if(protectionSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSimpleOp)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
300	[BUG]  [BUGGY]  if(!protectionSimpleOp  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSimpleOp  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSimpleOp  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
301	[BUG]  [BUGGY]  if(!protectionSimpleOp  &&!isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSimpleOp  &&!isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSimpleOp  &&!isResultUsed)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
302	[BUG]  [BUGGY]  if(!protectionSimpleOp  &&  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSimpleOp  &&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSimpleOp  &&  isResultUsed)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
303	[BUG]  [BUGGY]  n  =  an.getNumberOfChildren()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfChildren()  -  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfChildren()  -  1;	  n    =    an.getNumberOfChildren();    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
304	[BUG]  [BUGGY]  n  =  an.getNumberOfChildren()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfChildren()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfChildren()  +  1;	  n    =    an.getNumberOfChildren();    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
305	[BUG]  [BUGGY]  n  =  an.getNumberOfChildren()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfChildren()  *  2;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfChildren()  *  2;	  n    =    an.getNumberOfChildren();    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
306	[BUG]  [BUGGY]  n  =  an.getNumberOfChildren()  /  2;  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfChildren()  /  2;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfChildren()  /  2;	  n    =    an.getNumberOfChildren();    	non-compiled	[CE]  class,  interface,  or  enum  expected	187	None	replace
307	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ans)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ans)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ans)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(ans)||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	165	None	replace
308	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ANCEstorType);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ANCEstorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ANCEstorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR),    ANCEstorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
309	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ANCEstorType),  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ANCEstorType),  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ANCEstorType),  USELESS_CODE_ERROR);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR),    ANCEstorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
310	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN),  ANCEstorType);  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN),  ANCEstorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN),  ANCEstorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR),    ANCEstorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
311	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
312	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
313	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  msg));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
314	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  an,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  an,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  an,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
315	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  n));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  n));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  n));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an));    	non-compiled	[CE]  class,  interface,  or  enum  expected	174	None	replace
316	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an));    	non-compiled	[CE]  class,  interface,  or  enum  expected	174	None	replace
317	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
318	[BUG]  [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	131	None	replace
319	[BUG]  [BUGGY]  n  =  an.getFirstChild();  n  =  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  n  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  n  =  parent.getFirstChild();	  n    =    an.getFirstChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
320	[BUG]  [BUGGY]  n  =  parent.getFirstChild();  n  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  parent.getFirstChild();  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  parent.getFirstChild();  n  =  an.getFirstChild();	  n    =    an.getFirstChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
321	[BUG]  [BUGGY]  Node  gramps  =  an.getFirstChild();  n  =  gramps.getFirstChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getFirstChild();  n  =  gramps.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getFirstChild();  n  =  gramps.getFirstChild();	  n    =    an.getFirstChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	1	None	replace
322	[BUG]  [BUGGY]  n  =  an.removeLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.removeLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.removeLastChild();	  n    =    an.removeFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
323	[BUG]  [BUGGY]  n  =  an.replaceChild(n,  level);  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.replaceChild(n,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.replaceChild(n,  level);	  n    =    an.removeFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
324	[BUG]  [BUGGY]  n  =  an.removeFirstChild()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.removeFirstChild()  -  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.removeFirstChild()  -  1;	  n    =    an.removeFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
325	[BUG]  [BUGGY]  n  =  an.getFirstChild();  class,  interface,  or  enum  expected  [CE]  <identifier>  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  class,  interface,  or  enum  expected  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  class,  interface,  or  enum  expected	  n    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
326	[BUG]  [BUGGY]  if(an.getType()  ==  Token.GETPROP)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.GETPROP)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.GETPROP)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	67	None	replace
327	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
328	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
329	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
330	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
331	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
332	[BUG]  [BUGGY]  parent!=  if(ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent!=  if(ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent!=  if(ancestorType  ==  Token.COMMA)  {  continue;  }	  parent!=    if(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	169	None	replace
333	[BUG]  [BUGGY]  parent!=  null  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent!=  null  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent!=  null  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  parent!=    if(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  not  a  statement	169	None	replace
334	[BUG]  [BUGGY]  parent!=  n  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent!=  n  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent!=  n  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  parent!=    if(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  not  a  statement	169	None	replace
335	[BUG]  [BUGGY]  parent!=  n  ||  ancestorType!=  Token.COMMA)  {  continue;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent!=  n  ||  ancestorType!=  Token.COMMA)  {  continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent!=  n  ||  ancestorType!=  Token.COMMA)  {  continue;	  parent!=    if(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  not  a  statement	169	None	replace
336	[BUG]  [BUGGY]  if(isSimpleOp)  {  if(!protectionSideEffectFreeCode)  {  continue;  }  [CE]  cannot  find  symbol  isSimpleOp  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isSimpleOp)  {  if(!protectionSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isSimpleOp)  {  if(!protectionSideEffectFreeCode)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  isSimpleOp	115	None	replace
337	[BUG]  [BUGGY]  if(isResultUsed  ||!protectionSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||!protectionSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||!protectionSideEffectFreeCode)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
338	[BUG]  [BUGGY]  safely(protectionSideEffectFreeCode)  {  continue;  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  safely(protectionSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	safely(protectionSideEffectFreeCode)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  ';'  expected	115	None	replace
339	[BUG]  [BUGGY]  if(isSimpleOp)  {  if(protectionSideEffectFreeCode)  {  continue;  }  [CE]  cannot  find  symbol  isSimpleOp  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isSimpleOp)  {  if(protectionSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isSimpleOp)  {  if(protectionSideEffectFreeCode)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  isSimpleOp	115	None	replace
340	[BUG]  [BUGGY]  n  =  parent.getFirstChild();  n  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  parent.getFirstChild();  n  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  parent.getFirstChild();  n  =  an.getLastChild();	  n    =    an.getFirstChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
341	[BUG]  [BUGGY]  Node  gramps  =  parent.getFirstChild();  n  =  gramps.getLastChild();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  parent.getFirstChild();  n  =  gramps.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  parent.getFirstChild();  n  =  gramps.getLastChild();	  n    =    an.getFirstChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
342	[BUG]  [BUGGY]  Node  gramps  =  an.getFirstChild();  n  =  gramps.getLastChild();  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getFirstChild();  n  =  gramps.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getFirstChild();  n  =  gramps.getLastChild();	  n    =    an.getFirstChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
343	[BUG]  [BUGGY]  n  =  an.getFirstChild();  n  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  n  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  n  =  n.getLastChild();	  n    =    an.getFirstChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
344	[BUG]  [BUGGY]  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
345	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  1;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  1;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
346	[BUG]  [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	ntă.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
347	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  two;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  two;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  two;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
348	[BUG]  [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Joiner.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
349	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
350	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
351	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	232	None	replace
352	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ans)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ans)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ans)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
353	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  n  =  an.getLastChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getFirstChild();  n  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getFirstChild();  n  =  an.getLastChild();	  n    =    an.getFirstChild();    n    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	2	None	replace
354	[BUG]  [BUGGY]  Node  gramps  =  an.getFirstChild();  gramps  =  n.getLastChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getFirstChild();  gramps  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getFirstChild();  gramps  =  n.getLastChild();	  n    =    an.getFirstChild();    n    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	2	None	replace
355	[BUG]  [BUGGY]  Node  gramps  =  an.getFirstChild();  gramps  =  gramps.getLastChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getFirstChild();  gramps  =  gramps.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getFirstChild();  gramps  =  gramps.getLastChild();	  n    =    an.getFirstChild();    n    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	2	None	replace
356	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  n.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  n.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  gramps  =  n.getNext();	  n    =    an.getLastChild();    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
357	[BUG]  [BUGGY]  n.replaceChild(ans,  level);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(ans,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(ans,  level);	  n.replaceChild(an,    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	183	None	replace
358	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  n.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  n.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  n.getNext();	  n    =    an.getFirstChild();    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
359	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild();  Node  gramps  =  n.getParent();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getFirstChild();  Node  gramps  =  n.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getFirstChild();  Node  gramps  =  n.getParent();	  n    =    an.getFirstChild();    Node    gramps    =    n.getParent();    	non-compiled	[CE]  not  a  statement	4	None	replace
360	[BUG]  [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  n.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  n.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getFirstChild();  Node  gramps  =  n.getParent();	  n    =    an.getFirstChild();    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
361	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild();  Node  gramps  =  n.getNext();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getFirstChild();  Node  gramps  =  n.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getFirstChild();  Node  gramps  =  n.getNext();	  n    =    an.getFirstChild();    Node    gramps    =    n.getParent();    	non-compiled	[CE]  not  a  statement	4	None	replace
362	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EMPTY)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.COMMA)    {    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	210	None	replace
363	[BUG]  [BUGGY]  n  =  an.getNumberOfAncestors()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfAncestors()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfAncestors()  +  1;	  n    =    an.getNumberOfAncestors();    	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	replace
364	[BUG]  [BUGGY]  n  =  an.getNumberOfAncestors()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfAncestors()  -  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfAncestors()  -  1;	  n    =    an.getNumberOfAncestors();    	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	replace
365	[BUG]  [BUGGY]  n  =  an.getNumberOfAncestors()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfAncestors()  *  2;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfAncestors()  *  2;	  n    =    an.getNumberOfAncestors();    	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	replace
366	[BUG]  [BUGGY]  n  =  an.getNumberOfElements();  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfElements();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfElements();	  n    =    an.getNumberOfAncestors();    	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	replace
367	[BUG]  [BUGGY]  n  =  an.getNumberOfSlots();  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNumberOfSlots();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNumberOfSlots();	  n    =    an.getNumberOfAncestors();    	non-compiled	[CE]  class,  interface,  or  enum  expected	188	None	replace
368	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	replace
369	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	replace
370	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
371	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	replace
372	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
373	[BUG]  [BUGGY]  n  =  an.getNext()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNext()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNext()  +  1;	  n    =    an.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
374	[BUG]  [BUGGY]  n  =  an.getNext()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNext()  -  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNext()  -  1;	  n    =    an.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
375	[BUG]  [BUGGY]  n  =  an.getNext()  &&  level!=  USELESS_CODE_ERROR;  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNext()  &&  level!=  USELESS_CODE_ERROR;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNext()  &&  level!=  USELESS_CODE_ERROR;	  n    =    an.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
376	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  n,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  n,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  level,  n,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    an,    n,    USELESS_CODE_ERROR,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	61	None	replace
377	[BUG]  [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
378	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
379	[BUG]  [BUGGY]  if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
380	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
381	[BUG]  [BUGGY]  n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
382	[BUG]  [BUGGY]  n  =  an.getFirstChild();  level.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  level.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  level.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
383	[BUG]  [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FAILURE:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FAILURE:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  ASSIGN_FAILURE:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
384	[BUG]  [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  ASSIGN_FailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  ASSIGN_FailedError:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
385	[BUG]  [BUGGY]  if(!protectionFreeCode  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionFreeCode  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionFreeCode  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
386	[BUG]  [BUGGY]  if(!protectionFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
387	[BUG]  [BUGGY]  if(!protectionFreeCode  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionFreeCode  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionFreeCode  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
388	[BUG]  [BUGGY]  if(!level.isResultUsed  &&  isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!level.isResultUsed  &&  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!level.isResultUsed  &&  isSimpleOp)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
389	[BUG]  [BUGGY]  if(isSimpleOp)  {  if(!level.isResultUsed)  {  continue;  }  [CE]  cannot  find  symbol  isSimpleOp  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isSimpleOp)  {  if(!level.isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isSimpleOp)  {  if(!level.isResultUsed)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  isSimpleOp	116	None	replace
390	[BUG]  [BUGGY]  if(!level.isResultUsed  ||  level.isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!level.isResultUsed  ||  level.isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!level.isResultUsed  ||  level.isSimpleOp)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
391	[BUG]  [BUGGY]  if(!level.isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!level.isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!level.isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
392	[BUG]  [BUGGY]  if(!level.isResultUsed  &&  level.isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!level.isResultUsed  &&  level.isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!level.isResultUsed  &&  level.isSimpleOp)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
393	[BUG]  [BUGGY]  Node  n  =  parent.getLastChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  parent.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  parent.getLastChild();	  n    =    an.getLastChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  not  a  statement	21	None	replace
394	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one  exception.  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one  exception.  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one  exception.	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one    exception.    	non-compiled	[CE]  not  a  statement	59	None	replace
395	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  name));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  name));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  name));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    name));    	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	replace
396	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  name));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  name));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  name));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    name));    	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	replace
397	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  name,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  name,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  name,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    name));    	non-compiled	[CE]  class,  interface,  or  enum  expected	209	None	replace
398	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
399	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
400	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  COMPLETE_ERROR,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  COMPLETE_ERROR,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  COMPLETE_ERROR,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
401	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  msg,  isResultUsed);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  msg,  isResultUsed);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  msg,  isResultUsed);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
402	[BUG]  [BUGGY]  parent.replaceChild(n,  an);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.replaceChild(n,  an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.replaceChild(n,  an);	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
403	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  ||  parent.getType()!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
404	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(parent.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(parent.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
405	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(parent.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(parent.getType()  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
406	[BUG]  [BUGGY]  n  =  parent.getLastChild()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  parent.getLastChild()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  parent.getLastChild()  +  1;	  n    =    an.getLastChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
407	[BUG]  [BUGGY]  n  =  an.getLeadingSideEffects()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLeadingSideEffects()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLeadingSideEffects()  +  1;	  n    =    an.getLastChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
408	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  AnnotationUtil.getFirstChild(an.getFirstChild());  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  AnnotationUtil.getFirstChild(an.getFirstChild());  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  gramps  =  AnnotationUtil.getFirstChild(an.getFirstChild());	  n    =    an.getLastChild();    Node    gramps    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	157	None	replace
409	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  AnnotationUtil.getGrandparent(an.getFirstChild());  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  AnnotationUtil.getGrandparent(an.getFirstChild());  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  gramps  =  AnnotationUtil.getGrandparent(an.getFirstChild());	  n    =    an.getLastChild();    Node    gramps    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	157	None	replace
410	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
411	[BUG]  [BUGGY]  if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
412	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  an  =  parent.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  an  =  parent.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  an  =  parent.getLastChild();	  n    =    an.getFirstChild();    Node    an    =    n.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
413	[BUG]  [BUGGY]  Node  an  =  parent.getLastChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  parent.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  parent.getLastChild();	  n    =    an.getFirstChild();    Node    an    =    n.getLastChild();    	non-compiled	[CE]  not  a  statement	136	None	replace
414	[BUG]  [BUGGY]  n  =  an.getFirstChild();  node  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  node  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  node  =  n.getLastChild();	  n    =    an.getFirstChild();    Node    an    =    n.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
415	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	206	None	replace
416	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	206	None	replace
417	[BUG]  [BUGGY]  n  =  parent.getFirstChild()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  parent.getFirstChild()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  parent.getFirstChild()  +  1;	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
418	[BUG]  [BUGGY]  n  =  an.getLastChild().getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild().getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild().getFirstChild();	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
419	[BUG]  [BUGGY]  NodeUtil.removeChild(parent);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(parent);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(parent);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
420	[BUG]  [BUGGY]  NodeUtil.removeChild(n);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(n);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
421	[BUG]  [BUGGY]  NodeUtil.copyChild(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyChild(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyChild(an,  ancestorType);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
422	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
423	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
424	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
425	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType),  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType),  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType),  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
426	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg));    	non-compiled	[CE]  class,  interface,  or  enum  expected	34	None	replace
427	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType));  [CE]  ';'  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg));    	non-compiled	[CE]  ';'  expected	34	None	replace
428	[BUG]  [BUGGY]  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
429	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
430	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
431	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
432	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  not  a  statement	219	None	replace
433	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  variable  an  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  variable  an  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	219	None	replace
434	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
435	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  msg));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
436	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
437	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  MISSING_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  MISSING_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  MISSING_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
438	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
439	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
440	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
441	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  expected	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
442	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
443	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  ==  ')'  expected  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  ==  ')'  expected  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  ==  ')'  expected	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
444	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  ==  ')'  expected  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  ==  ')'  expected  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  ==  ')'  expected	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
445	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
446	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
447	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	220	None	replace
448	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  parent.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  parent.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
449	[BUG]  [BUGGY]  int  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  '.class'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  int  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	int  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  '.class'  expected	220	None	replace
450	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
451	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	156	None	replace
452	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
453	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
454	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	129	None	replace
455	[BUG]  [BUGGY]  NodeUtil.removeChild(an);  parent.removeChild(an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an);  parent.removeChild(an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an);  parent.removeChild(an);  n.removeChild(an);	  n.removeChild(an);    parent.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	227	None	replace
456	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  parent.removeChild(an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  parent.removeChild(an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  parent.removeChild(an);  n.removeChild(an);	  n.removeChild(an);    parent.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	227	None	replace
457	[BUG]  [BUGGY]  n.removeChild(an);  parent.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  parent.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  parent.removeChild(an);	  n.removeChild(an);    parent.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	227	None	replace
458	[BUG]  [BUGGY]  parent.removeChild(an);  parent.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.removeChild(an);  parent.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.removeChild(an);  parent.removeChild(an);	  n.removeChild(an);    parent.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	227	None	replace
459	[BUG]  [BUGGY]  if(gramps!=  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps!=  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps!=  null  ||  gramps.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
460	[BUG]  [BUGGY]  if(gramps!=  null  ||  gramps.getType()  ==  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps!=  null  ||  gramps.getType()  ==  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps!=  null  ||  gramps.getType()  ==  Token.FUNCTION)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
461	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  n,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  n,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  level,  n,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    n,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
462	[BUG]  [BUGGY]  n.removeChild(an);  Node  gramps  =  an.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  Node  gramps  =  an.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  Node  gramps  =  an.getParent();	  n.removeChild(an);    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
463	[BUG]  [BUGGY]  n.removeChild(an);  Node  gramps  =  an.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  Node  gramps  =  an.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  Node  gramps  =  an.getNext();	  n.removeChild(an);    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
464	[BUG]  [BUGGY]  node.removeChild(an);  Node  gramps  =  an.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node.removeChild(an);  Node  gramps  =  an.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node.removeChild(an);  Node  gramps  =  an.getParent();	  n.removeChild(an);    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
465	[BUG]  [BUGGY]  n.removeChild(an);  Node  gramps  =  n.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  Node  gramps  =  n.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  Node  gramps  =  n.getNext();	  n.removeChild(an);    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
466	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleOp()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleOp()  +  1;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
467	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleOp()  -  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleOp()  -  1;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
468	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  &&  level!=  USELESS_CODE_ERROR;  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleOp()  &&  level!=  USELESS_CODE_ERROR;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleOp()  &&  level!=  USELESS_CODE_ERROR;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
469	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  &&  level  ==  USELESS_CODE_ERROR;  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleOp()  &&  level  ==  USELESS_CODE_ERROR;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleOp()  &&  level  ==  USELESS_CODE_ERROR;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
470	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  &&  level.isResultUsed();  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleOp()  &&  level.isResultUsed();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleOp()  &&  level.isResultUsed();	  n    =    an.getSimpleOp();    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
471	[BUG]  [BUGGY]  n  =  an.getSimpleOp(),  level;  [CE]  ';'  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleOp(),  level;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleOp(),  level;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  ';'  expected	111	None	replace
472	[BUG]  [BUGGY]  Node  an  =  an.getLastChild();  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getLastChild();	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	159	None	replace
473	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  an  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  an  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  an  =  an.getLastChild();	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	replace
474	[BUG]  [BUGGY]  n  =  an.getFirstChild();  node  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  node  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  node  =  an.getLastChild();	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	replace
475	[BUG]  [BUGGY]  parent.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
476	[BUG]  [BUGGY]  NodeUtil.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
477	[BUG]  [BUGGY]  n.removeChild(an);  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
478	[BUG]  [BUGGY]  n.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
479	[BUG]  [BUGGY]  n.removeChild(ancestor);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(ancestor);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(ancestor);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
480	[BUG]  [BUGGY]  ||  isSimpleOp)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  isSimpleOp)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
481	[BUG]  [BUGGY]  if(isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
482	[BUG]  [BUGGY]  if(isSimpleOp  ||  isProteEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isSimpleOp  ||  isProteEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isSimpleOp  ||  isProteEffectFreeCode)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	44	None	replace
483	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
484	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
485	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
486	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
487	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
488	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
489	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
490	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol	168	None	replace
491	[BUG]  [BUGGY]  if(isResultUsed)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  cannot  find  symbol  isResultUsed  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed)  {  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  isResultUsed	168	None	replace
492	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	168	None	replace
493	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	168	None	replace
494	[BUG]  [BUGGY]  n  =  an.getChildCount()  -  1;  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getChildCount()  -  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getChildCount()  -  1;	  n    =    an.getChildCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
495	[BUG]  [BUGGY]  n  =  an.getChildCount()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getChildCount()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getChildCount()  +  1;	  n    =    an.getChildCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
496	[BUG]  [BUGGY]  n  =  an.getChildCount()  -  2;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getChildCount()  -  2;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getChildCount()  -  2;	  n    =    an.getChildCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
497	[BUG]  [BUGGY]  n  =  an.getChildCount()  *  2;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getChildCount()  *  2;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getChildCount()  *  2;	  n    =    an.getChildCount();    	non-compiled	[CE]  class,  interface,  or  enum  expected	109	None	replace
498	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	207	None	replace
499	[BUG]  [BUGGY]  if(ancestorType  ==  Token.NAME  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.NAME  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.NAME  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	207	None	replace
500	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	207	None	replace
501	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	207	None	replace
502	[BUG]  [BUGGY]  if(ancestorType!=  Token.NAME  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.NAME  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.NAME  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	207	None	replace
503	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	207	None	replace
504	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  gramps  =  parent.getFirstChild();	  n    =    an.getLastChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
505	[BUG]  [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getLastChild();  Node  gramps  =  n.getFirstChild();	  n    =    an.getLastChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
506	[BUG]  [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getLastChild();  Node  gramps  =  parent.getFirstChild();	  n    =    an.getLastChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
507	[BUG]  [BUGGY]  n  =  an.getParent()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getParent()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getParent()  +  1;	  n    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
508	[BUG]  [BUGGY]  n  =  an.getPrevious();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getPrevious();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getPrevious();	  n    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
509	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  nodes.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  nodes.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  nodes.removeChild(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	223	None	replace
510	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	170	None	replace
511	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	170	None	replace
512	[BUG]  [BUGGY]  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	170	None	replace
513	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ANCEstorType));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ANCEstorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ANCEstorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ANCEstorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
514	[BUG]  [BUGGY]  if(isResultUsed  ||!resultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||!resultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||!resultUsed)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
515	[BUG]  [BUGGY]  if(!resultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!resultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!resultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
516	[BUG]  [BUGGY]  if(!resultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!resultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!resultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
517	[BUG]  [BUGGY]  ||!resultUsed)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||!resultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||!resultUsed)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
518	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  PROTECTOR_FN),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  PROTECTOR_FN),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  PROTECTOR_FN),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
519	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
520	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level2,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level2,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level2,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
521	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  PROTECTOR_FN),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
522	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  msg));	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
523	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
524	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
525	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
526	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	166	None	replace
527	[BUG]  [BUGGY]  Node  gramps  =  n.getFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  n.getFirstChild();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	69	None	replace
528	[BUG]  [BUGGY]  Node  gramps  =  n.getLastChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  n.getLastChild();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	69	None	replace
529	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
530	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
531	[BUG]  [BUGGY]  Node  gramps  =  gramps.getFirstChild();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  gramps.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  gramps.getFirstChild();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	58	None	replace
532	[BUG]  [BUGGY]  Node  gramps  =  gramps.getLastChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  gramps.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  gramps.getLastChild();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	58	None	replace
533	[BUG]  [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps.getType()  ==  Token.EXPR_RESULT  ||  gramps.getType()!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	58	None	replace
534	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  isSimpleOp)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
535	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)&&  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
536	[BUG]  [BUGGY]  if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
537	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleOp)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
538	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  level!=  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  level!=  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  level!=  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
539	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
540	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
541	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
542	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
543	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
544	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
545	[BUG]  [BUGGY]  NodeUtil.removeChild(an);  parent.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an);  parent.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an);  parent.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	221	None	replace
546	[BUG]  [BUGGY]  NodeUtil.removeChild(an);  NodeUtil.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an);  NodeUtil.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an);  NodeUtil.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	221	None	replace
547	[BUG]  [BUGGY]  n.removeChild(an);  if  (ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  if  (ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  if  (ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
548	[BUG]  [BUGGY]  n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  return;  else  break;	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
549	[BUG]  [BUGGY]  n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  return;  else  break;  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  return;  else  break;	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
550	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType,  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType,  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType,  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
551	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
552	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType,  protocol);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType,  protocol);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg),  ancestorType,  protocol);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
553	[BUG]  [BUGGY]  if(isResultUsed  ||  state.isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  state.isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  state.isSimpleOp)  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
554	[BUG]  [BUGGY]  ||  state.isSimpleOp)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  state.isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  state.isSimpleOp)  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	228	None	replace
555	[BUG]  [BUGGY]  if(state.isSimpleOp  ||  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(state.isSimpleOp  ||  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(state.isSimpleOp  ||  isResultUsed)  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
556	[BUG]  [BUGGY]  if(state.isSimpleOp  ||  state.isFunctionDeclaration())  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(state.isSimpleOp  ||  state.isFunctionDeclaration())  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(state.isSimpleOp  ||  state.isFunctionDeclaration())  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
557	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	132	None	replace
558	[BUG]  [BUGGY]  Node  gramps  =  an.getLastChild();  n  =  gramps.getFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getLastChild();  n  =  gramps.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getLastChild();  n  =  gramps.getFirstChild();	  n    =    an.getLastChild();    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	22	None	replace
559	[BUG]  [BUGGY]  n  =  an.getLastChild();  n  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  n  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  n  =  n.getFirstChild();	  n    =    an.getLastChild();    n    =    parent.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
560	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  message);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  message);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  message);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    PROTECTOR_FN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
561	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  isSimpleOp);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  isSimpleOp);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  isSimpleOp);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    PROTECTOR_FN);    	non-compiled	[CE]  class,  interface,  or  enum  expected	103	None	replace
562	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&!NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&!NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&!NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	163	None	replace
563	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(ancestorType))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	163	None	replace
564	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||!NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||!NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||!NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	163	None	replace
565	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&!NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&!NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&!NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  not  a  statement	163	None	replace
566	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(ancestorType))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  not  a  statement	163	None	replace
567	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(n))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(n))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(n))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	163	None	replace
568	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.COMMA)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.COMMA)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.COMMA)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
569	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
570	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(ancestorType  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(ancestorType  ==  Token.COMMA)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
571	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(an!=  null)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(an!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(an!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
572	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  if(ancestorType!=  Token.COMMA)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  parent.getFirstChild();  if(ancestorType!=  Token.COMMA)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  parent.getFirstChild();  if(ancestorType!=  Token.COMMA)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
573	[BUG]  [BUGGY]  node.removeChild(an);  NodeUtil.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node.removeChild(an);  NodeUtil.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node.removeChild(an);  NodeUtil.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	replace
574	[BUG]  [BUGGY]  n.removeChild(ancestor);  NodeUtil.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(ancestor);  NodeUtil.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(ancestor);  NodeUtil.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	replace
575	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  an.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  an.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  an.getNext();	  n    =    an.getFirstChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
576	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  parent.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  parent.getParent();	  n    =    an.getFirstChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
577	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  an.getGrandparent();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  an.getGrandparent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  an.getGrandparent();	  n    =    an.getFirstChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
578	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  ancestor);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
579	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg),  ancestor);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
580	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR,  ancestor);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
581	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType),  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType),  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  msg,  ancestorType),  ancestor);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
582	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg));	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
583	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
584	[BUG]  [BUGGY]  if(isResultUsed  ||  isSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSideEffectFreeCode)  {  continue;  }	  if(isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
585	[BUG]  [BUGGY]  Node  gramps  =  parent.getFirstChild();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  parent.getFirstChild();	  Node    gramps    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	13	None	replace
586	[BUG]  [BUGGY]  n.getLastChild().getNext().getNext())  {  return;  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getLastChild().getNext().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getLastChild().getNext().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  ';'  expected	193	None	replace
587	[BUG]  [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getLastChild().getNext().getNext())  {  return;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getLastChild().getNext().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getFirstChild().getNext().getNext()  ||  n.getLastChild().getNext().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  not  a  statement	193	None	replace
588	[BUG]  [BUGGY]  parent.getFirstChild().getNext().getNext())  {  return;  [CE]  ';'  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.getFirstChild().getNext().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.getFirstChild().getNext().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  ';'  expected	193	None	replace
589	[BUG]  [BUGGY]  n.getFirstChild().getParent().getNext().getNext())  {  return;  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getFirstChild().getParent().getNext().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getFirstChild().getParent().getNext().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  ';'  expected	193	None	replace
590	[BUG]  [BUGGY]  (n.getFirstChild().getNext().getNext()))  {  return;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  (n.getFirstChild().getNext().getNext()))  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	(n.getFirstChild().getNext().getNext()))  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  not  a  statement	193	None	replace
591	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
592	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
593	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	96	None	replace
594	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	replace
595	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	replace
596	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    an,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
597	[BUG]  [BUGGY]  AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
598	[BUG]  [BUGGY]  JSError.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  JSError.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	JSError.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
599	[BUG]  [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Joiner.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
600	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  1;  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  1;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
601	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  two  warnings,  and  there  should  be  one;  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  two  warnings,  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  two  warnings,  and  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
602	[BUG]  [BUGGY]  if(NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(n)||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
603	[BUG]  [BUGGY]  AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	AssertionFailedError:  There  should  be  one  warning  associated  with  an;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
604	[BUG]  [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Annotated.AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Annotated.AssertionFailedError:  There  should  be  one  warning  associated  with  an;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
605	[BUG]  [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Joiner.AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Joiner.AssertionFailedError:  There  should  be  one  warning  associated  with  an;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
606	[BUG]  [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ntă.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	ntă.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
607	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  this;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  this;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  this;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
608	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    >=    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	185	None	replace
609	[BUG]  [BUGGY]  Node  an  =  an.getLastChild();  n  =  an.getFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getLastChild();  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getLastChild();  n  =  an.getFirstChild();	  n    =    an.getLastChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	17	None	replace
610	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  an));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  an));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  an));	  t.getCompiler().report(JSError.make(t,an,    USELESS_CODE_ERROR,    n));    	non-compiled	[CE]  class,  interface,  or  enum  expected	139	None	replace
611	[BUG]  [BUGGY]  parent.getType()  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.getType()  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.getType()  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  not  a  statement	131	None	replace
612	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  class,  interface,  or  enum  expected	64	None	replace
613	[BUG]  [BUGGY]  if(!level.isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!level.isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!level.isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
614	[BUG]  [BUGGY]  if(!level.isResultUsed  &&  level.isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!level.isResultUsed  &&  level.isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!level.isResultUsed  &&  level.isSimpleEffectFreeCode)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
615	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	171	None	replace
616	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	171	None	replace
617	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getFirstChild();  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  not  a  statement	220	None	replace
618	[BUG]  [BUGGY]  parent  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent  =  an.getFirstChild();	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	199	None	replace
619	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
620	[BUG]  [BUGGY]  Node  gramps  =  an.getFirstChild();  n  =  parent.getLastChild();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getFirstChild();  n  =  parent.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getFirstChild();  n  =  parent.getLastChild();	  n    =    an.getFirstChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
621	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ans)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ans)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ans)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(ans)||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	165	None	replace
622	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
623	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
624	[BUG]  [BUGGY]  if(!resultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!resultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!resultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
625	[BUG]  [BUGGY]  if(isResultUsed  ||!resultFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||!resultFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||!resultFreeCode)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
626	[BUG]  [BUGGY]  if(resultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(resultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(resultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
627	[BUG]  [BUGGY]  if(resultUsed  ||  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(resultUsed  ||  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(resultUsed  ||  isResultUsed)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
628	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  node.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  node.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  node.removeChild(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	223	None	replace
629	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  an.getType()));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  an.getType()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  an.getType()));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
630	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.COMMA));  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.COMMA));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.COMMA));	  n.addChildToFront(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
631	[BUG]  [BUGGY]  n.addChildToFront(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToFront(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToFront(an,  ancestorType);	  n.addChildToFront(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
632	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT));  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT));	  n.addChildToFront(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
633	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  PROTECTOR_FN);	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
634	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  gramps);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  gramps);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  gramps);	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
635	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  1);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  1);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  1);	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
636	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  this);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  this);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  this);	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
637	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  PROTECTOR_FN));	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
638	[BUG]  [BUGGY]  node.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node.removeChild(an);	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	153	None	replace
639	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isFunction(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isFunction(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||!NodeUtil.isFunction(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	163	None	replace
640	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isAssignmentOp(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isAssignmentOp(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||!NodeUtil.isAssignmentOp(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	163	None	replace
641	[BUG]  [BUGGY]  gramps!=  null;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps!=  null;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps!=  null;	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  not  a  statement	56	None	replace
642	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
643	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
644	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  PROTECTOR_FN,  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
645	[BUG]  [BUGGY]  n.getFirstChild().getParent().getNext())  {  return;  [CE]  ';'  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getFirstChild().getParent().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getFirstChild().getParent().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  ';'  expected	193	None	replace
646	[BUG]  [BUGGY]  node.getFirstChild().getNext().getNext())  {  return;  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node.getFirstChild().getNext().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node.getFirstChild().getNext().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  ';'  expected	193	None	replace
647	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
648	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  >=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  >=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  >=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
649	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ANCEstorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ANCEstorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ANCEstorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	130	None	replace
650	[BUG]  [BUGGY]  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  &&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	130	None	replace
651	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  USELESS_CODE_ERROR);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
652	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  ancestorType),  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  ancestorType),  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  ancestorType),  USELESS_CODE_ERROR);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
653	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  USELESS_CODE_ERROR);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
654	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
655	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ANCEstorType),  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ANCEstorType),  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ANCEstorType),  USELESS_CODE_ERROR);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
656	[BUG]  [BUGGY]  if(!isSimpleOp  &&!protectSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isSimpleOp  &&!protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isSimpleOp  &&!protectSideEffectFreeCode)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
657	[BUG]  [BUGGY]  if(!isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	114	None	replace
658	[BUG]  [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  an.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  an.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getLastChild();  Node  gramps  =  an.getParent();	  n    =    an.getLastChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
659	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  an.getGrandparent();  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  gramps  =  an.getGrandparent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  gramps  =  an.getGrandparent();	  n    =    an.getLastChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	23	None	replace
660	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  ';'  expected	219	None	replace
661	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  AnnotatedAncestor  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  AnnotatedAncestor  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  AnnotatedAncestor  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
662	[BUG]  [BUGGY]  node  =  an.getLastChild();  Node  an  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getLastChild();  Node  an  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getLastChild();  Node  an  =  n.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
663	[BUG]  [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getLastChild();  Node  gramps  =  an.getFirstChild();	  n    =    an.getLastChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	20	None	replace
664	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
665	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(n))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(n))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(n))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
666	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
667	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
668	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level1,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level1,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level1,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
669	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  an.getType()));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  an.getType()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  an.getType()));	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
670	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  continue;  }	  if(isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
671	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  continue;  }	  if(isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
672	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	129	None	replace
673	[BUG]  [BUGGY]  n  =  an.getSimpleEffectFreeCode();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleEffectFreeCode();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleEffectFreeCode();	  n    =    an.getSimpleOp();    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
674	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  Node  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
675	[BUG]  [BUGGY]  n  =  an.getLastChild();  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
676	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
677	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  msg,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  msg,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  msg,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
678	[BUG]  [BUGGY]  n  =  an.getfirstChild()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getfirstChild()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getfirstChild()  +  1;	  n    =    an.getLastChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
679	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  another;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  another;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  for  another;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
680	[BUG]  [BUGGY]  safely(state.isSimpleOp)  {  continue;  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  safely(state.isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	safely(state.isSimpleOp)  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  ';'  expected	228	None	replace
681	[BUG]  [BUGGY]  if(state.isSimpleOp  &&  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(state.isSimpleOp  &&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(state.isSimpleOp  &&  isResultUsed)  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
682	[BUG]  [BUGGY]  State  state  =  an.getState();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  State  state  =  an.getState();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	State  state  =  an.getState();	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  not  a  statement	228	None	replace
683	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
684	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
685	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR),  ANCEstorType);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR),  ANCEstorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR),  ANCEstorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR),    ANCEstorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	49	None	replace
686	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
687	[BUG]  [BUGGY]  node.removeChild(an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node.removeChild(an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node.removeChild(an);  n.removeChild(an);	  n.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
688	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestor)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestor)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ancestor)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
689	[BUG]  [BUGGY]  if(protectionSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
690	[BUG]  [BUGGY]  if(protectionSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
691	[BUG]  [BUGGY]  if(protectionSideEffectFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSideEffectFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSideEffectFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
692	[BUG]  [BUGGY]  if(!protectionSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
693	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	81	None	replace
694	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  ancestorType);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  ancestorType);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  ancestorType);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
695	[BUG]  [BUGGY]  NodeUtil.removeChild(n,  parent);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(n,  parent);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(n,  parent);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
696	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  ancestor);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  ancestor);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  ancestor);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
697	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  another  warning  (see  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
698	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  another  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
699	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
700	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  at  least  one  warning;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  at  least  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  at  least  one  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
701	[BUG]  [BUGGY]  Node  an  =  an.getLastChild();  n  =  an.getLastChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getLastChild();  n  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getLastChild();  n  =  an.getLastChild();	  n    =    an.getLastChild();    n    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	16	None	replace
702	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
703	[BUG]  [BUGGY]  n  =  an.getLastChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
704	[BUG]  [BUGGY]  n  =  an.getFirstChild();  ASSERT_FailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  ASSERT_FailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  ASSERT_FailedError:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
705	[BUG]  [BUGGY]  n  =  an.getLastChild();  Annotation  an  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Annotation  an  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Annotation  an  =  an.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
706	[BUG]  [BUGGY]  n  =  an.getLastChild();  Annotated  an  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Annotated  an  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Annotated  an  =  an.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
707	[BUG]  [BUGGY]  AssertionFailedError:  There  should  be  one  warning  and  there  should  be  one;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  AssertionFailedError:  There  should  be  one  warning  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	AssertionFailedError:  There  should  be  one  warning  and  there  should  be  one;	  if(ancestorType!=    Token.COMMA)    {    continue;    }    junit.framework.AssertionFailedError:    There    should    be    one    warning    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	145	None	replace
708	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  not  a  statement	233	None	replace
709	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(n)||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  not  a  statement	31	None	replace
710	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(answer)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(answer)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(answer)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(n)||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	31	None	replace
711	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  message));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  message));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  message));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    message));    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
712	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    message));    	non-compiled	[CE]  class,  interface,  or  enum  expected	208	None	replace
713	[BUG]  [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getFirstChild();  Node  gramps  =  an.getFirstChild();	  n    =    an.getFirstChild();    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
714	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA    &&    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	237	None	replace
715	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;	  if(ancestorType!=    Token.COMMA    &&    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	237	None	replace
716	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an,  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an,  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an,	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
717	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning  associated  with  an;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning  associated  with  an;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  another  warning  associated  with  an;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
718	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  array;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  array;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  array;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
719	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getFirstChild().getNext();	          Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
720	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
721	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
722	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.FUNCTION)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
723	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.FUNCTION)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
724	[BUG]  [BUGGY]  if(protectionFreeCode  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionFreeCode  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionFreeCode  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
725	[BUG]  [BUGGY]  safely(protectionFreeCode)  {  continue;  }  [CE]  ';'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  safely(protectionFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	safely(protectionFreeCode)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  ';'  expected	229	None	replace
726	[BUG]  [BUGGY]  if(protectionFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
727	[BUG]  [BUGGY]  if(protectionFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
728	[BUG]  [BUGGY]  if(protectionFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionFreeCode  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
729	[BUG]  [BUGGY]  if(!protectionFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
730	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	167	None	replace
731	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  isResultUsed)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  NodeUtil.isExpressionNode(an)||  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
732	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
733	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
734	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
735	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
736	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN),  ancestorType);	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	197	None	replace
737	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {	  if(ancestorType!=    Token.COMMA)    {    continue;    }    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one    remaining;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	148	None	replace
738	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	99	None	replace
739	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  an.getType()!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  an.getType()!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT  ||  an.getType()!=  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
740	[BUG]  [BUGGY]  if(an!=  null)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an!=  null)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an!=  null)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
741	[BUG]  [BUGGY]  n.replaceChild(an,  COMMA);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  COMMA);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  COMMA);	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
742	[BUG]  [BUGGY]  n.replaceChild(an,  gramps);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  gramps);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  gramps);	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
743	[BUG]  [BUGGY]  n.removeChild(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an,  ancestorType);	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
744	[BUG]  [BUGGY]  n.removeChild(an,  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an,  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an,  ancestor);	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
745	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.COMMA,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.COMMA,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.COMMA,  ancestorType));	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
746	[BUG]  [BUGGY]  n.replaceChild(an,  comma);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  comma);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  comma);	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
747	[BUG]  [BUGGY]  n  =  Annotated.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  Annotated.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  Annotated.getFirstChild();	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
748	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  n,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  n,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  n,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
749	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  an,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  an,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  an,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
750	[BUG]  [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  an.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  an.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getFirstChild();  Node  gramps  =  an.getParent();	  n    =    an.getFirstChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
751	[BUG]  [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  NodeUtil.removeChild(an,  ancestorType);	  n.removeChild(an);    NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	replace
752	[BUG]  [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(ans);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(ans);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  NodeUtil.removeChild(ans);	  n.removeChild(an);    NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	replace
753	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  sourceName,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  sourceName,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  sourceName,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
754	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLastChild()));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLastChild()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLastChild()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    parent));    	non-compiled	[CE]  class,  interface,  or  enum  expected	37	None	replace
755	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType),  ancestor);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
756	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  ancestor);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
757	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
758	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  n);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  PROTECTOR_FN,  ancestorType),  n);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
759	[BUG]  [BUGGY]  State  state  =  n.getState();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  State  state  =  n.getState();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	State  state  =  n.getState();	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    break;    }    	non-compiled	[CE]  not  a  statement	202	None	replace
760	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
761	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
762	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
763	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning!=  ')'	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
764	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  >>  ')'  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  >>  ')'  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  >>  ')'	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
765	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
766	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  n  ==  an.getFirstChild())  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  n  ==  an.getFirstChild())  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  n  ==  an.getFirstChild())  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
767	[BUG]  [BUGGY]  While(ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  ';'  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  While(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	While(ancestorType!=  Token.COMMA)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  ';'  expected	172	None	replace
768	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  AssertionFailedError:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
769	[BUG]  [BUGGY]  n  =  an.getFirstChild();  ASSERT_FailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  ASSERT_FailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  ASSERT_FailedError:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
770	[BUG]  [BUGGY]  parent.getType()!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.getType()!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.getType()!=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	89	None	replace
771	[BUG]  [BUGGY]  parent.getType()  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.getType()  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.getType()  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	89	None	replace
772	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	236	None	replace
773	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  [CE]  cannot  find  symbol  SEMI  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  continue;	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  cannot  find  symbol  SEMI	236	None	replace
774	[BUG]  [BUGGY]  if(ancestorType!=  Token.SEMI  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.SEMI  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.SEMI  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	236	None	replace
775	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
776	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	&&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
777	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  isSimpleEffectFreeCode)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
778	[BUG]  [BUGGY]  if(gramps.getType()!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(gramps.getType()!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(gramps.getType()!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
779	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  an,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  an,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_ERROR,  an,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
780	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  an.getType()));  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  an.getType()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  an.getType()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
781	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  >=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  >=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  >=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
782	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Annotated  an  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Annotated  an  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Annotated  an  =  an.getFirstChild();	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	137	None	replace
783	[BUG]  [BUGGY]  n.removeChild(parent);  Node  gramps  =  n.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(parent);  Node  gramps  =  n.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(parent);  Node  gramps  =  n.getParent();	  n.removeChild(an);    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
784	[BUG]  [BUGGY]  n.removeChild(an);  Node  gramps  =  parent.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  Node  gramps  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  Node  gramps  =  parent.getParent();	  n.removeChild(an);    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
785	[BUG]  [BUGGY]  node.removeChild(an);  Node  gramps  =  an.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node.removeChild(an);  Node  gramps  =  an.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node.removeChild(an);  Node  gramps  =  an.getNext();	  n.removeChild(an);    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	152	None	replace
786	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.COMMA)    {    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	210	None	replace
787	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.COMMA)    {    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	210	None	replace
788	[BUG]  [BUGGY]  if(ancestorType  >>  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >>  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >>  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    >=    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	185	None	replace
789	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  >=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  >=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  >=  Token.COMMA)  {  continue;  }	  if(ancestorType    >=    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	185	None	replace
790	[BUG]  [BUGGY]  if(ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
791	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning,  and  there  should  be  one;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning,  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  another  warning,  and  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
792	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning,  and  there  should  be  one;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning,  and  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning,  and  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
793	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.removeChild(ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.removeChild(ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  n.removeChild(ancestorType);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(n);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	replace
794	[BUG]  [BUGGY]  Node  gramps  =  an.getAncestors();  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getAncestors();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getAncestors();	  Node    gramps    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	13	None	replace
795	[BUG]  [BUGGY]  Node  gramps  =  an.getOwnSideEffects();  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getOwnSideEffects();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getOwnSideEffects();	  Node    gramps    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	13	None	replace
796	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  two  warnings,  but  there  should  be  one;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  two  warnings,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  two  warnings,  but  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
797	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  another  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  another  warning,  but  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
798	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  more  than  one  warning,  but  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
799	[BUG]  [BUGGY]  if(isResultUsed  ||  ancestorType)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  ancestorType)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  ancestorType)  {  continue;  }	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
800	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType)  {  continue;  }  [CE]  ';'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  allowSideEffects(t,  ancestorType)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	allowSideEffects(t,  ancestorType)  {  continue;  }	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  ';'  expected	155	None	replace
801	[BUG]  [BUGGY]  aught(t,  ancestorType)  {  continue;  }  [CE]  ';'  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  aught(t,  ancestorType)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	aught(t,  ancestorType)  {  continue;  }	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  ';'  expected	155	None	replace
802	[BUG]  [BUGGY]  Node  gramps  =  an.getLastChild();  n  =  parent.getFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getLastChild();  n  =  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getLastChild();  n  =  parent.getFirstChild();	  n    =    an.getLastChild();    n    =    parent.getFirstChild();    	non-compiled	[CE]  not  a  statement	22	None	replace
803	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(answer)||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(answer)||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(answer)||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(n)||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
804	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(n)||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  not  a  statement	91	None	replace
805	[BUG]  [BUGGY]  n.removeChild(an);  parent.replaceChild(an,  n);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  parent.replaceChild(an,  n);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  parent.replaceChild(an,  n);  n.removeChild(an);	  n.removeChild(an);    parent.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	227	None	replace
806	[BUG]  [BUGGY]  NodeUtil.removeChild(parent,  an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                      java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(parent,  an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(parent,  an);  n.removeChild(an);	  n.removeChild(an);    parent.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	227	None	replace
807	[BUG]  [BUGGY]  NodeUtil.removeChild(parent);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(parent);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(parent);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	221	None	replace
808	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType);  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
809	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
810	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getType());  [CE]  ')'  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getType());  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getType());	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
811	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString());  [CE]  ')'  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString());  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString());	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
812	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getSourceName());  [CE]  ')'  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getSourceName());  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getSourceName());	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
813	[BUG]  [BUGGY]  n  =  parent.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  parent.getParent();	  n    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
814	[BUG]  [BUGGY]  n  =  an.getLastChild();  Node  n  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Node  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Node  n  =  an.getFirstChild();	  n    =    an.getFirstChild();    Node    n    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	138	None	replace
815	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Annotation  an  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Annotation  an  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Annotation  an  =  an.getLastChild();	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	replace
816	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Annotated  an  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Annotated  an  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Annotated  an  =  an.getLastChild();	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	replace
817	[BUG]  [BUGGY]  node  =  an.getFirstChild();  Node  an  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getFirstChild();  Node  an  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getFirstChild();  Node  an  =  n.getLastChild();	  n    =    an.getFirstChild();    Node    an    =    n.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
818	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Annotation  an  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Annotation  an  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Annotation  an  =  n.getLastChild();	  n    =    an.getFirstChild();    Node    an    =    n.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
819	[BUG]  [BUGGY]  n.addChildToBack(ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToBack(ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToBack(ancestor);	  n.addChildToBack(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	replace
820	[BUG]  [BUGGY]  n.addChildToBack(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.addChildToBack(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.addChildToBack(an,  ancestorType);	  n.addChildToBack(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	replace
821	[BUG]  [BUGGY]  n.removeChildToBack(an);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChildToBack(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChildToBack(an);	  n.addChildToBack(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	184	None	replace
822	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	166	None	replace
823	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level));	  t.getCompiler().report(JSError.make(t,    node,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	74	None	replace
824	[BUG]  [BUGGY]  if(ancestorType!=  TOken.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  TOken.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  TOken.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	24	None	replace
825	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  proTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  proTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  proTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
826	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType,  proTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType,  proTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType,  proTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    proTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	122	None	replace
827	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestor)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestor)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ancestor)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
828	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
829	[BUG]  [BUGGY]  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	170	None	replace
830	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level));	  t.getCompiler().report(JSError.make(t,    an,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
831	[BUG]  [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  parent.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getFirstChild();  Node  gramps  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getFirstChild();  Node  gramps  =  parent.getParent();	  n    =    an.getFirstChild();    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
832	[BUG]  [BUGGY]  if(protectionSimpleOp  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSimpleOp  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSimpleOp  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
833	[BUG]  [BUGGY]  if(protectionSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
834	[BUG]  [BUGGY]  if(protectionSimpleOp  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSimpleOp  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSimpleOp  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
835	[BUG]  [BUGGY]  if(!protectionSimpleOp  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSimpleOp  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSimpleOp  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
836	[BUG]  [BUGGY]  if(protectionSimpleOp  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSimpleOp  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSimpleOp  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
837	[BUG]  [BUGGY]  safely(protectionSimpleOp)  {  continue;  }  [CE]  ';'  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  safely(protectionSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	safely(protectionSimpleOp)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  ';'  expected	230	None	replace
838	[BUG]  [BUGGY]  n  =  an.getFirstChild();  AnnotatedNode  an  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  AnnotatedNode  an  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  AnnotatedNode  an  =  n.getLastChild();	  n    =    an.getLastChild();    Node    an    =    n.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	160	None	replace
839	[BUG]  [BUGGY]  n.replaceChild(an,  new  CheckLevel(ancestorType),  level);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  CheckLevel(ancestorType),  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  CheckLevel(ancestorType),  level);	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
840	[BUG]  [BUGGY]  n.replaceChild(an,  new  CheckLevel(ancestorType,  level));  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  CheckLevel(ancestorType,  level));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  CheckLevel(ancestorType,  level));	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
841	[BUG]  [BUGGY]  n.replaceChild(an,  level  -  1);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  level  -  1);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  level  -  1);	  n.replaceChild(an,    level);    	non-compiled	[CE]  class,  interface,  or  enum  expected	42	None	replace
842	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  an);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  an);	  t.getCompiler().report(JSError.make(t,    an,    n,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
843	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR),  an);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR),  an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR),  an);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
844	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  UNKNOWN_EXPR_TYPE),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  UNKNOWN_EXPR_TYPE),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  UNKNOWN_EXPR_TYPE),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	100	None	replace
845	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ans)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ans)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ans)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
846	[BUG]  [BUGGY]  &&!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  &&!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	&&!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
847	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  n  =  an.getLastChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  n  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  n  =  an.getLastChild();	  n    =    an.getFirstChild();    n    =    an.getLastChild();    	non-compiled	[CE]  not  a  statement	2	None	replace
848	[BUG]  [BUGGY]  node  =  an.getFirstChild();  n  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getFirstChild();  n  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getFirstChild();  n  =  an.getLastChild();	  n    =    an.getFirstChild();    n    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
849	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  not  a  statement	216	None	replace
850	[BUG]  [BUGGY]  NodeUtil.checkState(ancestorType  ==  Token.COMMA);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.checkState(ancestorType  ==  Token.COMMA);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.checkState(ancestorType  ==  Token.COMMA);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
851	[BUG]  [BUGGY]  NodeUtil.redeclareVars(an);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.redeclareVars(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.redeclareVars(an);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
852	[BUG]  [BUGGY]  NodeUtil.redeclareVars(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.redeclareVars(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.redeclareVars(an,  ancestorType);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
853	[BUG]  [BUGGY]  n.removeChild(ans);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(ans);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(ans);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
854	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  if(an!=  null)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  parent.getFirstChild();  if(an!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  parent.getFirstChild();  if(an!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
855	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  ancestorType,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType,    PROTECTOR_FN));    	non-compiled	[CE]  class,  interface,  or  enum  expected	119	None	replace
856	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  protectionSideEffectFreeCode));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  protectionSideEffectFreeCode));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  protectionSideEffectFreeCode));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
857	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  protectSideEffectFreeCode));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  protectSideEffectFreeCode));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType,  protectSideEffectFreeCode));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
858	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
859	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
860	[BUG]  [BUGGY]  if(ancestorType!=  Token.ASSIGN)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.ASSIGN)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.ASSIGN)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
861	[BUG]  [BUGGY]  n  =  an.getNext()  ||  ancestorType  ==  Token.COMMA;  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNext()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNext()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
862	[BUG]  [BUGGY]  n  =  an.getNext()  ||  ancestorType!=  Token.COMMA;  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNext()  ||  ancestorType!=  Token.COMMA;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNext()  ||  ancestorType!=  Token.COMMA;	  n    =    an.getNext();    	non-compiled	[CE]  class,  interface,  or  enum  expected	86	None	replace
863	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  n.removeChild(an);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
864	[BUG]  [BUGGY]  n.removeChild(ancestor);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(ancestor);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(ancestor);  if  (ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
865	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ans)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(ans)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(ans)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	204	None	replace
866	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  >=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  >=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  >=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	204	None	replace
867	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  level,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  level,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  level,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
868	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  Level.WARNING,  level,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
869	[BUG]  [BUGGY]  Node  gramps  =  an.getOwnerDocument();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getOwnerDocument();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getOwnerDocument();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
870	[BUG]  [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  parent.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  node  =  an.getLastChild();  Node  gramps  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	node  =  an.getLastChild();  Node  gramps  =  parent.getParent();	  n    =    an.getLastChild();    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	19	None	replace
871	[BUG]  [BUGGY]  n  =  an.replaceChild(n,  COMMA);  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.replaceChild(n,  COMMA);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.replaceChild(n,  COMMA);	  n    =    an.removeFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
872	[BUG]  [BUGGY]  n  =  an.removeFirstChild()  +  1;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.removeFirstChild()  +  1;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.removeFirstChild()  +  1;	  n    =    an.removeFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
873	[BUG]  [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EMPTY)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
874	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	132	None	replace
875	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
876	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  >=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  >=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  >=  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	132	None	replace
877	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
878	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  not  a  statement	95	None	replace
879	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  msg),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	101	None	replace
880	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
881	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
882	[BUG]  [BUGGY]  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffectFreeCode(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	replace
883	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffectFreeCode(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    return;    }    	non-compiled	[CE]  not  a  statement	203	None	replace
884	[BUG]  [BUGGY]  n  =  an.getFirstChild();  if(n  ==  null)  {  n  =  an.getLastChild();  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  if(n  ==  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  if(n  ==  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffectFreeCode(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	203	None	replace
885	[BUG]  [BUGGY]  Preconditions.checkState(an.getType()  ==  Token.COMMA);  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Preconditions.checkState(an.getType()  ==  Token.COMMA);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Preconditions.checkState(an.getType()  ==  Token.COMMA);	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    n,    ancestorType);    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	201	None	replace
886	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level),  USELESS_CODE_ERROR);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level),  USELESS_CODE_ERROR);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level),  USELESS_CODE_ERROR);	  t.getCompiler().report(JSError.make(t,    an,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	156	None	replace
887	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  isSimpleOp));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an));    	non-compiled	[CE]  class,  interface,  or  enum  expected	174	None	replace
888	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an));    	non-compiled	[CE]  class,  interface,  or  enum  expected	174	None	replace
889	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  PROTECTOR_FN));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  PROTECTOR_FN));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  DETERMINISTIC_ERROR,  PROTECTOR_FN));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
890	[BUG]  [BUGGY]  &&!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  &&!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	&&!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	168	None	replace
891	[BUG]  [BUGGY]  n  =  an.getNode();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getNode();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getNode();	  n    =    parent.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	83	None	replace
892	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	45	None	replace
893	[BUG]  [BUGGY]  gramps  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  =  an.getFirstChild();	  n    =    an.getLastChild();    Node    gramps    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	157	None	replace
894	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
895	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
896	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    }    	non-compiled	[CE]  ')'  expected	196	None	replace
897	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    continue;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	128	None	replace
898	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	128	None	replace
899	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    continue;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	128	None	replace
900	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  continue;  }  an  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  continue;  }  an  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  continue;  }  an  =  an.getFirstChild();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
901	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  an  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  an  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  continue;  }  an  =  an.getFirstChild();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	55	None	replace
902	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	replace
903	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	216	None	replace
904	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(ancestorType)||    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	33	None	replace
905	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	204	None	replace
906	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	204	None	replace
907	[BUG]  [BUGGY]  gramps  =  gramps.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  =  gramps.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  =  gramps.getFirstChild();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	69	None	replace
908	[BUG]  [BUGGY]  parent.replaceChild(an,  n);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.replaceChild(an,  n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.replaceChild(an,  n);	  n.removeChild(an);    if(n.getType()    ==    Token.COMMA)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
909	[BUG]  [BUGGY]  parent.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.removeChild(an);	  n.removeChild(an);    if(n.getType()    ==    Token.COMMA)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	108	None	replace
910	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	26	None	replace
911	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
912	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
913	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
914	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
915	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	48	None	replace
916	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isAssignmentOp(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	32	None	replace
917	[BUG]  [BUGGY]  if(!protectionSimpleOp  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSimpleOp  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSimpleOp  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!protectionSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	230	None	replace
918	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  >  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  >  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level  >  USELESS_CODE_ERROR)  {  continue;  }	  if(!isResultUsed    ||    isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	161	None	replace
919	[BUG]  [BUGGY]  if(!protectionFreeCode  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionFreeCode  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionFreeCode  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
920	[BUG]  [BUGGY]  if(protectionFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionFreeCode)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
921	[BUG]  [BUGGY]  if(!protectionFreeCode  &&  ancestorType!=  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionFreeCode  &&  ancestorType!=  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionFreeCode  &&  ancestorType!=  Token.SEMI)  {  continue;  }	  if(!protectionFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	229	None	replace
922	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  msg,  PROTECTOR_FN);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  msg,  PROTECTOR_FN);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  msg,  PROTECTOR_FN);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType),    msg);    	non-compiled	[CE]  class,  interface,  or  enum  expected	214	None	replace
923	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	205	None	replace
924	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(an);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.redeclareVarsInsideBranch(an);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
925	[BUG]  [BUGGY]  NodeUtil.checkState(an.getType()  ==  Token.COMMA);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.checkState(an.getType()  ==  Token.COMMA);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.checkState(an.getType()  ==  Token.COMMA);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
926	[BUG]  [BUGGY]  NodeUtil.checkState(an.getFirstChild().getType()  ==  Token.COMMA);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.checkState(an.getFirstChild().getType()  ==  Token.COMMA);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.checkState(an.getFirstChild().getType()  ==  Token.COMMA);	  NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	40	None	replace
927	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
928	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  USELESS_CODE_ERROR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  Level.WARNING,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    Level.WARNING,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
929	[BUG]  [BUGGY]  n.removeChild(an);  parent.replaceChild(an,  n);  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  parent.replaceChild(an,  n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  parent.replaceChild(an,  n);	  n.removeChild(an);    parent.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	227	None	replace
930	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
931	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isAssignmentOp(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	231	None	replace
932	[BUG]  [BUGGY]  NodeUtil.removeChild(an,  an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.removeChild(an,  an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.removeChild(an,  an);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(parent,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	226	None	replace
933	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.mayHaveSideEffects(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.mayHaveSideEffects(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||!NodeUtil.mayHaveSideEffects(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	163	None	replace
934	[BUG]  [BUGGY]  n.replaceChild(an,  n);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  n);	  n.replaceChild(an,    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	235	None	replace
935	[BUG]  [BUGGY]  gramps  =  gramps.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  =  gramps.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  =  gramps.getParent();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
936	[BUG]  [BUGGY]  gramps  =  n.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  =  n.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  =  n.getParent();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	66	None	replace
937	[BUG]  [BUGGY]  if(!level.isResultUsed  ||  isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!level.isResultUsed  ||  isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!level.isResultUsed  ||  isSimpleOp)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
938	[BUG]  [BUGGY]  if(!isResultUsed  &&  level.isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isResultUsed  &&  level.isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isResultUsed  &&  level.isResultUsed)  {  continue;  }	  if(!level.isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	116	None	replace
939	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)continue;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)continue;	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA)    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	191	None	replace
940	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	217	None	replace
941	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.NAME)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	217	None	replace
942	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.getFirstChild()));  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.getFirstChild()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.getFirstChild()));	  n.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
943	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an,  ancestorType;  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an,  ancestorType;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an,  ancestorType;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
944	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  as  well;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  as  well;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  as  well;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
945	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  object;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  object;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  object;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
946	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  instance;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  instance;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  associated  with  an  instance;	          junit.framework.AssertionFailedError:    There    should    be    one    warning    associated    with    an;    	non-compiled	[CE]  not  a  statement	123	None	replace
947	[BUG]  [BUGGY]  gramps  =  an.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  =  an.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  =  an.getParent();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	146	None	replace
948	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
949	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
950	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	95	None	replace
951	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp));  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an));    	non-compiled	[CE]  class,  interface,  or  enum  expected	174	None	replace
952	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  isResultUsed));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  isResultUsed));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  isResultUsed));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an));    	non-compiled	[CE]  class,  interface,  or  enum  expected	174	None	replace
953	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  message));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  message));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  message));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an));    	non-compiled	[CE]  class,  interface,  or  enum  expected	174	None	replace
954	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
955	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
956	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  [CE]  ')'  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
957	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }  [CE]  ')'  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning    	non-compiled	[CE]  ')'  expected	195	None	replace
958	[BUG]  [BUGGY]  Neighbor  an  =  an.getFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Neighbor  an  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Neighbor  an  =  an.getFirstChild();	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	199	None	replace
959	[BUG]  [BUGGY]  n.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	106	None	replace
960	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp);	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	63	None	replace
961	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
962	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	133	None	replace
963	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getString(),  ancestorType),  ancestor);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getString(),  ancestorType),  ancestor);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getString(),  ancestorType),  ancestor);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    ancestor);    	non-compiled	[CE]  class,  interface,  or  enum  expected	142	None	replace
964	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType()));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType()));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	118	None	replace
965	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	206	None	replace
966	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
967	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  an.getType()!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT  ||  an.getType()!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT  ||  an.getType()!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	67	None	replace
968	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  an.getFirstChild()  ==  n)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  an.getFirstChild()  ==  n)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  an.getFirstChild()  ==  n)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
969	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
970	[BUG]  [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	while(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  while(ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	172	None	replace
971	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	97	None	replace
972	[BUG]  [BUGGY]  Node  n  =  an.getFirstChild();  n  =  n.getLastChild();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  n  =  an.getFirstChild();  n  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  n  =  an.getFirstChild();  n  =  n.getLastChild();	  n    =    an.getFirstChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  not  a  statement	8	None	replace
973	[BUG]  [BUGGY]  n  =  an.getFirstChild();  AnnotatedByte  an  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  AnnotatedByte  an  =  n.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  AnnotatedByte  an  =  n.getLastChild();	  n    =    an.getFirstChild();    Node    an    =    n.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	136	None	replace
974	[BUG]  [BUGGY]  n  =  an.getQualifiedName();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getQualifiedName();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getQualifiedName();	  n    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	110	None	replace
975	[BUG]  [BUGGY]  if(ancestorType  ==  Token.DEFAULT  ||  ancestorType  ==  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.DEFAULT  ||  ancestorType  ==  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.DEFAULT  ||  ancestorType  ==  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
976	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	127	None	replace
977	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  two;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  two;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning,  and  there  should  be  two;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    and    there    should    be    one;    	non-compiled	[CE]  not  a  statement	15	None	replace
978	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	112	None	replace
979	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    If(ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	192	None	replace
980	[BUG]  [BUGGY]  n  =  an.getLastChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
981	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning;  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
982	[BUG]  [BUGGY]  n  =  an.getFirstChild();  junit.framework.AssertionFailedError:  there  should  be  one  warning;  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  junit.framework.AssertionFailedError:  there  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  junit.framework.AssertionFailedError:  there  should  be  one  warning;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	3	None	replace
983	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	replace
984	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	167	None	replace
985	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN,  ancestorType));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	121	None	replace
986	[BUG]  [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  not  a  statement	132	None	replace
987	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT)  {  if(ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.COMMA)    continue;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	212	None	replace
988	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  continue;  }  else  if(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.COMMA)    {    continue;    }    if(ancestorType!=    Token.COMMA)    continue;    	non-compiled	[CE]  class,  interface,  or  enum  expected	212	None	replace
989	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
990	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.CATCH)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.CATCH)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.CATCH)  {  continue;  }	  if(protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	154	None	replace
991	[BUG]  [BUGGY]  if(ancestorType  [Delete]  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  [Delete]  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  [Delete]  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType!=    Token.EXPR_RESULT    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  ')'  expected	131	None	replace
992	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(n,  an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(n,  an);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(n);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	224	None	replace
993	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	202	None	replace
994	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	202	None	replace
995	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	202	None	replace
996	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	202	None	replace
997	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	202	None	replace
998	[BUG]  [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  if(n!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    break;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	202	None	replace
999	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	220	None	replace
1000	[BUG]  [BUGGY]  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	220	None	replace
1001	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	220	None	replace
1002	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return  [CE]  'else'  without  'if'  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  'else'  without  'if'	220	None	replace
1003	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType.getString()));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType.getString()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType.getString()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
1004	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.toString()));  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.toString()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.toString()));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
1005	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString()  +  1));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString()  +  1));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getString()  +  1));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an.getString()));    	non-compiled	[CE]  class,  interface,  or  enum  expected	238	None	replace
1006	[BUG]  [BUGGY]  gramps  ==  null;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  ==  null;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  ==  null;	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	58	None	replace
1007	[BUG]  [BUGGY]  gramps  ==  parent.getFirstChild();  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  ==  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  ==  parent.getFirstChild();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	58	None	replace
1008	[BUG]  [BUGGY]  gramps  =  parent.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  =  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  =  parent.getParent();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	71	None	replace
1009	[BUG]  [BUGGY]  gramps  ==  parent.getParent();  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  ==  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  ==  parent.getParent();	  if(ancestorType!=    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	71	None	replace
1010	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
1011	[BUG]  [BUGGY]  n  =  an.getLastChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    	non-compiled	[CE]  class,  interface,  or  enum  expected	218	None	replace
1012	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  an));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  an));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  an));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
1013	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  message));  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  message));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  message));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
1014	[BUG]  [BUGGY]  Node  gramps  =  an.getParentNode();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  gramps  =  an.getParentNode();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  gramps  =  an.getParentNode();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  not  a  statement	9	None	replace
1015	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  array;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  array;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  array;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
1016	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an,  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an,  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an,	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
1017	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  object;  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  object;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  object;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
1018	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  as  well;  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  as  well;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  warning  for  an  as  well;	  junit.framework.AssertionFailedError:    There    should    be    one    warning    for    an;    	non-compiled	[CE]  not  a  statement	14	None	replace
1019	[BUG]  [BUGGY]  n  =  an.getLastChild();  Annotation  an  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Annotation  an  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Annotation  an  =  n.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
1020	[BUG]  [BUGGY]  n  =  an.getLastChild();  Annotated  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  Annotated  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  Annotated  =  an.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    n.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	18	None	replace
1021	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	77	None	replace
1022	[BUG]  [BUGGY]  n  =  an.getFirstChild();  n  =  this.parent.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  n  =  this.parent.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  n  =  this.parent.getLastChild();	  n    =    an.getLastChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
1023	[BUG]  [BUGGY]  n  =  an.getFirstChild();  n  =  child.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  n  =  child.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  n  =  child.getLastChild();	  n    =    an.getLastChild();    n    =    parent.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	21	None	replace
1024	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	232	None	replace
1025	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.cloneTree()));  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.cloneTree()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.cloneTree()));	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
1026	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.getLastChild()));  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.getLastChild()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  an.getLastChild()));	  n.removeChild(an);    if    (ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	105	None	replace
1027	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  false);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  false);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EXPR_RESULT,  ancestorType),  false);	  n.replaceChild(an,    new    Node(Token.EXPR_RESULT,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	234	None	replace
1028	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
1029	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunction(an))  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunction(an))  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunction(an))  {  continue;  }	  if(NodeUtil.isExpressionNode(n))    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	93	None	replace
1030	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.FOR,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.FOR,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.FOR,  ancestorType));	  n.addChildToFront(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	41	None	replace
1031	[BUG]  [BUGGY]  n.replaceChild(an,  ancestorType,  level);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  ancestorType,  level);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  ancestorType,  level);	  n.replaceChild(an,    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	183	None	replace
1032	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.NAME,  ancestorType));  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.NAME,  ancestorType));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.NAME,  ancestorType));	  n.replaceChild(an,    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	183	None	replace
1033	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	233	None	replace
1034	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
1035	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  isSimpleOp);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  isSimpleOp);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType),  isSimpleOp);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	125	None	replace
1036	[BUG]  [BUGGY]  n.replaceChild(an,  new  Node(Token.EMPTY));  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.replaceChild(an,  new  Node(Token.EMPTY));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.replaceChild(an,  new  Node(Token.EMPTY));	  n.removeChild(an);    if(ancestorType!=    Token.COMMA)    {    n.removeChild(an);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	151	None	replace
1037	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.getParent().removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.getParent().removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  n.getParent().removeChild(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	223	None	replace
1038	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.addChildToFront(an);  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  n.addChildToFront(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  n.addChildToFront(an);	  n.removeChild(an);    NodeUtil.copyCurrentStructure(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	223	None	replace
1039	[BUG]  [BUGGY]  n.removeChild(an);  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
1040	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
1041	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  }  [CE]  illegal  start  of  type  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  }	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
1042	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.copyCurrentStructure(an);  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)return;	  n.removeChild(an);    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	150	None	replace
1043	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  n  =  an.getFirstChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  n  =  an.getFirstChild();	  n    =    an.getFirstChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	1	None	replace
1044	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  n  =  an.getFirstChild();  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  n.getFirstChild();  n  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  n.getFirstChild();  n  =  an.getFirstChild();	  n    =    an.getFirstChild();    n    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	1	None	replace
1045	[BUG]  [BUGGY]  if(an.getType()  ==  Token.SEMI)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [CE]  cannot  find  symbol  SEMI  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.SEMI)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.SEMI)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    return;    }    	non-compiled	[CE]  cannot  find  symbol  SEMI	200	None	replace
1046	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  USELESS_CODE_ERROR),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
1047	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType(),  USELESS_CODE_ERROR),  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType(),  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType(),  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
1048	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType(),  USELESS_CODE_ERROR),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType(),  USELESS_CODE_ERROR),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an.getType(),  USELESS_CODE_ERROR),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    ancestorType),    USELESS_CODE_ERROR);    	non-compiled	[CE]  class,  interface,  or  enum  expected	102	None	replace
1049	[BUG]  [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  AnnotationUtil.getParent(an);  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  Node  gramps  =  AnnotationUtil.getParent(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  Node  gramps  =  AnnotationUtil.getParent(an);	  n    =    an.getFirstChild();    Node    gramps    =    an.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	134	None	replace
1050	[BUG]  [BUGGY]  n.getCompiler().reportCodeChange();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getCompiler().reportCodeChange();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getCompiler().reportCodeChange();	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
1051	[BUG]  [BUGGY]  gramps  =  gramps.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps  =  gramps.getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps  =  gramps.getNext();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    n.getParent();    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
1052	[BUG]  [BUGGY]  if(ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.SEMI)  {  continue;  }	  if(ancestorType)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	47	None	replace
1053	[BUG]  [BUGGY]  if(an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    n,    ancestorType);    return;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	201	None	replace
1054	[BUG]  [BUGGY]  if(an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  if(n!=  null)  {  n  =  an.getFirstChild();  }	  n    =    an.getLastChild();    if(n!=    null)    {    n    =    an.getLastChild();    }    else    {    checkSideEffects(t,    n,    level,    USELESS_CODE_ERROR,    n,    ancestorType);    return;    }    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	201	None	replace
1055	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  an.getString()));  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  an.getString()));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  an.getString()));	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  class,  interface,  or  enum  expected	50	None	replace
1056	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType);  [CE]  ')'  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level1,  USELESS_CODE_ERROR,  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  ')'  expected	50	None	replace
1057	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level1,  USELESS_CODE_ERROR,  ancestorType);  [CE]  ')'  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level1,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level1,  USELESS_CODE_ERROR,  ancestorType);	  t.getCompiler().report(JSError.make(t,    n,    level1,    USELESS_CODE_ERROR),    ancestorType);    	non-compiled	[CE]  ')'  expected	50	None	replace
1058	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  class,  interface,  or  enum  expected	76	None	replace
1059	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType),  isSimpleOp);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType),  isSimpleOp);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType),  isSimpleOp);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    msg,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	120	None	replace
1060	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.getType()  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
1061	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
1062	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
1063	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
1064	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
1065	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT)  {  n  =  an.getFirstChild();  an  =  an.getFirstChild();  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  return;  else  break;  }	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    if(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK)return;    else    break;    	non-compiled	[CE]  class,  interface,  or  enum  expected	219	None	replace
1066	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  n  ==  parent.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild()  ||  n  ==  parent.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild()  ||  n  ==  parent.getLastChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
1067	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  n  ==  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild()  ||  n  ==  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild()  ||  n  ==  parent.getFirstChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
1068	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  n!=  parent.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild()  ||  n!=  parent.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild()  ||  n!=  parent.getLastChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
1069	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  n!=  parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild()  ||  n!=  parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild()  ||  n!=  parent.getFirstChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	84	None	replace
1070	[BUG]  [BUGGY]  if(!isResultUsed  ||  ancestorType)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isResultUsed  ||  ancestorType)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isResultUsed  ||  ancestorType)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
1071	[BUG]  [BUGGY]  if(resultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(resultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(resultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
1072	[BUG]  [BUGGY]  if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
1073	[BUG]  [BUGGY]  if(!resultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!resultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!resultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	117	None	replace
1074	[BUG]  [BUGGY]  if(an.isSimpleOp)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(an.isSimpleOp)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(an.isSimpleOp)  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1075	[BUG]  [BUGGY]  if(state.isSimpleOp  ||  state.isFunctionPrototype())  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(state.isSimpleOp  ||  state.isFunctionPrototype())  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(state.isSimpleOp  ||  state.isFunctionPrototype())  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1076	[BUG]  [BUGGY]  if(state.isSimpleOp  ||  state.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(state.isSimpleOp  ||  state.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(state.isSimpleOp  ||  state.getType()  ==  Token.COMMA)  {  continue;  }	  if(state.isSimpleOp)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	228	None	replace
1077	[BUG]  [BUGGY]  n  =  an.getLastChild();  AnnotatedAn  =  an.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  AnnotatedAn  =  an.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  AnnotatedAn  =  an.getFirstChild();	  n    =    an.getLastChild();    Node    an    =    an.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	158	None	replace
1078	[BUG]  [BUGGY]  n  =  an.getLastChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  junit.framework.AssertionFailedError:  There  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
1079	[BUG]  [BUGGY]  n  =  an.getFirstChild();  junit.framework.AssertionFailedError:  there  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  junit.framework.AssertionFailedError:  there  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  junit.framework.AssertionFailedError:  there  should  be  one  warning,  but  there  should  be  one;	  n    =    an.getFirstChild();    junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	6	None	replace
1080	[BUG]  [BUGGY]  gramps!=  parent.getParent();  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  gramps!=  parent.getParent();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	gramps!=  parent.getParent();	  if(ancestorType    ==    Token.COMMA)    {    continue;    }    Node    gramps    =    parent.getParent();    	non-compiled	[CE]  not  a  statement	60	None	replace
1081	[BUG]  [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.EXPR_RESULT  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.EXPR_RESULT  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
1082	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	96	None	replace
1083	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getFirstChild());  [CE]  ')'  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getFirstChild());  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getFirstChild());	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
1084	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno());  [CE]  ')'  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno());  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno());	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  ')'  expected	215	None	replace
1085	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  It  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  It  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  It  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
1086	[BUG]  [BUGGY]  junit.framework.StripProtection:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.StripProtection:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.StripProtection:  There  should  be  one  warning  (see  org.apache.commons.jdk.internal.StripProtection)	          junit.framework.AssertionFailedError:    There    should    be    one    warning    (see    org.apache.commons.jdk.internal.StripProtection)    	non-compiled	[CE]  not  a  statement	124	None	replace
1087	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EMPTY  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EMPTY  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EMPTY  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    &&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
1088	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  an.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  an.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  &&  an.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    &&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	27	None	replace
1089	[BUG]  [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)||  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)||  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  NodeUtil.isExpressionNode(an)||  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
1090	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
1091	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  &&  n  ==  parent.getFirstChild())  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  &&  n  ==  parent.getFirstChild())  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed  &&  n  ==  parent.getFirstChild())  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
1092	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	162	None	replace
1093	[BUG]  [BUGGY]  State  state  =  n.getFirstChild();  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  State  state  =  n.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	State  state  =  n.getFirstChild();	  n    =    an.getFirstChild();    Node    an    =    an.getFirstChild();    	non-compiled	[CE]  not  a  statement	137	None	replace
1094	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  name));  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  name));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  name));	  t.getCompiler().report(JSError.make(t,    an,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  class,  interface,  or  enum  expected	175	None	replace
1095	[BUG]  [BUGGY]  n  =  an.getFirstChild();  n  =  AnnotationUtil.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  n  =  AnnotationUtil.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  n  =  AnnotationUtil.getLastChild();	  n    =    an.getFirstChild();    n    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
1096	[BUG]  [BUGGY]  if(protectionSideEffectFreeCode)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(protectionSideEffectFreeCode)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(protectionSideEffectFreeCode)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
1097	[BUG]  [BUGGY]  if(!protectionSideEffectFreeCode  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSideEffectFreeCode  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSideEffectFreeCode  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
1098	[BUG]  [BUGGY]  if(!protectionSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectionSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectionSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(!protectionSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	115	None	replace
1099	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  msg);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  msg);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType),  msg);	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
1100	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType,  USELESS_CODE_ERROR));  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType,  USELESS_CODE_ERROR));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  PROTECTOR_FN,  an,  ancestorType,  USELESS_CODE_ERROR));	  t.getCompiler().report(JSError.make(t,    n,    level,    PROTECTOR_FN,    an,    ancestorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	126	None	replace
1101	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  [CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  continue;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    }    if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  variable  n  is  already  defined  in  method  visit(NodeTraversal,Node,Node)	129	None	replace
1102	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp));  [CE]  ';'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp));  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp));	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ANCEstorType));    	non-compiled	[CE]  ';'  expected	62	None	replace
1103	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp);  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType),  isSimpleOp);	  t.getCompiler().report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR,    ANCEstorType));    	non-compiled	[CE]  class,  interface,  or  enum  expected	62	None	replace
1104	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
1105	[BUG]  [BUGGY]  if(ancestorType  ==  Token.ASSIGN)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.ASSIGN)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.ASSIGN)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
1106	[BUG]  [BUGGY]  if(ancestorType  ==  Token.SEMI)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [CE]  ')'  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.SEMI)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.SEMI)  {  if(junit.framework.AssertionFailedError:  There  should  be  one  warning;  return;  }	          if(ancestorType    ==    Token.COMMA)    {    if(junit.framework.AssertionFailedError:    There    should    be    one    warning;    return;    }    	non-compiled	[CE]  ')'  expected	194	None	replace
1107	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
1108	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
1109	[BUG]  [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
1110	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	94	None	replace
1111	[BUG]  [BUGGY]  n  =  an.getLastChild();  n  =  this.parent.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getLastChild();  n  =  this.parent.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getLastChild();  n  =  this.parent.getFirstChild();	  n    =    an.getLastChild();    n    =    parent.getFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	22	None	replace
1112	[BUG]  [BUGGY]  n  =  an.removeFirstChild()  ||  ancestorType  ==  Token.COMMA;  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.removeFirstChild()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.removeFirstChild()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.removeFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
1113	[BUG]  [BUGGY]  n  =  an.replaceChild(an.getFirstChild(),  n);  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.replaceChild(an.getFirstChild(),  n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.replaceChild(an.getFirstChild(),  n);	  n    =    an.removeFirstChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	186	None	replace
1114	[BUG]  [BUGGY]  n  =  an.getFirstChild();  AnnotatedAn  =  an.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild();  AnnotatedAn  =  an.getLastChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild();  AnnotatedAn  =  an.getLastChild();	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    	non-compiled	[CE]  class,  interface,  or  enum  expected	159	None	replace
1115	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(an!=  null  ||  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(an!=  null  ||  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(an!=  null  ||  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
1116	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(an  ==  null  ||  an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(an  ==  null  ||  an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(an  ==  null  ||  an.getType()!=  Token.COMMA)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
1117	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(an!=  null  &&  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(an!=  null  &&  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(an!=  null  &&  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
1118	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  if(an  ==  null  ||  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.getFirstChild();  if(an  ==  null  ||  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.getFirstChild();  if(an  ==  null  ||  an.getType()  ==  Token.COMMA)  {  n  =  an.getLastChild();  }	  n    =    an.getLastChild();    Node    an    =    an.getLastChild();    if(ancestorType!=    Token.COMMA)    {    n    =    an.getLastChild();    }    	non-compiled	[CE]  not  a  statement	198	None	replace
1119	[BUG]  [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(an,  n);  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  NodeUtil.removeChild(an,  n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  NodeUtil.removeChild(an,  n);	  n.removeChild(an);    NodeUtil.removeChild(n,    an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	225	None	replace
1120	[BUG]  [BUGGY]  n  =  Annotation.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  Annotation.getFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  Annotation.getFirstChild();	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	141	None	replace
1121	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  >=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  >=  Token.COMMA  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA    &&    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	173	None	replace
1122	[BUG]  [BUGGY]  if(isResultUsed  ||  ancestorType  >  USELESS_CODE_ERROR)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(isResultUsed  ||  ancestorType  >  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(isResultUsed  ||  ancestorType  >  USELESS_CODE_ERROR)  {  continue;  }	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
1123	[BUG]  [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  aughtExceptionHandler.throwAsStatement(t,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	aughtExceptionHandler.throwAsStatement(t,  ancestorType);	  if(resultUsed)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	155	None	replace
1124	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  ||  ancestorType  ==  Token.COMMA;  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getSimpleOp()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getSimpleOp()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  class,  interface,  or  enum  expected	111	None	replace
1125	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  error;  [CE]  not  a  statement  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  There  should  be  one  error;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  There  should  be  one  error;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
1126	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  there  should  be  one  warning;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  there  should  be  one  warning;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  there  should  be  one  warning;	  junit.framework.AssertionFailedError:    There    should    be    one    warning;    	non-compiled	[CE]  not  a  statement	10	None	replace
1127	[BUG]  [BUGGY]  Node  an  =  an.removeFirstChild();  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  Node  an  =  an.removeFirstChild();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	Node  an  =  an.removeFirstChild();	          Node    an    =    n.getFirstChild();    	non-compiled	[CE]  not  a  statement	98	None	replace
1128	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  there  should  be  one  warning,  but  there  should  be  one;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  junit.framework.AssertionFailedError:  there  should  be  one  warning,  but  there  should  be  one;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	junit.framework.AssertionFailedError:  there  should  be  one  warning,  but  there  should  be  one;	  junit.framework.AssertionFailedError:    There    should    be    one    warning,    but    there    should    be    one;    	non-compiled	[CE]  not  a  statement	11	None	replace
1129	[BUG]  [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getFirstChild().getNext().getNext())  {  return;  [CE]  not  a  statement  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getFirstChild().getNext().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getFirstChild().getNext().getNext()  ||  n.getFirstChild().getNext().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  not  a  statement	193	None	replace
1130	[BUG]  [BUGGY]  n.getFirstChild().getString().getNext())  {  return;  [CE]  ';'  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getFirstChild().getString().getNext())  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getFirstChild().getString().getNext())  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  ';'  expected	193	None	replace
1131	[BUG]  [BUGGY]  n.getFirstChild().getNext().getNext()  ||  ancestorType  ==  Token.COMMA)  {  return;  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.getFirstChild().getNext().getNext()  ||  ancestorType  ==  Token.COMMA)  {  return;  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.getFirstChild().getNext().getNext()  ||  ancestorType  ==  Token.COMMA)  {  return;	          n.getFirstChild().getNext().getNext())    {    return;    	non-compiled	[CE]  not  a  statement	193	None	replace
1132	[BUG]  [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.NAME)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.EXPR_RESULT)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	90	None	replace
1133	[BUG]  [BUGGY]  n.removeChild(an);  NodeUtil.replaceChild(an,  n);  [CE]  class,  interface,  or  enum  expected  [FE]          java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  NodeUtil.replaceChild(an,  n);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  NodeUtil.replaceChild(an,  n);	  n.removeChild(an);    NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	replace
1134	[BUG]  [BUGGY]  n.removeChild(an);  NodeUtil.replaceChild(an,  ancestorType);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n.removeChild(an);  NodeUtil.replaceChild(an,  ancestorType);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n.removeChild(an);  NodeUtil.replaceChild(an,  ancestorType);	  n.removeChild(an);    NodeUtil.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	222	None	replace
1135	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
1136	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!protectSideEffectFreeCode)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	113	None	replace
1137	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
1138	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
1139	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_NOT)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_NOT)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_NOT)  {  continue;  }	  if(level    ==    USELESS_CODE_ERROR)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	46	None	replace
1140	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  an.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  an.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(ancestorType!=  Token.COMMA  &&  an.getType()  ==  Token.COMMA)  {  continue;  }	  if(ancestorType!=    Token.COMMA    &&    ancestorType    ==    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	29	None	replace
1141	[BUG]  [BUGGY]  n  =  an.getFirstChild().getNext();  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  n  =  an.getFirstChild().getNext();  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	n  =  an.getFirstChild().getNext();	  n    =    an.getLastChild()    +    1;    	non-compiled	[CE]  class,  interface,  or  enum  expected	85	None	replace
1142	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(answer)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  if(NodeUtil.isExpressionNode(answer)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	if(NodeUtil.isExpressionNode(answer)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(n)||    ancestorType!=    Token.COMMA)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	91	None	replace
1143	[BUG]  [BUGGY]  NodeUtil.redeclareVarsInsideBranch(an);  n.removeChild(an);  [CE]  class,  interface,  or  enum  expected  [FE]        java.lang.RuntimeException:  INTERNAL  COMPILER  ERROR.  Please  report  this  problem.  null  Node(NUMBER  6.0):  testcode:1:22  var  a      [CONTEXT]      return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)      [BUGGY]  NodeUtil.redeclareVarsInsideBranch(an);  n.removeChild(an);  [BUGGY]      if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	1.0	115	115	1	replace	NodeUtil.redeclareVarsInsideBranch(an);  n.removeChild(an);	  n.removeChild(an);    NodeUtil.removeChild(an);    n.removeChild(an);    	non-compiled	[CE]  class,  interface,  or  enum  expected	221	None	replace
