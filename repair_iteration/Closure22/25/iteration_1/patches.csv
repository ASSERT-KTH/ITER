bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
2	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.FUNCTION)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
3	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  level  ==  Token.EXPR_RESULT)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  level  ==  Token.EXPR_RESULT)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  level  ==  Token.EXPR_RESULT)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
4	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
5	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
6	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
7	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
8	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
9	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
10	[BUG]  [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  parent  ||  parent.getType()  ==  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
11	[BUG]  [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  >=  null  ||  parent.getType()  ==  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
12	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
13	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
14	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.ASSIGN)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
15	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
16	[BUG]  [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  parent  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
17	[BUG]  [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  >=  null  ||  parent.getType()  ==  Token.ASSIGN)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
18	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.FUNCTION)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
19	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent.getType()  ==  Token.FUNCTION)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
20	[BUG]  [BUGGY]  Node  an  =  n.getParent();  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Node  an  =  n.getParent();  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Node  an  =  n.getParent();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
21	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Node  an  =  n.getFirstChild();  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Node  an  =  n.getFirstChild();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
22	[BUG]  [BUGGY]  Node  an  =  n.getLastChild();  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Node  an  =  n.getLastChild();  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Node  an  =  n.getLastChild();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
23	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION);  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
24	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Context.checkState(n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Context.checkState(n.getType()  ==  Token.EXPR_RESULT);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
25	[BUG]  [BUGGY]  Compiler  compiler  =  t.getCompiler();  [CE]  class,  interface,  or  enum  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Compiler  compiler  =  t.getCompiler();  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Compiler  compiler  =  t.getCompiler();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
26	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [CE]  class,  interface,  or  enum  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME);  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Context.checkState(n.getType()  ==  Token.NAME);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
27	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
28	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
29	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
30	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent!=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n.getType()  ==  Token.NAME  ||  parent!=  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
31	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NAME)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
32	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  level  ==  Token.EXPR_RESULT)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  level  ==  Token.EXPR_RESULT)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  level  ==  Token.EXPR_RESULT)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
33	[BUG]  [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  parent  ||  parent.getType()  ==  Token.NAME)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
34	[BUG]  [BUGGY]  if(n  ==  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null)  {	  if(parent!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
35	[BUG]  [BUGGY]  if(parent!=  null  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  level  ==  USELESS_CODE_ERROR)  {	  if(parent!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
36	[BUG]  [BUGGY]  if(parent  ==  null  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  level!=  USELESS_CODE_ERROR)  {	  if(parent!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
37	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NEW)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NEW)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NEW)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
38	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.NEW)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.NEW)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.NEW)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
39	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NEW)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.NEW)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.NEW)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
40	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.NEW)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.NEW)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.NEW)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
41	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
42	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
43	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
44	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
45	[BUG]  [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  parent  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
46	[BUG]  [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  >=  null  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
47	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.CALL)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.CALL)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
48	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.CALL)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.CALL)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
49	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.CALL)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.CALL)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.CALL)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
50	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.SCRIPT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.SCRIPT)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.SCRIPT)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
51	[BUG]  [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent.getType()  ==  Token.VAR)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
52	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.VAR)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
53	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()!=  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()!=  Token.VAR)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
54	[BUG]  [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n!=  null  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n!=  null  ||  parent.getType()  ==  Token.VAR)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
55	[BUG]  [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  parent  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  parent  ||  parent.getType()  ==  Token.VAR)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
56	[BUG]  [BUGGY]  if(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.FUNCTION)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
57	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isLiteralValue(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isLiteralValue(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isLiteralValue(parent))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
58	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isName(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isName(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isName(parent))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
59	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
60	[BUG]  [BUGGY]  if(n  ==  null  ||  parent!=  null)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  parent!=  null)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  parent!=  null)  {	  if(parent!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
61	[BUG]  [BUGGY]  Node  an  =  n.getNext();  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Node  an  =  n.getNext();  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Node  an  =  n.getNext();	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
62	[BUG]  [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.NAME)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.NAME)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  >=  null  ||  parent.getType()  ==  Token.NAME)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
63	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.ASSIGN)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
64	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NEW)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.NEW)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.NEW)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
65	[BUG]  [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  >=  null  ||  parent.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  >=  null  ||  parent.getType()  ==  Token.FUNCTION)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
66	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionAnonymous(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionAnonymous(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionAnonymous(parent))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
67	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.FUNCTION)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
68	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionDeclaration(n))  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  NodeUtil.isFunctionDeclaration(n))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
69	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
70	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETELEM)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETELEM)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.GETELEM)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
71	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
72	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionAnonymous(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionAnonymous(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isFunctionAnonymous(parent))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
73	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isLiteralValue(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isLiteralValue(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isLiteralValue(parent))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
74	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  isResultUsed)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  isResultUsed)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  isResultUsed)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
75	[BUG]  [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(n  ==  null  ||  n.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(n  ==  null  ||  n.getType()  ==  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
76	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  >=  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  >=  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  >=  Token.STRING)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
77	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
78	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
79	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  isSimpleOp)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  isSimpleOp)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NAME  ||  isSimpleOp)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
80	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  n.getString().equals( "string "))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
81	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  n.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
82	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.STRING  ||  parent.getType()  ==  Token.EXPR_RESULT)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.STRING)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
83	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.VAR)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
84	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
85	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.CALL)  {  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.GETPROP  ||  parent.getType()  ==  Token.CALL)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.GETPROP)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
86	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.CALL  &&  n.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.CALL  &&  n.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.CALL  &&  n.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.CALL)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	12	None	replace
87	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
88	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  NodeUtil.isExpressionNode(parent))  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
89	[BUG]  [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  ||  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {	  if(parent!=    null    ||    parent.getType()    ==    Token.NAME)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
90	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.VAR)  {	  if(parent!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
91	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.STRING)  {	  if(parent!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
92	[BUG]  [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent!=  null  &&  parent.getType()  ==  Token.ASSIGN)  {	  if(parent!=    null)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	11	None	replace
93	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  parent.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  parent.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
94	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.CALL)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  parent.getType()  ==  Token.CALL)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
95	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isExpressionNode(parent))  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isExpressionNode(parent))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.VAR  ||  NodeUtil.isExpressionNode(parent))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.VAR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
96	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR);  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR);  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	Context.checkState(n.getType()  ==  Token.VAR);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
97	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
98	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()!=  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()!=  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  n.getFirstChild()!=  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
99	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  NodeUtil.isFunctionDeclaration(n))  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  NodeUtil.isFunctionDeclaration(n))  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.ASSIGN  &&  NodeUtil.isFunctionDeclaration(n))  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.ASSIGN)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
100	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.VAR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.VAR)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.VAR)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
101	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.CALL)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.CALL)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.CALL)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
102	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.GETPROP)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.GETPROP)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.NEW  ||  parent.getType()  ==  Token.GETPROP)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.NEW)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	10	None	replace
103	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
104	[BUG]  [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {  return;  }    [BUGGY]  if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  [BUGGY]    return;  }    if  (parent.getType()  ==  Token.COMMA)  {  Node  gramps  =  parent.getParent();  if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	94	94	1	replace	if(parent  ==  null  ||  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {	  if(parent    ==    null    ||    parent.getType()    ==    Token.FUNCTION)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
