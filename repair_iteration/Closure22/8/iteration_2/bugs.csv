bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()!=  Token.COMMA;  [CE]  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  an.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
2	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  ==  Token.COMMA;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  ==  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  an.getType()  ==  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
3	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  >=  Token.COMMA;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  >=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  an.getType()  >=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
4	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()!=  Token.COMMA;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  an.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
5	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()  >>  Token.COMMA;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()  >>  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  an.getType()  >>  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
6	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  level!=  USELESS_CODE_ERROR;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  level!=  USELESS_CODE_ERROR;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  level!=  USELESS_CODE_ERROR;	  int    ancestorType    =    an.getType()    ||    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	2	None	replace
7	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  >=  USELESS_CODE_ERROR;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  >=  USELESS_CODE_ERROR;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  >=  USELESS_CODE_ERROR;	  int    ancestorType    =    an.getType()    ||    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	2	None	replace
8	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  >>  USELESS_CODE_ERROR;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  >>  USELESS_CODE_ERROR;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  >>  USELESS_CODE_ERROR;	  int    ancestorType    =    an.getType()    ||    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	2	None	replace
9	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  [Delete]  USELESS_CODE_ERROR;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  [Delete]  USELESS_CODE_ERROR;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  [Delete]  USELESS_CODE_ERROR;	  int    ancestorType    =    an.getType()    ||    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	2	None	replace
10	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  level  >=  USELESS_CODE_ERROR;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  level  >=  USELESS_CODE_ERROR;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  level  >=  USELESS_CODE_ERROR;	  int    ancestorType    =    an.getType()    ||    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	2	None	replace
11	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  parent.getType()!=  Token.COMMA;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  parent.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  parent.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
12	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getType()  ==  Token.COMMA;  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getType()  ==  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  parent.getType()  ==  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
13	[BUG]  [BUGGY]  int  ancestorType  =  parent.getType()  ||  an.getType()!=  Token.COMMA;  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  parent.getType()  ||  an.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  parent.getType()  ||  an.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
14	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getType()  >=  Token.COMMA;  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getType()  >=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  parent.getType()  >=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
15	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getString()!=  Token.COMMA;  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getString()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  parent.getString()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
16	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  parent.getType()  ==  Token.COMMA;  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  parent.getType()  ==  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  parent.getType()  ==  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
17	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  |  0xff;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  |  0xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  |  0xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
18	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &  1xff;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &  1xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &  1xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
19	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  -  0xff;  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  -  0xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  -  0xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
20	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  0xff;  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  0xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  0xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
21	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  <  0xff;  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  <  0xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  <  0xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
22	[BUG]  [BUGGY]  Integer  ancestorType  =  an.getType();  [CE]  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Integer  ancestorType  =  an.getType();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Integer  ancestorType  =  an.getType();	  int    ancestorType    =    an.getType()    +    1;    	non-compiled	[CE]  	1	None	replace
23	[BUG]  [BUGGY]  int  ancestorType  =  an.getChildCount()  -  1;  [CE]  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getChildCount()  -  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getChildCount()  -  1;	  int    ancestorType    =    an.getChildCount();    	non-compiled	[CE]  	8	None	replace
24	[BUG]  [BUGGY]  int  ancestorType  =  an.getChildCount()  +  1;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getChildCount()  +  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getChildCount()  +  1;	  int    ancestorType    =    an.getChildCount();    	non-compiled	[CE]  	8	None	replace
25	[BUG]  [BUGGY]  int  ancestorType  =  an.getChildCount()  -  2;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getChildCount()  -  2;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getChildCount()  -  2;	  int    ancestorType    =    an.getChildCount();    	non-compiled	[CE]  	8	None	replace
26	[BUG]  [BUGGY]  int  ancestorType  =  an.getChildCount()  *  2;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getChildCount()  *  2;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getChildCount()  *  2;	  int    ancestorType    =    an.getChildCount();    	non-compiled	[CE]  	8	None	replace
27	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  level  ==  USELESS_CODE_ERROR;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  level  ==  USELESS_CODE_ERROR;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  level  ==  USELESS_CODE_ERROR;	  int    ancestorType    =    an.getType()    ||    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  	3	None	replace
28	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  USELESS_CODE_ERROR  +  1;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  USELESS_CODE_ERROR  +  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  ==  USELESS_CODE_ERROR  +  1;	  int    ancestorType    =    an.getType()    ||    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  	3	None	replace
29	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  USELESS_CODE_ERROR,  parent.getLastChild();  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  USELESS_CODE_ERROR,  parent.getLastChild();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  ==  USELESS_CODE_ERROR,  parent.getLastChild();	  int    ancestorType    =    an.getType()    ||    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  	3	None	replace
30	[BUG]  [BUGGY]  Node  ancestorType  =  an.getFirstChild();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestorType  =  an.getFirstChild();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestorType  =  an.getFirstChild();	      	non-compiled	[CE]  	7	None	replace
31	[BUG]  [BUGGY]  Node  ancestor  =  an.getFirstChild();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestor  =  an.getFirstChild();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestor  =  an.getFirstChild();	      	non-compiled	[CE]  	7	None	replace
32	[BUG]  [BUGGY]  Node  ancestorType  =  an.getParent();  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestorType  =  an.getParent();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestorType  =  an.getParent();	      	non-compiled	[CE]  	7	None	replace
33	[BUG]  [BUGGY]  Node  ancestorType  =  an.getLastChild();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestorType  =  an.getLastChild();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestorType  =  an.getLastChild();	      	non-compiled	[CE]  	7	None	replace
34	[BUG]  [BUGGY]  Node  ancestorType  =  an.getNode();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestorType  =  an.getNode();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestorType  =  an.getNode();	      	non-compiled	[CE]  	7	None	replace
35	[BUG]  [BUGGY]  Node  ancestorType  =  an.getNext();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestorType  =  an.getNext();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestorType  =  an.getNext();	      	non-compiled	[CE]  	7	None	replace
36	[BUG]  [BUGGY]  Node  ancestorType  =  an.getChildCount();  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestorType  =  an.getChildCount();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestorType  =  an.getChildCount();	      	non-compiled	[CE]  	7	None	replace
37	[BUG]  [BUGGY]  int  ancestorType  =  an.getLastChild()  -  1;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getLastChild()  -  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getLastChild()  -  1;	  int    ancestorType    =    an.getLastChild();    	non-compiled	[CE]  	9	None	replace
38	[BUG]  [BUGGY]  int  ancestorType  =  parent.getLastChild();  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  parent.getLastChild();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  parent.getLastChild();	  int    ancestorType    =    an.getLastChild();    	non-compiled	[CE]  	9	None	replace
39	[BUG]  [BUGGY]  Integer  ancestorType  =  an.getLastChild();  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Integer  ancestorType  =  an.getLastChild();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Integer  ancestorType  =  an.getLastChild();	  int    ancestorType    =    an.getLastChild();    	non-compiled	[CE]  	9	None	replace
40	[BUG]  [BUGGY]  int  ancestorType  =  an.getLastChild()  +  1;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getLastChild()  +  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getLastChild()  +  1;	  int    ancestorType    =    an.getLastChild();    	non-compiled	[CE]  	9	None	replace
41	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()!=  Token.EXPR_RESULT;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()!=  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  an.getType()!=  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
42	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  ==  Token.EXPR_RESULT;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  ==  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  an.getType()  ==  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
43	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getType()!=  Token.EXPR_RESULT;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  parent.getType()!=  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  parent.getType()!=  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
44	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  >=  Token.EXPR_RESULT;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  an.getType()  >=  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  an.getType()  >=  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
45	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()  >=  Token.EXPR_RESULT;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()  >=  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  an.getType()  >=  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
46	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()!=  Token.EXPR_RESULT;  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()!=  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  an.getType()!=  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
47	[BUG]  [BUGGY]  int  ancestorType  =  parent.getType()  -  1;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  parent.getType()  -  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  parent.getType()  -  1;	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
48	[BUG]  [BUGGY]  float  ancestorType  =  an.getType()  -  1;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  float  ancestorType  =  an.getType()  -  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	float  ancestorType  =  an.getType()  -  1;	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
49	[BUG]  [BUGGY]  int  ancestorType  =  parent.getType();  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  parent.getType();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  parent.getType();	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
50	[BUG]  [BUGGY]  int  ancestorType  =  an.getNext();  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getNext();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getNext();	  int    ancestorType    =    an.getParent();    	non-compiled	[CE]  	10	None	replace
51	[BUG]  [BUGGY]  int  ancestorType  =  an.getRawClass();  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getRawClass();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getRawClass();	  int    ancestorType    =    an.getParent();    	non-compiled	[CE]  	10	None	replace
52	[BUG]  [BUGGY]  int  ancestorType  =  an.getSimpleEffectFreeCode();  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getSimpleEffectFreeCode();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getSimpleEffectFreeCode();	  int    ancestorType    =    an.getFirstChild();    	non-compiled	[CE]  	11	None	replace
53	[BUG]  [BUGGY]  int  ancestorType  =  an.getLeastChild();  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getLeastChild();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getLeastChild();	  int    ancestorType    =    an.getFirstChild();    	non-compiled	[CE]  	11	None	replace
54	[BUG]  [BUGGY]  int  ancestorType  =  an.getHeaderSize();  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getHeaderSize();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getHeaderSize();	  int    ancestorType    =    an.getFirstChild();    	non-compiled	[CE]  	11	None	replace
55	[BUG]  [BUGGY]  int  ancestorType  =  an.getSimpleOp();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getSimpleOp();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getSimpleOp();	  int    ancestorType    =    an.getFirstChild();    	non-compiled	[CE]  	11	None	replace
56	[BUG]  [BUGGY]  int  ancestorType  =  an.getAncestors();  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getAncestors();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getAncestors();	  int    ancestorType    =    an.getFirstChild();    	non-compiled	[CE]  	11	None	replace
57	[BUG]  [BUGGY]  int  ancestorType  =  an.getQualifiedName();  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getQualifiedName();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getQualifiedName();	  int    ancestorType    =    an.getFirstChild();    	non-compiled	[CE]  	11	None	replace
58	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()  >>  Token.EXPR_RESULT;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  &&  an.getType()  >>  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  &&  an.getType()  >>  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
59	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()  >>  Token.EXPR_RESULT;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()  >>  Token.EXPR_RESULT;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  an.getType()  >>  Token.EXPR_RESULT;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
60	[BUG]  [BUGGY]  int  ancestorType  =  an.getRawParent();  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getRawParent();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getRawParent();	  int    ancestorType    =    an.getParent();    	non-compiled	[CE]  	10	None	replace
61	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  *  2;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  *  2;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  *  2;	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
62	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  *  1;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  *  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  *  1;	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
63	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  1;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  ==  1;	  int    ancestorType    =    an.getType()    ||    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  	3	None	replace
64	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  2;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  2;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  ==  2;	  int    ancestorType    =    an.getType()    ||    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  	3	None	replace
65	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  3;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level  ==  3;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level  ==  3;	  int    ancestorType    =    an.getType()    ||    level    ==    USELESS_CODE_ERROR;    	non-compiled	[CE]  	3	None	replace
66	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  parent.getType()!=  Token.COMMA;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  parent.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  parent.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
67	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level!=  USELESS_CODE_ERROR  +  1;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level!=  USELESS_CODE_ERROR  +  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level!=  USELESS_CODE_ERROR  +  1;	  int    ancestorType    =    an.getType()    ||    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	2	None	replace
68	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  level!=  2;  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  level!=  2;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  level!=  2;	  int    ancestorType    =    an.getType()    ||    level!=    USELESS_CODE_ERROR;    	non-compiled	[CE]  	2	None	replace
69	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  -  1  ||  an.getType()!=  Token.COMMA;  [CE]  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  -  1  ||  an.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  -  1  ||  an.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
70	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()  >>  Token.COMMA;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  an.getType()  >>  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  an.getType()  >>  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
71	[BUG]  [BUGGY]  int  ancestorType  =  an.getString();  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getString();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getString();	  int    ancestorType    =    an.getLastChild();    	non-compiled	[CE]  	9	None	replace
72	[BUG]  [BUGGY]  Node  ancestorType  =  an.getAncestors();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  Node  ancestorType  =  an.getAncestors();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	Node  ancestorType  =  an.getAncestors();	      	non-compiled	[CE]  	7	None	replace
73	[BUG]  [BUGGY]  float  ancestorType  =  an.getType()  +  1;  [CE]  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  float  ancestorType  =  an.getType()  +  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	float  ancestorType  =  an.getType()  +  1;	  int    ancestorType    =    an.getType()    +    1;    	non-compiled	[CE]  	1	None	replace
74	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  <  Token.FUNCTION;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  <  Token.FUNCTION;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  <  Token.FUNCTION;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
75	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  {  0xff;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  {  0xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  {  0xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
76	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType!=  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  continue;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType!=  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  continue;  }  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	if(an.getType()  ==  Token.COMMA)  {  if(ancestorType!=  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  continue;  }	      	non-compiled	[CE]  	7	None	replace
77	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType!=  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)continue;  continue;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType!=  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)continue;  continue;  }  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	if(an.getType()  ==  Token.COMMA)  {  if(ancestorType!=  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)continue;  continue;  }	      	non-compiled	[CE]  	7	None	replace
78	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  continue;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  continue;  }  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	if(an.getType()  ==  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  continue;  }	      	non-compiled	[CE]  	7	None	replace
79	[BUG]  [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)continue;  continue;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  if(an.getType()  ==  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)continue;  continue;  }  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	if(an.getType()  ==  Token.COMMA)  {  if(ancestorType  ==  Token.COMMA)  continue;  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)continue;  continue;  }	      	non-compiled	[CE]  	7	None	replace
80	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  1;  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  1;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  1;	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
81	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  USELESS_CODE_ERROR;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  USELESS_CODE_ERROR;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  USELESS_CODE_ERROR;	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
82	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  Integer.MAX_VALUE;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  Integer.MAX_VALUE;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT?  an.getType()  :  Integer.MAX_VALUE;	  int    ancestorType    =    an.getType()    -    1;    	non-compiled	[CE]  	4	None	replace
83	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  <  Token.COMMA  ||  an.getType()!=  Token.COMMA;  [CE]  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  <  Token.COMMA  ||  an.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  <  Token.COMMA  ||  an.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.COMMA;    	non-compiled	[CE]  	12	None	replace
84	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  ||  0xff;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  ||  0xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  ||  0xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
85	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  1xff;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  1xff;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  1xff;	  int    ancestorType    =    an.getType()    &    0xff;    	non-compiled	[CE]  	5	None	replace
86	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT  ||  an.getType()!=  Token.COMMA;  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT  ||  an.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  <  Token.EXPR_RESULT  ||  an.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    an.getType()!=    Token.EXPR_RESULT;    	non-compiled	[CE]  	13	None	replace
87	[BUG]  [BUGGY]  int  ancestorType  =  an.getImmediateParentNode();  [CE]  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getImmediateParentNode();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getImmediateParentNode();	  int    ancestorType    =    an.getLastChild();    	non-compiled	[CE]  	9	None	replace
88	[BUG]  [BUGGY]  int  ancestorType  =  an.getImmediateParentPointer();  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getImmediateParentPointer();  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getImmediateParentPointer();	  int    ancestorType    =    an.getLastChild();    	non-compiled	[CE]  	9	None	replace
89	[BUG]  [BUGGY]  int  ancestorType  =  an.getType()  +  1  ||  parent.getType()!=  Token.COMMA;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {    [BUGGY]  int  ancestorType  =  an.getType()  +  1  ||  parent.getType()!=  Token.COMMA;  [BUGGY]    if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)  return;  else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	113	113	1	replace	int  ancestorType  =  an.getType()  +  1  ||  parent.getType()!=  Token.COMMA;	  int    ancestorType    =    an.getType()    ||    parent.getType()!=    Token.COMMA;    	non-compiled	[CE]  	6	None	replace
