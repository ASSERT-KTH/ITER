bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Node  gramps  =  n.getLastChild();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  n.getLastChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  n.getLastChild();	  Node    gramps    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  Node  gramps  =  n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  n.getFirstChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  n.getFirstChild();	  Node    gramps    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  Node  gramps  =  node.getLastChild();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  node.getLastChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  node.getLastChild();	  Node    gramps    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  Node  gramps  =  an.getLastChild();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  an.getLastChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  an.getLastChild();	  Node    gramps    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
5	[BUG]  [BUGGY]  Node  gramps  =  node.getNext();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  node.getNext();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  node.getNext();	  Node    gramps    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
6	[BUG]  [BUGGY]  Node  gramps  =  an.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  an.getFirstChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  an.getFirstChild();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
7	[BUG]  [BUGGY]  Node  gramps  =  this.n.getNext();  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  this.n.getNext();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  this.n.getNext();	  Node    gramps    =    n.getNext();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  Node  gramps  =(Node)n.getProp(Node.SOURCENAME_PROP);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =(Node)n.getProp(Node.SOURCENAME_PROP);  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =(Node)n.getProp(Node.SOURCENAME_PROP);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
9	[BUG]  [BUGGY]  Node  gramps  =(Node)n.getFirstChild();  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =(Node)n.getFirstChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =(Node)n.getFirstChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
10	[BUG]  [BUGGY]  Node  gramps  =(Node)n.getLastChild();  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =(Node)n.getLastChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =(Node)n.getLastChild();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
11	[BUG]  [BUGGY]  Node  gramps  =(Node)n.getParent();  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =(Node)n.getParent();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =(Node)n.getParent();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]  Node  gramps  =  node.getFirstChild();  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  node.getFirstChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  node.getFirstChild();	  Node    gramps    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
13	[BUG]  [BUGGY]  Node  gramps  =(Node)parent.getParent();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =(Node)parent.getParent();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =(Node)parent.getParent();	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
14	[BUG]  [BUGGY]  Node  gramps  =  parents.getParent();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  parents.getParent();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  parents.getParent();	  Node    gramps    =    n.getParent();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  Node  gramps  =  an.removeFirstChild();  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  an.removeFirstChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  an.removeFirstChild();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  Node  gramps  =  an.cloneTree();  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  an.cloneTree();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  an.cloneTree();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  gramps.getParent().replaceChild(parent,  n);  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  gramps.getParent().replaceChild(parent,  n);  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	gramps.getParent().replaceChild(parent,  n);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  parent);  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  gramps.getParent().replaceChild(n,  parent);  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	gramps.getParent().replaceChild(n,  parent);	      	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
19	[BUG]  [BUGGY]  Node  gramps  =  child.getParent();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  child.getParent();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  child.getParent();	  Node    gramps    =    node.getParent();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  Node  gramps  =  parent.getParentNode();  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  parent.getParentNode();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  parent.getParentNode();	  Node    gramps    =    parent.getNext();    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  Node  gramps  =  an.getParentNode();  [CE]  illegal  start  of  expression  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  an.getParentNode();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  an.getParentNode();	  Node    gramps    =    an.getNext();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  Node  gramps  =  n.getfirstChild();  [CE]  illegal  start  of  expression  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {    [BUGGY]  Node  gramps  =  n.getfirstChild();  [BUGGY]    if  (gramps.isCall()  &&  parent  ==  gramps.getFirstChild())  {  if  (n  ==  parent.getFirstChild()  &&  parent.getChildCount()  ==  2  &&  n.getNext().isName()  &&     "eval   ".equals(n.getNext().getString()))  {  return;  }  }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	102	102	1	replace	Node  gramps  =  n.getfirstChild();	  Node    gramps    =    parent.getLastChild();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
