bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleOp)  {  throw  new  IllegalStateException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
2	[BUG]  [BUGGY]  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
3	[BUG]  [BUGGY]  ||!isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
4	[BUG]  [BUGGY]  reportError(t,  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  ancestorType,  level);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
5	[BUG]  [BUGGY]  reportError(t,  n,  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  n,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  n,  ancestorType);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
6	[BUG]  [BUGGY]  reportError(t,  level,  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  level,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  level,  ancestorType);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
7	[BUG]  [BUGGY]  Context.reportError(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.reportError(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.reportError(t,  ancestorType);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
8	[BUG]  [BUGGY]  reportError(t,  an,  ancestorType);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  an,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  an,  ancestorType);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
9	[BUG]  [BUGGY]  Reporter.error(t,  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Reporter.error(t,  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Reporter.error(t,  ancestorType,  level);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
10	[BUG]  [BUGGY]  reportError(t,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  level);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
11	[BUG]  [BUGGY]  n  =  an.getFirstChild()  &&  ancestorType  ==  Token.SEMI;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  &&  ancestorType  ==  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  &&  ancestorType  ==  Token.SEMI;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.SEMI;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
12	[BUG]  [BUGGY]  n  =  an.getLastChild()  ||  ancestorType  ==  Token.SEMI;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  ||  ancestorType  ==  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  ||  ancestorType  ==  Token.SEMI;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.SEMI;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
13	[BUG]  [BUGGY]  n  =  an.getNext()  ||  ancestorType  ==  Token.SEMI;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getNext()  ||  ancestorType  ==  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getNext()  ||  ancestorType  ==  Token.SEMI;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.SEMI;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
14	[BUG]  [BUGGY]  n  =  parent.getFirstChild()  ||  ancestorType  ==  Token.SEMI;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.getFirstChild()  ||  ancestorType  ==  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.getFirstChild()  ||  ancestorType  ==  Token.SEMI;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.SEMI;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
15	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType!=  Token.SEMI;  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  ||  ancestorType!=  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  ||  ancestorType!=  Token.SEMI;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.SEMI;    	non-compiled	[CE]  	173	None	replace
16	[BUG]  [BUGGY]  n  =  an.getLastChild()  &&  ancestorType  ==  Token.SEMI;  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  &&  ancestorType  ==  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  &&  ancestorType  ==  Token.SEMI;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.SEMI;    	non-compiled	[CE]  	173	None	replace
17	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  	130	None	replace
18	[BUG]  [BUGGY]  parent!=  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  	130	None	replace
19	[BUG]  [BUGGY]  parent  ==  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  	130	None	replace
20	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  throw  new  IllegalArgumentException( " ");  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  	130	None	replace
21	[BUG]  [BUGGY]  parent!=  null  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  	130	None	replace
22	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  continue;  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  continue;	  ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  	65	None	replace
23	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  continue;  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  continue;	  ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  	65	None	replace
24	[BUG]  [BUGGY]  ||  ancestorType  >=  Token.COMMA)  {  continue;  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  >=  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  >=  Token.COMMA)  {  continue;	  ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  	65	None	replace
25	[BUG]  [BUGGY]  |  ancestorType!=  Token.COMMA)  {  continue;  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType!=  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType!=  Token.COMMA)  {  continue;	  ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  	65	None	replace
26	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  continue;  }	  ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  	65	None	replace
27	[BUG]  [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  continue;  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType  ==  Token.COMMA)  {  continue;	  ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  	65	None	replace
28	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  level);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  level);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  	168	None	replace
29	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getFirstChild(),  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  n.getFirstChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  n.getFirstChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  	168	None	replace
30	[BUG]  [BUGGY]  Throwables.throwAssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throwAssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throwAssertionFailedError(t,  an.getFirstChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  	168	None	replace
31	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
32	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getType(),  ancestorType);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getType(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getType(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
33	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getLineno(),  ancestorType);  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getLineno(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getLineno(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	168	None	replace
34	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLastChild(),  ancestorType);  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLastChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  n.getLastChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
35	[BUG]  [BUGGY]  Throwables.throwAssertionFailedError(t,  an.getLastChild(),  ancestorType);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throwAssertionFailedError(t,  an.getLastChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throwAssertionFailedError(t,  an.getLastChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
36	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getLastChild(),  ancestorType,  level);  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getLastChild(),  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getLastChild(),  ancestorType,  level);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
37	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  an.getLastChild(),  ancestorType);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  AssertionFailedError.warning(t,  an.getLastChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	AssertionFailedError.warning(t,  an.getLastChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
38	[BUG]  [BUGGY]  AssertionFailedError  t  =  an.getFirstChild();  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  AssertionFailedError  t  =  an.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	AssertionFailedError  t  =  an.getFirstChild();	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  illegal  start  of  type	169	None	replace
39	[BUG]  [BUGGY]  if(isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }	  if(isResultUsed    ||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
40	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  return;  }	  if(isResultUsed    ||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
41	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(isResultUsed    ||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
42	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(isResultUsed    ||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
43	[BUG]  [BUGGY]  if(isResultUsed  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	157	None	replace
44	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
45	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Unknown  type: "  +  ancestorType);  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException( "Unknown  type: "  +  ancestorType);	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
46	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( " ")  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( " ")  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException( " ")	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
47	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Missing  function: "  +  ancestorType);  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Missing  function: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException( "Missing  function: "  +  ancestorType);	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
48	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Unknown  type: ");  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Unknown  type: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException( "Unknown  type: ");	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
49	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Failed  to  parse: "  +  ancestorType);  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Failed  to  parse: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException( "Failed  to  parse: "  +  ancestorType);	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  type	135	None	replace
50	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
51	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
52	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
53	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
54	[BUG]  [BUGGY]  parent!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	129	None	replace
55	[BUG]  [BUGGY]  Context.checkState(ancestorType  >=  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  >=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  >=  Token.EXPR_RESULT);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
56	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
57	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
58	[BUG]  [BUGGY]  Context.checkState(an.getType()!=  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(an.getType()!=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(an.getType()!=  Token.EXPR_RESULT);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
59	[BUG]  [BUGGY]  Context.checkState(an.getType()  ==  Token.EXPR_RESULT);  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(an.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(an.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
60	[BUG]  [BUGGY]  if(isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
61	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  	13	None	replace
62	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  	13	None	replace
63	[BUG]  [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  	13	None	replace
64	[BUG]  [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  	13	None	replace
65	[BUG]  [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  	13	None	replace
66	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	121	None	replace
67	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	121	None	replace
68	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  an.getType()!=  Token.COMMA)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  an.getType()!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  an.getType()!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	121	None	replace
69	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  an.getType()!=  Token.COMMA)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  an.getType()!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  an.getType()!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	121	None	replace
70	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	121	None	replace
71	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  continue;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	121	None	replace
72	[BUG]  [BUGGY]  |  ancestorType!=  Token.COMMA)  {  return;  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType!=  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType!=  Token.COMMA)  {  return;	  |    ancestorType    ==    Token.COMMA)    {    return;    	non-compiled	[CE]  	66	None	replace
73	[BUG]  [BUGGY]  safe())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safe())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safe())  {  throw  new  IllegalStateException( " ");  }	  safely())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	111	None	replace
74	[BUG]  [BUGGY]  safeToken())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeToken())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeToken())  {  throw  new  IllegalStateException( " ");  }	  safely())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	111	None	replace
75	[BUG]  [BUGGY]  safeGet(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeGet(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeGet(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	111	None	replace
76	[BUG]  [BUGGY]  safeState())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeState())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeState())  {  throw  new  IllegalStateException( " ");  }	  safely())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	111	None	replace
77	[BUG]  [BUGGY]  safeName())  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeName())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeName())  {  throw  new  IllegalStateException( " ");  }	  safely())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	111	None	replace
78	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalStateException( " ");  }	  parent!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	109	None	replace
79	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null)  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null)  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }	  parent!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
80	[BUG]  [BUGGY]  parent!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null)  {  throw  new  IllegalStateException( " ".getMessage());  }	  parent!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	109	None	replace
81	[BUG]  [BUGGY]  n.getLastChild().getNext().getString())  {  continue;  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getLastChild().getNext().getString())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getLastChild().getNext().getString())  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  illegal  start  of  type	200	None	replace
82	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n.getFirstChild().getNext().getString()))  {  continue;  [CE]  illegal  start  of  type  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n.getFirstChild().getNext().getString()))  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n.getFirstChild().getNext().getString()))  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  illegal  start  of  type	200	None	replace
83	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  n.getFirstChild().getNext().getString())  {  continue;  [CE]  illegal  start  of  type  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  n.getFirstChild().getNext().getString())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n)&&  n.getFirstChild().getNext().getString())  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  illegal  start  of  type	200	None	replace
84	[BUG]  [BUGGY]  parent.getFirstChild().getNext().getString())  {  continue;  [CE]  illegal  start  of  type  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getFirstChild().getNext().getString())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getFirstChild().getNext().getString())  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  illegal  start  of  type	200	None	replace
85	[BUG]  [BUGGY]  n.getFirstChild().getNext().getString()  ||  ancestorType  ==  Token.COMMA)  {  continue;  [CE]  illegal  start  of  type  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getNext().getString()  ||  ancestorType  ==  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getNext().getString()  ||  ancestorType  ==  Token.COMMA)  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  illegal  start  of  type	200	None	replace
86	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.CALL)  {  return;  }  [CE]  illegal  start  of  type  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.CALL)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.CALL)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
87	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.CALL)  {  return;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.CALL)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.CALL)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
88	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.CALL)  {  return;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.CALL)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.CALL)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
89	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.CALL)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.CALL)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.CALL)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
90	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.CALL)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.CALL)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.CALL)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	171	None	replace
91	[BUG]  [BUGGY]  safeName())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeName())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeName())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
92	[BUG]  [BUGGY]  SafeTreeEffects.safeTree())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SafeTreeEffects.safeTree())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SafeTreeEffects.safeTree())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
93	[BUG]  [BUGGY]  safeToken())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeToken())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeToken())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
94	[BUG]  [BUGGY]  safeTree())  {  throw  new  IllegalArgumentException( " ".equals(ancestorType));  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTree())  {  throw  new  IllegalArgumentException( " ".equals(ancestorType));  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTree())  {  throw  new  IllegalArgumentException( " ".equals(ancestorType));  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
95	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
96	[BUG]  [BUGGY]  allowSideEffects(t,  n)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
97	[BUG]  [BUGGY]  acceptSideEffects(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  acceptSideEffects(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	acceptSideEffects(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	184	None	replace
98	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  &&    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
99	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  return;  }	  &&    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
100	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  return;  }	  &&    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
101	[BUG]  [BUGGY]  &&  NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  &&    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
102	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  &&    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	126	None	replace
103	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
104	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
105	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
106	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
107	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
108	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
109	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
110	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
111	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	107	None	replace
112	[BUG]  [BUGGY]  SafeTreeElement(n))  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SafeTreeElement(n))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SafeTreeElement(n))  {  throw  new  IllegalStateException( " ");  }	  safeTree())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
113	[BUG]  [BUGGY]  safeTree())  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTree())  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTree())  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }	  safeTree())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
114	[BUG]  [BUGGY]  SafeTree())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SafeTree())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SafeTree())  {  throw  new  IllegalStateException( " ");  }	  safeTree())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
115	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ").equals(ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ").equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ").equals(ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
116	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " "  +  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
117	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ").equals(ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ").equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ").equals(ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
118	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " "  +  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
119	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ";  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ";  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ";	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	55	None	replace
120	[BUG]  [BUGGY]  parent!=  null  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
121	[BUG]  [BUGGY]  parent!=  if(ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  if(ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  if(ancestorType!=  Token.COMMA)  {  return;  }	  if(ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
122	[BUG]  [BUGGY]  parent  ==  if(ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  if(ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  if(ancestorType!=  Token.COMMA)  {  return;  }	  if(ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
123	[BUG]  [BUGGY]  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	204	None	replace
124	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	204	None	replace
125	[BUG]  [BUGGY]  parent  ==  null  ||  isResultUsed)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||  isResultUsed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||  isResultUsed)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	204	None	replace
126	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	204	None	replace
127	[BUG]  [BUGGY]  ||  isResultUsed  ||  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  isSimpleOp)  {  return;  }	  if(isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
128	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
129	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
130	[BUG]  [BUGGY]  if(isSimpleOp  &&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  &&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  &&  isResultUsed)  {  return;  }	  if(isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
131	[BUG]  [BUGGY]  n  =  an.getLastChild()  ||  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  ||  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  ||  ancestorType!=  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType!=    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
132	[BUG]  [BUGGY]  n  =  an.getFirstChild()  &&  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  &&  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  &&  ancestorType!=  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType!=    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
133	[BUG]  [BUGGY]  n  =  parent.getFirstChild()  ||  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.getFirstChild()  ||  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.getFirstChild()  ||  ancestorType!=  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType!=    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
134	[BUG]  [BUGGY]  n  =  an.getNext()  ||  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getNext()  ||  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getNext()  ||  ancestorType!=  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType!=    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
135	[BUG]  [BUGGY]  n  =  an.getLastChild()  &&  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  &&  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  &&  ancestorType!=  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType!=    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
136	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " "  +  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
137	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ").equals(ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ").equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ").equals(ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
138	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " "  +  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
139	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ").equals(ancestorType);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ").equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ").equals(ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
140	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  ancestorType));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( " "  +  ancestorType));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
141	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  ancestorType  + ") ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( " "  +  ancestorType  + ") ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( " "  +  ancestorType  + ") ");	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
142	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType));  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
143	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType  + ") ");  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType  + ") ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType  + ") ");	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
144	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Missing  ancestor: "  +  ancestorType));  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( "Missing  ancestor: "  +  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( "Missing  ancestor: "  +  ancestorType));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
145	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
146	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
147	[BUG]  [BUGGY]  ||  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
148	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
149	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
150	[BUG]  [BUGGY]  ||  NodeUtil.isSimpleOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isSimpleOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isSimpleOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	128	None	replace
151	[BUG]  [BUGGY]  ||  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }	  if(!isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
152	[BUG]  [BUGGY]  &&  isSimpleEffectFreeCode)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  isSimpleEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  isSimpleEffectFreeCode)  {  return;  }	  if(!isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
153	[BUG]  [BUGGY]  if(!isResultUsed  &&  protectSideEffectFreeCode)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  protectSideEffectFreeCode)  {  return;  }	  if(!isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
154	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }	  if(!isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
155	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "));  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( "));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
156	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType));  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
157	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Failed  to  parse: "  +  ancestorType));  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( "Failed  to  parse: "  +  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( "Failed  to  parse: "  +  ancestorType));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
158	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Missing  ancestor  type: "  +  ancestorType));  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( "Missing  ancestor  type: "  +  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( "Missing  ancestor  type: "  +  ancestorType));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
159	[BUG]  [BUGGY]  n  =  parent.getLastChild();  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.getLastChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
160	[BUG]  [BUGGY]  Node  gramps  =  an.getFirstChild();  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.getFirstChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
161	[BUG]  [BUGGY]  Node  gramps  =  an.getLastChild();  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.getLastChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
162	[BUG]  [BUGGY]  n  =  n.getFirstChild();  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  n.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  n.getFirstChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
163	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
164	[BUG]  [BUGGY]  parent  ==  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
165	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  illegal  start  of  type  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
166	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	164	None	replace
167	[BUG]  [BUGGY]  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  type  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
168	[BUG]  [BUGGY]  ||  isSimpleOp  ||  level)  {  return;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp  ||  level)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp  ||  level)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
169	[BUG]  [BUGGY]  ||  level)  {  return;  }  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
170	[BUG]  [BUGGY]  ||  ancestorType)  {  return;  }  [CE]  illegal  start  of  type  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
171	[BUG]  [BUGGY]  ||  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  protectSideEffectFreeCode)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
172	[BUG]  [BUGGY]  parent  ==  null  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
173	[BUG]  [BUGGY]  allowSideEffectFreeCode(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(t,  ancestorType);	  if(isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	24	None	replace
174	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  +  1;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getSimpleOp()  +  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getSimpleOp()  +  1;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
175	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  ||  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getSimpleOp()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getSimpleOp()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
176	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  ||  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getSimpleOp()  ||  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getSimpleOp()  ||  ancestorType!=  Token.COMMA;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
177	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  &&  level!=  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getSimpleOp()  &&  level!=  USELESS_CODE_ERROR;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getSimpleOp()  &&  level!=  USELESS_CODE_ERROR;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
178	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  &&  level  ==  USELESS_CODE_ERROR;  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getSimpleOp()  &&  level  ==  USELESS_CODE_ERROR;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getSimpleOp()  &&  level  ==  USELESS_CODE_ERROR;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
179	[BUG]  [BUGGY]  n  =  an.getSimpleEffectFreeCode();  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getSimpleEffectFreeCode();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getSimpleEffectFreeCode();	  n    =    an.getSimpleOp();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
180	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);	  |    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
181	[BUG]  [BUGGY]  safe(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safe(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safe(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
182	[BUG]  [BUGGY]  safeTree(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTree(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTree(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
183	[BUG]  [BUGGY]  safe(ancestorType)  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safe(ancestorType)  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safe(ancestorType)  {  throw  new  IllegalStateException( " ".equals(ancestorType));  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
184	[BUG]  [BUGGY]  safeName(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeName(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeName(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
185	[BUG]  [BUGGY]  safeTree()  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTree()  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTree()  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
186	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
187	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
188	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
189	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  	114	None	replace
190	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  >=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  	114	None	replace
191	[BUG]  [BUGGY]  allowSideEffects(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n,  level,  USELESS_CODE_ERROR);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  	185	None	replace
192	[BUG]  [BUGGY]  enableSideEffects(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffects(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffects(t,  n,  level,  USELESS_CODE_ERROR);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  	185	None	replace
193	[BUG]  [BUGGY]  allowSideEffects(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n,  level,  PROTECTOR_FN);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  	185	None	replace
194	[BUG]  [BUGGY]  allowSideEffects(t,  an,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  an,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  an,  level);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  	185	None	replace
195	[BUG]  [BUGGY]  allowSideEffects(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n,  level,  DEFAULT_CODE_ERROR);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  	185	None	replace
196	[BUG]  [BUGGY]  allowSideEffects(t,  n,  level,  false);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n,  level,  false);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n,  level,  false);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  	185	None	replace
197	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  	191	None	replace
198	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  	191	None	replace
199	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  	191	None	replace
200	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  	191	None	replace
201	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(n))  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(n))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(n))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  	191	None	replace
202	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	74	None	replace
203	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	74	None	replace
204	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  return;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  return;	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	74	None	replace
205	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
206	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  }  );  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  }  );  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  }  );	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
207	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  }  );  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  }  );  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  }  );	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
208	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  ||  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  ||  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  ||  ancestorType!=  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
209	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  ||  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  ||  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  ||  ancestorType!=  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
210	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  ||  ancestorType  ==  Token.COMMA);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  ||  ancestorType  ==  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType  ||  ancestorType  ==  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
211	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isAssignmentOp(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	181	None	replace
212	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isAssignmentOp(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	181	None	replace
213	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(n)||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isAssignmentOp(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	181	None	replace
214	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isAssignmentOp(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	181	None	replace
215	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  &&    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
216	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.COMMA)  {  return;  }	  &&    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
217	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  &&    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
218	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  return;  }	  &&    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
219	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);	  Context.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
220	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);	  Context.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
221	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType);	  Context.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
222	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);	  Context.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
223	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
224	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
225	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
226	[BUG]  [BUGGY]  ||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
227	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isAssignmentOp(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isAssignmentOp(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isAssignmentOp(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
228	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  ancestorType.getMessage());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  ancestorType.getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  ancestorType.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
229	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ").printStackTrace();	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
230	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  an.getMessage());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  an.getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  an.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
231	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").getMessage());  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ").getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
232	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  >=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [CE]  illegal  start  of  type  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  >=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  >=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);	  Parchet.checkState(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  illegal  start  of  type	113	None	replace
233	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	105	None	replace
234	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
235	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
236	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
237	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
238	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(n))  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(n))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(n))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
239	[BUG]  [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
240	[BUG]  [BUGGY]  if(isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
241	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
242	[BUG]  [BUGGY]  if(isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
243	[BUG]  [BUGGY]  ||  isResultUsed)  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
244	[BUG]  [BUGGY]  if(isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
245	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
246	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
247	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
248	[BUG]  [BUGGY]  Context.report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
249	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
250	[BUG]  [BUGGY]  Context.report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
251	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
252	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
253	[BUG]  [BUGGY]  allowSideEffects(t,  n))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
254	[BUG]  [BUGGY]  enableSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
255	[BUG]  [BUGGY]  approveSideEffects(t,  ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  approveSideEffects(t,  ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	approveSideEffects(t,  ancestorType))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
256	[BUG]  [BUGGY]  |  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  |    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	101	None	replace
257	[BUG]  [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");	  |    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	101	None	replace
258	[BUG]  [BUGGY]  |  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");	  |    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	101	None	replace
259	[BUG]  [BUGGY]  if(!isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  return;  }	  if(!isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	177	None	replace
260	[BUG]  [BUGGY]  if(isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  return;  }	  if(!isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	177	None	replace
261	[BUG]  [BUGGY]  if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  if(!isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	177	None	replace
262	[BUG]  [BUGGY]  if(isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  if(!isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	177	None	replace
263	[BUG]  [BUGGY]  parent  ==  null  ||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||  isResultUsed)  {  return;  }	  parent    ==    null    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
264	[BUG]  [BUGGY]  parent  ==  null  &&  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  &&  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  &&  isSimpleOp)  {  return;  }	  parent    ==    null    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
265	[BUG]  [BUGGY]  ||  isSimpleOp)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp)  {  continue;  }	  parent    ==    null    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	20	None	replace
266	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
267	[BUG]  [BUGGY]  &&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  isResultUsed)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
268	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  isSimpleOp)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
269	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  isResultUsed)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
270	[BUG]  [BUGGY]  if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
271	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
272	[BUG]  [BUGGY]  if(isResultUsed  &&  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  protectSideEffectFreeCode)  {  return;  }	  if(isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
273	[BUG]  [BUGGY]  ||  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;	  if(isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
274	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
275	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  isResultUsed)  {  return;  }	  if(isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	158	None	replace
276	[BUG]  [BUGGY]  safeTreeIndex(ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	183	None	replace
277	[BUG]  [BUGGY]  safeTreeIndex(ancestorType),  level)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType),  level)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType),  level)  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	183	None	replace
278	[BUG]  [BUGGY]  safeTreeIndex(ancestorType)&&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType)&&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType)&&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	183	None	replace
279	[BUG]  [BUGGY]  safeNameIndex(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeNameIndex(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeNameIndex(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  	183	None	replace
280	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
281	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
282	[BUG]  [BUGGY]  ||  level)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
283	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
284	[BUG]  [BUGGY]  ||  ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  	37	None	replace
285	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	125	None	replace
286	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	125	None	replace
287	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	125	None	replace
288	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  level  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  level  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  level  ==  Token.COMMA)  {  return;  }	  NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	125	None	replace
289	[BUG]  [BUGGY]  NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isAssignmentOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	125	None	replace
290	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  	69	None	replace
291	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isSimpleOp)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  isSimpleOp)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  	69	None	replace
292	[BUG]  [BUGGY]  if(isResultUsed  &&  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  	69	None	replace
293	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  level!=  isSimpleOp)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  level!=  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  level!=  isSimpleOp)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  	69	None	replace
294	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ancestorType));  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(ancestorType));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	47	None	replace
295	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " "),  ancestorType);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	47	None	replace
296	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	47	None	replace
297	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ancestorType)?  null  : "null ");  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equals(ancestorType)?  null  : "null ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equals(ancestorType)?  null  : "null ");	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	47	None	replace
298	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(n)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	28	None	replace
299	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(n)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	28	None	replace
300	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(n)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	127	None	replace
301	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	127	None	replace
302	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	127	None	replace
303	[BUG]  [BUGGY]  NodeUtil.mayHaveSideEffects(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.mayHaveSideEffects(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.mayHaveSideEffects(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	127	None	replace
304	[BUG]  [BUGGY]  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	127	None	replace
305	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	192	None	replace
306	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	192	None	replace
307	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	192	None	replace
308	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	192	None	replace
309	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	192	None	replace
310	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	192	None	replace
311	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  	123	None	replace
312	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  ||    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
313	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  return;  }	  ||    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
314	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  continue;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.COMMA)  {  continue;	  ||    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
315	[BUG]  [BUGGY]  parent  ==  null  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  &&  ancestorType  ==  Token.COMMA)  {  return;  }	  parent    ==    null    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
316	[BUG]  [BUGGY]  parent  ==  null  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||  ancestorType!=  Token.COMMA)  {  return;  }	  parent    ==    null    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
317	[BUG]  [BUGGY]  parent  ==  null  ||  ancestorType  ==  Token.COMMA)  {  return;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||  ancestorType  ==  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||  ancestorType  ==  Token.COMMA)  {  return;	  parent    ==    null    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
318	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
319	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
320	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
321	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(n))  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(n))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(n))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
322	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
323	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
324	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
325	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
326	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
327	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
328	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
329	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  level);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
330	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  level);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
331	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
332	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
333	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException(t,  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
334	[BUG]  [BUGGY]  n.removeChild(ancestor);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.removeChild(ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.removeChild(ancestor);	  n.removeChild(an);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
335	[BUG]  [BUGGY]  n.removeChild(ancestorType);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.removeChild(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.removeChild(ancestorType);	  n.removeChild(an);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
336	[BUG]  [BUGGY]  n.replaceChild(an,  level);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.replaceChild(an,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.replaceChild(an,  level);	  n.removeChild(an);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
337	[BUG]  [BUGGY]  n.removeChild(parent);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.removeChild(parent);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.removeChild(parent);	  n.removeChild(an);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
338	[BUG]  [BUGGY]  NodeUtil.removeChild(an);  [CE]  <identifier>  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.removeChild(an);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.removeChild(an);	  n.removeChild(an);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
339	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
340	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
341	[BUG]  [BUGGY]  &&  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
342	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)&&  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
343	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
344	[BUG]  [BUGGY]  ||  isSimpleEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleEffectFreeCode)  {  return;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
345	[BUG]  [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
346	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException(ancestorType));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
347	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException( "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
348	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType,   " "));  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType,   " "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException(ancestorType,   " "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
349	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Failed  to  parse "));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Failed  to  parse "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException( "Failed  to  parse "));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
350	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Failed  to  parse: "  +  ancestorType));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException( "Failed  to  parse: "  +  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException( "Failed  to  parse: "  +  ancestorType));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
351	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  break;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  break;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  break;	  ||    ancestorType    ==    Token.COMMA)    {    break;    	non-compiled	[CE]  <identifier>  expected	195	None	replace
352	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  break;  }	  ||    ancestorType    ==    Token.COMMA)    {    break;    	non-compiled	[CE]  <identifier>  expected	195	None	replace
353	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  break;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  break;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  break;	  ||    ancestorType    ==    Token.COMMA)    {    break;    	non-compiled	[CE]  <identifier>  expected	195	None	replace
354	[BUG]  [BUGGY]  allowSideEffects(ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
355	[BUG]  [BUGGY]  acceptSideEffects(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  acceptSideEffects(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	acceptSideEffects(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
356	[BUG]  [BUGGY]  allowSideEffects(n)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(n)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(n)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
357	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  >=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  >=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  >=  Token.COMMA);	  ((    CheckSideEffects)an).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
358	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ANCEstorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ANCEstorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ANCEstorType!=  Token.COMMA);	  ((    CheckSideEffects)an).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
359	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ANCEstorType  ==  Token.COMMA);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ANCEstorType  ==  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ANCEstorType  ==  Token.COMMA);	  ((    CheckSideEffects)an).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
360	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  >>  Token.COMMA);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  >>  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  >>  Token.COMMA);	  ((    CheckSideEffects)an).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
361	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  [Delete]  Token.COMMA);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  [Delete]  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  [Delete]  Token.COMMA);	  ((    CheckSideEffects)an).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
362	[BUG]  [BUGGY]  if(!isResultUsed  &&  level!=  level)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level!=  level)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level!=  level)  {  return;  }	  if(!isResultUsed    &&    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
363	[BUG]  [BUGGY]  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
364	[BUG]  [BUGGY]  if(!isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
365	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
366	[BUG]  [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(!isResultUsed    &&    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
367	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an,  level);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(an,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(an,  level);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
368	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  level,  ancestorType);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n,  level,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n,  level,  ancestorType);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
369	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  ancestorType);  [CE]  <identifier>  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n,  ancestorType);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
370	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n,  level,  USELESS_CODE_ERROR);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
371	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  gramps);  [CE]  <identifier>  expected  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n,  gramps);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n,  gramps);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
372	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  an);  [CE]  <identifier>  expected  [FE]                                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n,  an);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n,  an);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
373	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n,  level,  gramps);  [CE]  <identifier>  expected  [FE]                                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n,  level,  gramps);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n,  level,  gramps);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
374	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  continue;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
375	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));  continue;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
376	[BUG]  [BUGGY]  n.getCompiler().reportCodeChange();  continue;  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getCompiler().reportCodeChange();  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getCompiler().reportCodeChange();  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
377	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  continue;  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
378	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
379	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
380	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
381	[BUG]  [BUGGY]  ||  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
382	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);	  |    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
383	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
384	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
385	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
386	[BUG]  [BUGGY]  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
387	[BUG]  [BUGGY]  parent.getType()!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
388	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.NAME)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
389	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.NAME)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
390	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.NAME)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
391	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.NAME)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
392	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.NAME)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.NAME)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
393	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
394	[BUG]  [BUGGY]  Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Traversal.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
395	[BUG]  [BUGGY]  Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Traverse.traverse(compiler,  n,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
396	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
397	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  DEFAULT_CODE_ERROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
398	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  MAX_RESULT);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  MAX_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  MAX_RESULT);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
399	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
400	[BUG]  [BUGGY]  acceptSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  acceptSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	acceptSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
401	[BUG]  [BUGGY]  ensureSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ensureSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	ensureSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
402	[BUG]  [BUGGY]  allowSideEffectFreeCode(n)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(n)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(n)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
403	[BUG]  [BUGGY]  ||  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
404	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  }	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
405	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".);  }	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
406	[BUG]  [BUGGY]  |  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }	  |    ancestorType!=    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	116	None	replace
407	[BUG]  [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalStateException( " ");	  |    ancestorType!=    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	116	None	replace
408	[BUG]  [BUGGY]  n  =  an.getLastChild()  ||  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
409	[BUG]  [BUGGY]  n  =  an.getLastChild()  +  1;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  +  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  +  1;	  n    =    an.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
410	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
411	[BUG]  [BUGGY]  ||  NodeUtil.isName(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isName(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isName(an))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
412	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isAssignmentOp(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isAssignmentOp(an))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
413	[BUG]  [BUGGY]  ||  NodeUtil.isSimpleOp(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isSimpleOp(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isSimpleOp(an))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
414	[BUG]  [BUGGY]  ||  NodeUtil.isVarDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isVarDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isVarDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
415	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)&&  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
416	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  return;	  if(NodeUtil.isFunctionDeclaration(an)&&    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
417	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed)  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  isResultUsed)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	161	None	replace
418	[BUG]  [BUGGY]  parent!=  null  &&  isSimpleOp)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  &&  isSimpleOp)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  &&  isSimpleOp)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	161	None	replace
419	[BUG]  [BUGGY]  if(isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	161	None	replace
420	[BUG]  [BUGGY]  if(isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	161	None	replace
421	[BUG]  [BUGGY]  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
422	[BUG]  [BUGGY]  Context.checkState(isResultUsed  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(isResultUsed  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(isResultUsed  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
423	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
424	[BUG]  [BUGGY]  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
425	[BUG]  [BUGGY]  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
426	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
427	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  break;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  else  if(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  break;  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
428	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  else  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  break;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  else  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  }  else  if(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK)  {  break;  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
429	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
430	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
431	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
432	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
433	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
434	[BUG]  [BUGGY]  parent!=  null  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  &&  ancestorType  ==  Token.COMMA)  {  return;  }	  parent!=    if(ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
435	[BUG]  [BUGGY]  parent!=  n  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  n  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  n  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  parent!=    if(ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
436	[BUG]  [BUGGY]  parent!=  null  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  parent!=    if(ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
437	[BUG]  [BUGGY]  parent  ==  n  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  n  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  n  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  parent!=    if(ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
438	[BUG]  [BUGGY]  n  =  an.getChildCount()  -  1;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getChildCount()  -  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getChildCount()  -  1;	  n    =    an.getChildCount();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
439	[BUG]  [BUGGY]  n  =  an.getChildCount()  +  1;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getChildCount()  +  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getChildCount()  +  1;	  n    =    an.getChildCount();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
440	[BUG]  [BUGGY]  n  =  an.getChildCount()  -  2;  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getChildCount()  -  2;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getChildCount()  -  2;	  n    =    an.getChildCount();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
441	[BUG]  [BUGGY]  n  =  an.getChildCount()  *  2;  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getChildCount()  *  2;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getChildCount()  *  2;	  n    =    an.getChildCount();    	non-compiled	[CE]  <identifier>  expected	6	None	replace
442	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  break;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	26	None	replace
443	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
444	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
445	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
446	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
447	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
448	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an,  ancestorType);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(an,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(an,  ancestorType);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
449	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(n);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(n);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(n);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
450	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an,  n);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(an,  n);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(an,  n);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
451	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(ancestor);  [CE]  <identifier>  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(ancestor);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
452	[BUG]  [BUGGY]  NodeUtil.copyBooleanStructure(an);  [CE]  <identifier>  expected  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyBooleanStructure(an);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyBooleanStructure(an);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
453	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  level);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
454	[BUG]  [BUGGY]  allowSideEffectFreeCode(an);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(an);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(an);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
455	[BUG]  [BUGGY]  enableSideEffectFreeCode(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffectFreeCode(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffectFreeCode(t,  ancestorType);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
456	[BUG]  [BUGGY]  ensureSideEffectFreeCode(ancestorType);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ensureSideEffectFreeCode(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	ensureSideEffectFreeCode(ancestorType);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
457	[BUG]  [BUGGY]  enableSideEffectFreeCode(ancestorType,  level);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffectFreeCode(ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffectFreeCode(ancestorType,  level);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
458	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
459	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
460	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
461	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
462	[BUG]  [BUGGY]  allowSideEffects(t,  n))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
463	[BUG]  [BUGGY]  enableSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffects(t,  ancestorType,  level))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
464	[BUG]  [BUGGY]  approveSideEffects(t,  ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  approveSideEffects(t,  ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	approveSideEffects(t,  ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
465	[BUG]  [BUGGY]  if(isSimpleOp  ||!isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||!isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||!isResultUsed)  {  return;  }	  if(!isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	178	None	replace
466	[BUG]  [BUGGY]  Node  gramps  =  an.getNext();  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.getNext();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.getNext();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
467	[BUG]  [BUGGY]  Node  gramps  =  an.getGrandparent();  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.getGrandparent();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.getGrandparent();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
468	[BUG]  [BUGGY]  Node  gramps  =  parent.getParent();  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  parent.getParent();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  parent.getParent();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
469	[BUG]  [BUGGY]  Node  gramps  =  an.getChildCount();  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.getChildCount();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.getChildCount();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
470	[BUG]  [BUGGY]  allowSideEffects(t.getModule(),  level))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t.getModule(),  level))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t.getModule(),  level))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
471	[BUG]  [BUGGY]  allowSideEffects(t.getModule(),  ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t.getModule(),  ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t.getModule(),  ancestorType))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
472	[BUG]  [BUGGY]  allowSideEffects(t,  n.getModule()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n.getModule()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n.getModule()))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
473	[BUG]  [BUGGY]  allowSideEffects(n.getModule()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(n.getModule()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(n.getModule()))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
474	[BUG]  [BUGGY]  parent!=  null  &&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  &&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  &&  isResultUsed)  {  return;  }	  parent!=    null    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
475	[BUG]  [BUGGY]  n!=  null  &&  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n!=  null  &&  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n!=  null  &&  isSimpleOp)  {  return;  }	  parent!=    null    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
476	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  isSimpleOp)  {  return;  }	  parent!=    null    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
477	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n)&&  isSimpleOp)  {  return;  }	  parent!=    null    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
478	[BUG]  [BUGGY]  parent  ==  null  &&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  &&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  &&  isResultUsed)  {  return;  }	  parent!=    null    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	23	None	replace
479	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
480	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalArgumentException( " ");	  parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
481	[BUG]  [BUGGY]  ||  isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	201	None	replace
482	[BUG]  [BUGGY]  parent  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
483	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
484	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.FUNCTION  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.FUNCTION  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.FUNCTION  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
485	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
486	[BUG]  [BUGGY]  safeGet(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeGet(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeGet(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
487	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
488	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
489	[BUG]  [BUGGY]  if(NodeUtil.isFunction(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunction(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunction(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
490	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
491	[BUG]  [BUGGY]  if(!isResultUsed  &&  level  ==  level)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level  ==  level)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level  ==  level)  {  return;  }	  if(!isResultUsed    &&    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
492	[BUG]  [BUGGY]  if(!isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
493	[BUG]  [BUGGY]  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
494	[BUG]  [BUGGY]  ||  isSimpleOp)  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp)  {  break;  }	  parent    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	154	None	replace
495	[BUG]  [BUGGY]  allowSideEffects(ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	188	None	replace
496	[BUG]  [BUGGY]  allowSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(n)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(n)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	188	None	replace
497	[BUG]  [BUGGY]  acceptSideEffects(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  acceptSideEffects(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	acceptSideEffects(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	188	None	replace
498	[BUG]  [BUGGY]  Context.checkState(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	203	None	replace
499	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	203	None	replace
500	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  return;	  if(NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
501	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
502	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
503	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
504	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".equals(ancestorType);  }	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
505	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  }	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
506	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  break;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(n))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
507	[BUG]  [BUGGY]  ||  NodeUtil.isFunction(an))  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunction(an))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunction(an))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
508	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an))  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
509	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(an))  {  break;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isAssignmentOp(an))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isAssignmentOp(an))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
510	[BUG]  [BUGGY]  ||  NodeUtil.isName(an))  {  break;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isName(an))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isName(an))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
511	[BUG]  [BUGGY]  ||  NodeUtil.isSimpleOp(an))  {  break;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isSimpleOp(an))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isSimpleOp(an))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
512	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(n))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
513	[BUG]  [BUGGY]  ||  NodeUtil.isFunction(an))  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunction(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunction(an))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
514	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isAssignmentOp(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isAssignmentOp(an))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
515	[BUG]  [BUGGY]  ||  NodeUtil.isSimpleOp(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isSimpleOp(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isSimpleOp(an))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
516	[BUG]  [BUGGY]  ||  NodeUtil.isName(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isName(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isName(an))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
517	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
518	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
519	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
520	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
521	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  parent.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  parent.getFirstChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
522	[BUG]  [BUGGY]  Node  an  =  n.getNext();  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  n.getNext();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getNext();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
523	[BUG]  [BUGGY]  Node  an  =  n.getAncestors();  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  n.getAncestors();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getAncestors();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
524	[BUG]  [BUGGY]  Node  an  =  node.getFirstChild();  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  node.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  node.getFirstChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
525	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.getFirstChild().getNext();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
526	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
527	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
528	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
529	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
530	[BUG]  [BUGGY]  parent.getType()  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()  ==  Token.COMMA)  {  return;  }	  parent.getType()!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
531	[BUG]  [BUGGY]  parent.getType()!=  Token.COMMA)  {  return;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()!=  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()!=  Token.COMMA)  {  return;	  parent.getType()!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
532	[BUG]  [BUGGY]  n.getType()!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getType()!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getType()!=  Token.COMMA)  {  return;  }	  parent.getType()!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
533	[BUG]  [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
534	[BUG]  [BUGGY]  ||!isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
535	[BUG]  [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
536	[BUG]  [BUGGY]  ||!isResultUsed)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
537	[BUG]  [BUGGY]  if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
538	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleEffectFreeCode)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
539	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.type.error ",  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.type.error ",  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.type.error ",  ancestorType,  level);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
540	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.type.error "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.type.error "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.type.error "  +  ancestorType);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
541	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.type.error "  +  ancestorType,  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.type.error "  +  ancestorType,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.type.error "  +  ancestorType,  ancestorType);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
542	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.type.error "  +  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.type.error "  +  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.type.error "  +  ancestorType,  level);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
543	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||!isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||!isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||!isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(!isResultUsed    ||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	179	None	replace
544	[BUG]  [BUGGY]  ||!isSimpleOp)  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleOp)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleOp)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
545	[BUG]  [BUGGY]  if(isSimpleOp  ||!protectSideEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||!protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||!protectSideEffectFreeCode)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
546	[BUG]  [BUGGY]  if(!isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isSimpleOp  &&  level!=  USELESS_CODE_ERROR)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
547	[BUG]  [BUGGY]  if(!isSimpleOp  &&  isResultUsed)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isSimpleOp  &&  isResultUsed)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isSimpleOp  &&  isResultUsed)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
548	[BUG]  [BUGGY]  if(!isSimpleOp  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isSimpleOp  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isSimpleOp  &&  level  ==  USELESS_CODE_ERROR)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
549	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  error: ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  error: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  error: ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
550	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "JSC_FAILED_ERROR ",  ancestor);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "JSC_FAILED_ERROR ",  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "JSC_FAILED_ERROR ",  ancestor);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
551	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "JSC_UNKNOWN_ERROR, ");  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "JSC_UNKNOWN_ERROR, ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "JSC_UNKNOWN_ERROR, ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
552	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT);	  if(isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	174	None	replace
553	[BUG]  [BUGGY]  n.addChildToFront(ancestor);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.addChildToFront(ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.addChildToFront(ancestor);	  n.addChildToFront(an);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
554	[BUG]  [BUGGY]  n.addChildToFront(ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.addChildToFront(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.addChildToFront(ancestorType);	  n.addChildToFront(an);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
555	[BUG]  [BUGGY]  n.addChildToFront(an,  level);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.addChildToFront(an,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.addChildToFront(an,  level);	  n.addChildToFront(an);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
556	[BUG]  [BUGGY]  n.addChildToBack(an);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.addChildToBack(an);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.addChildToBack(an);	  n.addChildToFront(an);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
557	[BUG]  [BUGGY]  n.addChildToFront(a);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.addChildToFront(a);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.addChildToFront(a);	  n.addChildToFront(an);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
558	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
559	[BUG]  [BUGGY]  ||  NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunction(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
560	[BUG]  [BUGGY]  ||  NodeUtil.isName(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isName(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isName(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
561	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
562	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  level)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  level)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  level)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
563	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
564	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
565	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  isSimpleOp)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
566	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  continue;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
567	[BUG]  [BUGGY]  n  =  parent.getFirstChild()  +  1;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.getFirstChild()  +  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.getFirstChild()  +  1;	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
568	[BUG]  [BUGGY]  n  =  Annotated.getFirstChild();  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  Annotated.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  Annotated.getFirstChild();	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
569	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(n))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(n))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isExpressionNode(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
570	[BUG]  [BUGGY]  ||  NodeUtil.isFunction(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunction(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunction(an))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isExpressionNode(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
571	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(ancestorType));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
572	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)||  ancestorType  ==  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)||  ancestorType  ==  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)||  ancestorType  ==  Token.EXPR_RESULT);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
573	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
574	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)||  ancestorType!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)||  ancestorType!=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)||  ancestorType!=  Token.EXPR_RESULT);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
575	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)&&  ancestorType!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)&&  ancestorType!=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)&&  ancestorType!=  Token.EXPR_RESULT);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
576	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)?  null  : "null ");  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)?  null  : "null ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ".equals(ancestorType)?  null  : "null ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
577	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  level)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
578	[BUG]  [BUGGY]  allowSideEffectFreeCode(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
579	[BUG]  [BUGGY]  acceptSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  acceptSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	acceptSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
580	[BUG]  [BUGGY]  allowSideEffectFreeCode(n)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(n)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(n)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
581	[BUG]  [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType  >=  Token.COMMA);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType  >=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)n).checkState(ancestorType  >=  Token.COMMA);	  ((    CheckSideEffects)n).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
582	[BUG]  [BUGGY]  ((  CheckSideEffects)n).checkState(ANCEstorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)n).checkState(ANCEstorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)n).checkState(ANCEstorType!=  Token.COMMA);	  ((    CheckSideEffects)n).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
583	[BUG]  [BUGGY]  ||  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
584	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
585	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
586	[BUG]  [BUGGY]  if(NodeUtil.isFunction(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunction(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunction(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
587	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
588	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  level)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	190	None	replace
589	[BUG]  [BUGGY]  allowSideEffects(t,  n)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	190	None	replace
590	[BUG]  [BUGGY]  acceptSideEffects(t,  ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  acceptSideEffects(t,  ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	acceptSideEffects(t,  ancestorType)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	190	None	replace
591	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
592	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  level,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
593	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
594	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
595	[BUG]  [BUGGY]  t.getCompiler().reportCodeChange(level);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().reportCodeChange(level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().reportCodeChange(level);	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
596	[BUG]  [BUGGY]  n  =  an.removeLastChild();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.removeLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.removeLastChild();	  n    =    an.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
597	[BUG]  [BUGGY]  n  =  parent.removeFirstChild();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.removeFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.removeFirstChild();	  n    =    an.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
598	[BUG]  [BUGGY]  n  =  an.replaceChild(n,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.replaceChild(n,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.replaceChild(n,  level);	  n    =    an.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
599	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA)continue;  if(ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
600	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType  ==  Token.BLOCK)  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA)continue;  if(ancestorType  ==  Token.BLOCK)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA)continue;  if(ancestorType  ==  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
601	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
602	[BUG]  [BUGGY]  n  =  an.getFirstChild()  &&  n  ==  parent.getLastChild();  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  &&  n  ==  parent.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  &&  n  ==  parent.getLastChild();	  n    =    an.getFirstChild()    ||    n    ==    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
603	[BUG]  [BUGGY]  n  =  parent.getFirstChild()  ||  n  ==  parent.getLastChild();  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.getFirstChild()  ||  n  ==  parent.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.getFirstChild()  ||  n  ==  parent.getLastChild();	  n    =    an.getFirstChild()    ||    n    ==    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
604	[BUG]  [BUGGY]  n  =  parent.getFirstChild()  ||  n  ==  an.getLastChild();  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.getFirstChild()  ||  n  ==  an.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.getFirstChild()  ||  n  ==  an.getLastChild();	  n    =    an.getFirstChild()    ||    n    ==    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
605	[BUG]  [BUGGY]  n  =  an.getLastChild()  ||  n  ==  parent.getFirstChild();  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  ||  n  ==  parent.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  ||  n  ==  parent.getFirstChild();	  n    =    an.getFirstChild()    ||    n    ==    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
606	[BUG]  [BUGGY]  n  =  an.getFirstChild()  &&  n!=  parent.getLastChild();  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  &&  n!=  parent.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  &&  n!=  parent.getLastChild();	  n    =    an.getFirstChild()    ||    n    ==    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
607	[BUG]  [BUGGY]  n  =  an.getFirstChild()  ||  n!=  parent.getLastChild();  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  ||  n!=  parent.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  ||  n!=  parent.getLastChild();	  n    =    an.getFirstChild()    ||    n    ==    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
608	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isSimpleOp    ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
609	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(isSimpleOp    ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
610	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  level,  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  level,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  level,  ancestorType);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
611	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
612	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR,  level);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
613	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  PROTECTOR_FN);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
614	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  isResultUsed);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  isResultUsed);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  isResultUsed);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
615	[BUG]  [BUGGY]  safe(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safe(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safe(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
616	[BUG]  [BUGGY]  safeTree(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTree(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTree(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
617	[BUG]  [BUGGY]  safeState(ancestorType  ==  Token.EXPR_RESULT))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeState(ancestorType  ==  Token.EXPR_RESULT))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeState(ancestorType  ==  Token.EXPR_RESULT))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
618	[BUG]  [BUGGY]  safeAccess(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeAccess(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeAccess(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
619	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
620	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
621	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(n))  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(n))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(n))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
622	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
623	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(ancestorType))  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(ancestorType))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(ancestorType))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
624	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
625	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
626	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
627	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
628	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
629	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  ancestorType,  level);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
630	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  level,  ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  level,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  level,  ancestorType);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
631	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  ancestorType,  level);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
632	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  ancestorType);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
633	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  ancestorType);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
634	[BUG]  [BUGGY]  new  AssertionFailedError(t,  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  AssertionFailedError(t,  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  AssertionFailedError(t,  ancestorType,  level);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
635	[BUG]  [BUGGY]  ||  isResultUsed  ||  level)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  level)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  level)  {  return;  }	  ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
636	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
637	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.SEMI)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
638	[BUG]  [BUGGY]  if(ancestorType  ==  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
639	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.SEMI)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
640	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalArgumentException( " ");  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
641	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
642	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
643	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
644	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
645	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
646	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA,  level);	  ((    CheckSideEffects)an).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
647	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA,  level);	  ((    CheckSideEffects)an).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
648	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  level);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
649	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
650	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
651	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT,  level);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
652	[BUG]  [BUGGY]  if(isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
653	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
654	[BUG]  [BUGGY]  if(isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
655	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
656	[BUG]  [BUGGY]  n.getLastChild().getNext().getNext())  {  break;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getLastChild().getNext().getNext())  {  break;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getLastChild().getNext().getNext())  {  break;	  n.getFirstChild().getNext().getNext())    {    break;    	non-compiled	[CE]  <identifier>  expected	198	None	replace
657	[BUG]  [BUGGY]  parent.getFirstChild().getNext().getNext())  {  break;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getFirstChild().getNext().getNext())  {  break;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getFirstChild().getNext().getNext())  {  break;	  n.getFirstChild().getNext().getNext())    {    break;    	non-compiled	[CE]  <identifier>  expected	198	None	replace
658	[BUG]  [BUGGY]  n.getLastChild().getNext().getNext())  {  continue;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getLastChild().getNext().getNext())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getLastChild().getNext().getNext())  {  continue;	  n.getFirstChild().getNext().getNext())    {    break;    	non-compiled	[CE]  <identifier>  expected	198	None	replace
659	[BUG]  [BUGGY]  node.getFirstChild().getNext().getNext())  {  break;  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  node.getFirstChild().getNext().getNext())  {  break;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	node.getFirstChild().getNext().getNext())  {  break;	  n.getFirstChild().getNext().getNext())    {    break;    	non-compiled	[CE]  <identifier>  expected	198	None	replace
660	[BUG]  [BUGGY]  ||!protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!protectSideEffectFreeCode)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
661	[BUG]  [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
662	[BUG]  [BUGGY]  if(isResultUsed  ||!protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||!protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||!protectSideEffectFreeCode)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
663	[BUG]  [BUGGY]  if(isResultUsed  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
664	[BUG]  [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
665	[BUG]  [BUGGY]  if(!isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isSimpleOp)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
666	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
667	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
668	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection());  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  stripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  stripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
669	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
670	[BUG]  [BUGGY]  Context.traverse(compiler,  n,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.traverse(compiler,  n,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.traverse(compiler,  n,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
671	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
672	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(n)||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
673	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
674	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
675	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
676	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType.getMessage());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType.getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " "  +  ancestorType.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
677	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  an.getMessage());  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  an.getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " "  +  an.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
678	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ").printStackTrace();	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
679	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage());  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ").getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
680	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage();  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ").getMessage();	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
681	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.identifier ",  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.identifier ",  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.identifier ",  ancestorType,  level);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
682	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.identifier. ",  ancestorType);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.identifier. ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.identifier. ",  ancestorType);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
683	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.identifier "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.identifier "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.identifier "  +  ancestorType);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
684	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.identifier, ",  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.identifier, ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.identifier, ",  ancestorType);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
685	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.identifier "  +  ancestorType,  ancestor);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.identifier "  +  ancestorType,  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.identifier "  +  ancestorType,  ancestor);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
686	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(protectSideEffectFreeCode  ||  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(protectSideEffectFreeCode  ||  isSimpleOp)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
687	[BUG]  [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
688	[BUG]  [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
689	[BUG]  [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
690	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(protectSideEffectFreeCode  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(protectSideEffectFreeCode  ||  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
691	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
692	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(n)||  ancestorType  ==  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
693	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
694	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
695	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalArgumentException( " ");  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
696	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.SEMI)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
697	[BUG]  [BUGGY]  parent  ==  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
698	[BUG]  [BUGGY]  parent!=  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
699	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
700	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
701	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
702	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
703	[BUG]  [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType  ==  Token.COMMA,  level);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType  ==  Token.COMMA,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)n).checkState(ancestorType  ==  Token.COMMA,  level);	  ((    CheckSideEffects)n).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
704	[BUG]  [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType!=  Token.COMMA,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType!=  Token.COMMA,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)n).checkState(ancestorType!=  Token.COMMA,  level);	  ((    CheckSideEffects)n).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
705	[BUG]  [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)n).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)n).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  USELESS_CODE_ERROR);	  ((    CheckSideEffects)n).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
706	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
707	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
708	[BUG]  [BUGGY]  ||  level)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
709	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
710	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
711	[BUG]  [BUGGY]  Node  an  =  parent.getLastChild();  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  parent.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  parent.getLastChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
712	[BUG]  [BUGGY]  Node  an  =  node.getLastChild();  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  node.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  node.getLastChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
713	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".equals(ancestorType);  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
714	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ".);  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	53	None	replace
715	[BUG]  [BUGGY]  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( "Unknown  type: "  +  ancestorType);	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
716	[BUG]  [BUGGY]  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( " "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( " "));	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
717	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( "Unexpected  level: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( "Unexpected  level: "  +  ancestorType);	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
718	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( "Failed  to  parse: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( "Failed  to  parse: "  +  ancestorType);	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
719	[BUG]  [BUGGY]  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( " ")  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( " ")	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
720	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  parse: "  +  an.getString());  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( "Failed  to  parse: "  +  an.getString());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( "Failed  to  parse: "  +  an.getString());	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
721	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  n.getFirstChild().getNext().getNext())  {  continue;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n)&&  n.getFirstChild().getNext().getNext())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n)&&  n.getFirstChild().getNext().getNext())  {  continue;	  n.getFirstChild().getNext().getNext())    {    continue;    	non-compiled	[CE]  <identifier>  expected	197	None	replace
722	[BUG]  [BUGGY]  parent.getFirstChild().getNext().getNext())  {  continue;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getFirstChild().getNext().getNext())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getFirstChild().getNext().getNext())  {  continue;	  n.getFirstChild().getNext().getNext())    {    continue;    	non-compiled	[CE]  <identifier>  expected	197	None	replace
723	[BUG]  [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getLastChild().getNext().getNext())  {  continue;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getLastChild().getNext().getNext())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getNext().getNext()  ||  n.getLastChild().getNext().getNext())  {  continue;	  n.getFirstChild().getNext().getNext())    {    continue;    	non-compiled	[CE]  <identifier>  expected	197	None	replace
724	[BUG]  [BUGGY]  node.getFirstChild().getNext().getNext())  {  continue;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  node.getFirstChild().getNext().getNext())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	node.getFirstChild().getNext().getNext())  {  continue;	  n.getFirstChild().getNext().getNext())    {    continue;    	non-compiled	[CE]  <identifier>  expected	197	None	replace
725	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(n))  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(n))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(n))  {  return;  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
726	[BUG]  [BUGGY]  n  =  an.getFirstChild()  &&  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  &&  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  &&  ancestorType  ==  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	143	None	replace
727	[BUG]  [BUGGY]  n  =  parent.getFirstChild()  ||  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  parent.getFirstChild()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  parent.getFirstChild()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	143	None	replace
728	[BUG]  [BUGGY]  n  =  an.getNext()  ||  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getNext()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getNext()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	143	None	replace
729	[BUG]  [BUGGY]  n  =  an.getLastChild()  &&  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  &&  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  &&  ancestorType  ==  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	143	None	replace
730	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  level);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
731	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType  + "  isSimpleOp ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType  + "  isSimpleOp ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType  + "  isSimpleOp ");	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
732	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType  + ";  expected  level: "  +  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType  + ";  expected  level: "  +  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType  + ";  expected  level: "  +  level);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
733	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestortype);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestortype);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestortype);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
734	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestor);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestor);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
735	[BUG]  [BUGGY]  n  =  an.getNext()  +  1;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getNext()  +  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getNext()  +  1;	  n    =    an.getNext();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
736	[BUG]  [BUGGY]  n  =  an.getParent();  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getParent();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getParent();	  n    =    an.getNext();    	non-compiled	[CE]  <identifier>  expected	3	None	replace
737	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.COMMA);	  SecurityContext.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
738	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  >=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  >=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  >=  Token.EXPR_RESULT);	  SecurityContext.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
739	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);	  SecurityContext.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
740	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  >>  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  >>  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  >>  Token.EXPR_RESULT);	  SecurityContext.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
741	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   ".   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
742	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
743	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalStateException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(n))  {  throw  new  IllegalStateException( " ");	  parent    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
744	[BUG]  [BUGGY]  ||!isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  level);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  level);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  level);  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(ancestorType);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
745	[BUG]  [BUGGY]  ||  isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType);  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(ancestorType);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
746	[BUG]  [BUGGY]  ||  isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  level);  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  level);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  level);  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(ancestorType);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
747	[BUG]  [BUGGY]  ||!isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleOp)  {  return;  }	  ||!isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
748	[BUG]  [BUGGY]  ||!isResultUsed)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed)  {  throw  new  IllegalArgumentException( " ");	  ||!isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
749	[BUG]  [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleOp)  {  throw  new  IllegalArgumentException( " ");	  ||!isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
750	[BUG]  [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  if(!isResultUsed    &&    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
751	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
752	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  msg);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  msg);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  level,  msg);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
753	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level  -  1);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level  -  1);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  level  -  1);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
754	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  MAX_RESULT);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  MAX_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  level,  MAX_RESULT);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
755	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  gramps);  [CE]  <identifier>  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  gramps);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  level,  gramps);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
756	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
757	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
758	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  throw  new  IllegalArgumentException( " ");  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
759	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
760	[BUG]  [BUGGY]  if(ancestorType  ==  Token.FOR  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.FOR  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.FOR  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
761	[BUG]  [BUGGY]  parent  ==  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
762	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException( "Unknown  type: "  +  ancestorType);	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
763	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException( " ")  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException( " ")	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
764	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Missing  function: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Missing  function: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException( "Missing  function: "  +  ancestorType);	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
765	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unknown  type: ");  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unknown  type: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException( "Unknown  type: ");	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
766	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unexpected  level: "  +  level);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unexpected  level: "  +  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException( "Unexpected  level: "  +  level);	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
767	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.CATCH)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.CATCH)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.CATCH)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
768	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.CATCH)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.CATCH)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.CATCH)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
769	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.CATCH)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.CATCH)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.CATCH)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
770	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.CATCH)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.CATCH)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.CATCH)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
771	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH)  {  throw  new  IllegalArgumentException( " ");  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
772	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.CATCH)  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.CATCH)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.CATCH)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
773	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
774	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  level);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  level);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
775	[BUG]  [BUGGY]  Throwables.weirdString( "Unknown  type: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "Unknown  type: "  +  ancestorType);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
776	[BUG]  [BUGGY]  Throwables.throwException( "Unknown  type: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throwException( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throwException( "Unknown  type: "  +  ancestorType);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
777	[BUG]  [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");	  |    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	101	None	replace
778	[BUG]  [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
779	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
780	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
781	[BUG]  [BUGGY]  allowSideEffects(t,  an))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  an))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  an))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
782	[BUG]  [BUGGY]  ensureSideEffects(t,  ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ensureSideEffects(t,  ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	ensureSideEffects(t,  ancestorType))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	186	None	replace
783	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(ancestorType);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(ancestorType);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
784	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an,  gramps);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(an,  gramps);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(an,  gramps);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
785	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  ancestorType);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( " "),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( " "),  ancestorType);	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
786	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ANCESTOR_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ANCESTOR_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ANCESTOR_ERROR,  ancestorType));	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
787	[BUG]  [BUGGY]  parent!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
788	[BUG]  [BUGGY]  n  =  an.getFirstChild()  +  n  ==  parent.getLastChild();  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  +  n  ==  parent.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  +  n  ==  parent.getLastChild();	  n    =    an.getFirstChild()    ||    n    ==    parent.getLastChild();    	non-compiled	[CE]  <identifier>  expected	145	None	replace
789	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
790	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
791	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
792	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
793	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
794	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError( " ");	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	52	None	replace
795	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(!isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	177	None	replace
796	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
797	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
798	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
799	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
800	[BUG]  [BUGGY]  Node  an  =  n!=  null?  parent.getFirstChild()  :  n.getLastChild();  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  n!=  null?  parent.getFirstChild()  :  n.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n!=  null?  parent.getFirstChild()  :  n.getLastChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
801	[BUG]  [BUGGY]  Node  an  =  n!=  null?  parent.getLastChild()  :  n;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  n!=  null?  parent.getLastChild()  :  n;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n!=  null?  parent.getLastChild()  :  n;	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
802	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  encystorType,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  encystorType,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  encystorType,  level,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
803	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  CheckLevel(level),  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  CheckLevel(level),  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  new  CheckLevel(level),  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
804	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  USELESS_CODE_ERROR);	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
805	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException(ANCESTOR_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException(ANCESTOR_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException(ANCESTOR_ERROR,  ancestorType));	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
806	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType),  ancestor);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType),  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException(ancestorType),  ancestor);	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
807	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ancestorType);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException(ancestorType);	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	135	None	replace
808	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR,  ancestorType);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR,  ancestorType);	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	135	None	replace
809	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR);	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	135	None	replace
810	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ancestorType, " ");  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ancestorType, " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException(ancestorType, " ");	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	135	None	replace
811	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR, " ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR, " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException(ANCESTOR_ERROR, " ");	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	135	None	replace
812	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  continue;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
813	[BUG]  [BUGGY]  t.getCompiler().report(ancestorType);  continue;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(ancestorType);  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(ancestorType);  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
814	[BUG]  [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ");	  |    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	59	None	replace
815	[BUG]  [BUGGY]  ||  NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isAssignmentOp(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	181	None	replace
816	[BUG]  [BUGGY]  &&  NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isAssignmentOp(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	181	None	replace
817	[BUG]  [BUGGY]  if(NodeUtil.isName(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isName(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isName(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isAssignmentOp(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	181	None	replace
818	[BUG]  [BUGGY]  NodeUtil.removeChild(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.removeChild(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.removeChild(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
819	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(ancestorType))  {  break;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(ancestorType))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(ancestorType))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
820	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(parent))  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(parent))  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(parent))  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
821	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.COMMA)  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
822	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
823	[BUG]  [BUGGY]  if(isResultUsed  ||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  NodeUtil.isFunctionDeclaration(an)||  isResultUsed)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
824	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
825	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
826	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  t.getModule())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  t.getModule())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  t.getModule())  {  throw  new  IllegalStateException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
827	[BUG]  [BUGGY]  enableSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffectFreeCode(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	110	None	replace
828	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
829	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  break;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  break;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
830	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
831	[BUG]  [BUGGY]  ||  protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
832	[BUG]  [BUGGY]  ||  isResultUsed,  level)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed,  level)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed,  level)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
833	[BUG]  [BUGGY]  reportError(t,  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  ancestorType,  USELESS_CODE_ERROR);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
834	[BUG]  [BUGGY]  reportError(t,  an.getType(),  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  an.getType(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  an.getType(),  ancestorType);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
835	[BUG]  [BUGGY]  reportError(t,  ancestorType,  UNKNOWN_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  ancestorType,  UNKNOWN_EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  ancestorType,  UNKNOWN_EXPR_RESULT);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
836	[BUG]  [BUGGY]  reportError(t,  ancestorType,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  ancestorType,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  ancestorType,  PROTECTOR_FN);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
837	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
838	[BUG]  [BUGGY]  if(isResultUsed  ||  isSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSideEffectFreeCode)  {  return;  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
839	[BUG]  [BUGGY]  n  =  an.getLastChild()  ||  ancestorType  >>  Token.COMMA;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getLastChild()  ||  ancestorType  >>  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getLastChild()  ||  ancestorType  >>  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType!=    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	144	None	replace
840	[BUG]  [BUGGY]  parent!=  null  ||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  ||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  ||  isResultUsed)  {  return;  }	  parent!=    null    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
841	[BUG]  [BUGGY]  parent  ==  null  ||  ancestorType)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||  ancestorType)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||  ancestorType)  {  return;  }	  parent!=    null    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	22	None	replace
842	[BUG]  [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.identifier ",  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.identifier ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(PROTECTOR_FN, "msg.bad.identifier ",  ancestorType);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
843	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.identifier ",  ancestorType,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.identifier ",  ancestorType,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.identifier ",  ancestorType,  PROTECTOR_FN);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
844	[BUG]  [BUGGY]  Throwables.weirdString(proTECTOR_FN, "msg.bad.identifier ",  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(proTECTOR_FN, "msg.bad.identifier ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(proTECTOR_FN, "msg.bad.identifier ",  ancestorType);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
845	[BUG]  [BUGGY]  SecurityContext.checkState(an.getType()!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(an.getType()!=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(an.getType()!=  Token.EXPR_RESULT);	  SecurityContext.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	137	None	replace
846	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
847	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
848	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  n);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  n);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  n);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
849	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  n,  level);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  n,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  n,  level);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
850	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  ancestorType);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  ancestorType);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
851	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  this.level);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  this.level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  this.level);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
852	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  CheckLevel(ancestorType,  level));  [CE]  <identifier>  expected  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  new  CheckLevel(ancestorType,  level));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  new  CheckLevel(ancestorType,  level));	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
853	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	60	None	replace
854	[BUG]  [BUGGY]  safeTreeIndex(ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	183	None	replace
855	[BUG]  [BUGGY]  safeTreeIndex(ancestorType,  n))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType,  n))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType,  n))  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	183	None	replace
856	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  ancestorType);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  ancestorType);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
857	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckSideEffects());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckSideEffects());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
858	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  this,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
859	[BUG]  [BUGGY]  safeLog())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeLog())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeLog())  {  throw  new  IllegalStateException( " ");  }	  safely())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	111	None	replace
860	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType  ==  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
861	[BUG]  [BUGGY]  SafeTreeElement(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SafeTreeElement(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SafeTreeElement(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
862	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL)  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	171	None	replace
863	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	171	None	replace
864	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	171	None	replace
865	[BUG]  [BUGGY]  &&  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunction(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  &&    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	126	None	replace
866	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
867	[BUG]  [BUGGY]  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
868	[BUG]  [BUGGY]  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
869	[BUG]  [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
870	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_SUPER)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_SUPER)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_SUPER)  {  return;  }	  if(isResultUsed    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
871	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
872	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
873	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isAssignmentOp(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isAssignmentOp(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isAssignmentOp(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
874	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	192	None	replace
875	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	192	None	replace
876	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	192	None	replace
877	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(ancestorType.getMessage());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException(ancestorType.getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException(ancestorType.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
878	[BUG]  [BUGGY]  NodeUtil.isStatement(an))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isStatement(an))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isStatement(an))  {  throw  new  IllegalStateException( " ");  }	  parent!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
879	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  parent!=  null)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  parent!=  null)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)||  parent!=  null)  {  throw  new  IllegalStateException( " ");  }	  parent!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
880	[BUG]  [BUGGY]  ParchetState.checkState(ancestorType  ==  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ParchetState.checkState(ancestorType  ==  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	ParchetState.checkState(ancestorType  ==  Token.EXPR_RESULT);	  if(isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	174	None	replace
881	[BUG]  [BUGGY]  ParchetState.checkState(ancestorType!=  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ParchetState.checkState(ancestorType!=  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	ParchetState.checkState(ancestorType!=  Token.EXPR_RESULT);	  if(isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	174	None	replace
882	[BUG]  [BUGGY]  (parent.getType()  ==  Token.COMMA))  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (parent.getType()  ==  Token.COMMA))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(parent.getType()  ==  Token.COMMA))  {  return;  }	  parent.getType()!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
883	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an))  {  return;  }	  parent.getType()!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
884	[BUG]  [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");	  |    ancestorType!=    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	116	None	replace
885	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
886	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleOp)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
887	[BUG]  [BUGGY]  if(isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
888	[BUG]  [BUGGY]  if(isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
889	[BUG]  [BUGGY]  if(isResultUsed  ||  isSideEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSideEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSideEffectFreeCode)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
890	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  break;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  break;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
891	[BUG]  [BUGGY]  safely(ancestorType  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safely(ancestorType  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safely(ancestorType  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
892	[BUG]  [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safely())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safely())  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
893	[BUG]  [BUGGY]  safely(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safely(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safely(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
894	[BUG]  [BUGGY]  n.getFirstChild().getParent().getNext())  {  continue;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getParent().getNext())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getParent().getNext())  {  continue;	  n.getFirstChild().getNext().getNext())    {    continue;    	non-compiled	[CE]  <identifier>  expected	197	None	replace
895	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  an.getType()!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  an.getType()!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  an.getType()!=  Token.BLOCK);	  Parchet.checkState(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
896	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  >=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  >=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  ancestorType  >=  Token.BLOCK);	  Parchet.checkState(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
897	[BUG]  [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  return;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  >>  Token.COMMA)  {  return;	  |    ancestorType    ==    Token.COMMA)    {    return;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
898	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  return;  }	  |    ancestorType    ==    Token.COMMA)    {    return;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
899	[BUG]  [BUGGY]  |  ancestorType  >=  Token.COMMA)  {  return;  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  >=  Token.COMMA)  {  return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  >=  Token.COMMA)  {  return;	  |    ancestorType    ==    Token.COMMA)    {    return;    	non-compiled	[CE]  <identifier>  expected	66	None	replace
900	[BUG]  [BUGGY]  Node  gramps  =  an.getOwnerDocument();  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.getOwnerDocument();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.getOwnerDocument();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
901	[BUG]  [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  >>  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  |    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	180	None	replace
902	[BUG]  [BUGGY]  |  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  >=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  |    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	180	None	replace
903	[BUG]  [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  |    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	180	None	replace
904	[BUG]  [BUGGY]  safeLog(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeLog(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeLog(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
905	[BUG]  [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");	  |    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	54	None	replace
906	[BUG]  [BUGGY]  ||  NodeUtil.isGetProp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isGetProp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isGetProp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
907	[BUG]  [BUGGY]  ||  NodeUtil.isAncestorOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isAncestorOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isAncestorOp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
908	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	190	None	replace
909	[BUG]  [BUGGY]  allowSideEffects(t,  an)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  an)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  an)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	190	None	replace
910	[BUG]  [BUGGY]  if(ancestorType!=  Token.NAME)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.NAME)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.NAME)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.NAME)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	108	None	replace
911	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  t);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  t);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  t);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
912	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  n);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  n);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  n);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
913	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  t.getModule());  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  t.getModule());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  t.getModule());	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
914	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  gramps);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  gramps);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  gramps);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
915	[BUG]  [BUGGY]  if(NodeUtil.isName(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isName(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isName(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
916	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
917	[BUG]  [BUGGY]  allowSideEffects(ancestorType,  t.getModule())  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(ancestorType,  t.getModule())  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(ancestorType,  t.getModule())  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	188	None	replace
918	[BUG]  [BUGGY]  enableSideEffects(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffects(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffects(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	188	None	replace
919	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ";  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ";  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ";	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   "   ".equals(ancestorType);    	non-compiled	[CE]  <identifier>  expected	61	None	replace
920	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  ancestorType,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
921	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  ancestorType,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
922	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(ancestorType,  ancestor);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(ancestorType,  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(ancestorType,  ancestor);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
923	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an,  ancestorType);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
924	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  ancestorType);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  n,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  n,  ancestorType);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
925	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.CATCH)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.CATCH)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.CATCH)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
926	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
927	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException(ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException(ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException(ancestorType);	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
928	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unexpected  level: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unexpected  level: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException( "Unexpected  level: "  +  ancestorType);	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
929	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unexpected  level: ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalStateException( "Unexpected  level: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalStateException( "Unexpected  level: ");	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
930	[BUG]  [BUGGY]  parent!=  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  parent!=    if(ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	11	None	replace
931	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }	  if(isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
932	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  ancestorType);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  ancestorType);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
933	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(ancestorType));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ".equalsIgnoreCase(ancestorType));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
934	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  ancestorType);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  ancestorType);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
935	[BUG]  [BUGGY]  (n.getFirstChild()!=  null  &&  n.getNext().getString().equals( " ")))  {  continue;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (n.getFirstChild()!=  null  &&  n.getNext().getString().equals( " ")))  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(n.getFirstChild()!=  null  &&  n.getNext().getString().equals( " ")))  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  <identifier>  expected	200	None	replace
936	[BUG]  [BUGGY]  n.getFirstChild().getNext().getLastChild())  {  continue;  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getNext().getLastChild())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getNext().getLastChild())  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  <identifier>  expected	200	None	replace
937	[BUG]  [BUGGY]  node.getFirstChild().getNext().getString())  {  continue;  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  node.getFirstChild().getNext().getString())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	node.getFirstChild().getNext().getString())  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  <identifier>  expected	200	None	replace
938	[BUG]  [BUGGY]  enableSideEffects(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffects(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffects(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
939	[BUG]  [BUGGY]  allowSideEffects(ancestorType,  t.getModule())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(ancestorType,  t.getModule())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(ancestorType,  t.getModule())  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	119	None	replace
940	[BUG]  [BUGGY]  AllowSideEffects(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  AllowSideEffects(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	AllowSideEffects(t,  n,  level,  USELESS_CODE_ERROR);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
941	[BUG]  [BUGGY]  ||  NodeUtil.isGetProp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isGetProp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isGetProp(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
942	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  }	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	115	None	replace
943	[BUG]  [BUGGY]  ((  CheckSideEffects)ancestorType).checkState(ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)ancestorType).checkState(ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)ancestorType).checkState(ancestorType!=  Token.COMMA);	  ((    CheckSideEffects)n).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	96	None	replace
944	[BUG]  [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.type.error ",  ancestorType);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.type.error ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(PROTECTOR_FN, "msg.bad.type.error ",  ancestorType);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
945	[BUG]  [BUGGY]  Throwables.weirdString( "msg.bad.type.error ",  ancestorType,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString( "msg.bad.type.error ",  ancestorType,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString( "msg.bad.type.error ",  ancestorType,  PROTECTOR_FN);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
946	[BUG]  [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.type.error ", "msg.bad.type.error ",  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.type.error ", "msg.bad.type.error ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(PROTECTOR_FN, "msg.bad.type.error ", "msg.bad.type.error ",  ancestorType);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
947	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " "  +  ancestorType);	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
948	[BUG]  [BUGGY]  ||  isSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
949	[BUG]  [BUGGY]  ||  guardSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  guardSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  guardSideEffectFreeCode)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
950	[BUG]  [BUGGY]  ||  isSimpleOp  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp  ||  ancestorType!=  Token.COMMA)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
951	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
952	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  USELESS_CODE_ERROR));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
953	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
954	[BUG]  [BUGGY]  ||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
955	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }	  ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
956	[BUG]  [BUGGY]  ||  isResultUsed  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }	  ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
957	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
958	[BUG]  [BUGGY]  ||  NodeUtil.isGetProp(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isGetProp(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isGetProp(an))  {  return;  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	67	None	replace
959	[BUG]  [BUGGY]  n  =  an.getSimpleOp()  &&  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getSimpleOp()  &&  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getSimpleOp()  &&  ancestorType!=  Token.COMMA;	  n    =    an.getSimpleOp();    	non-compiled	[CE]  <identifier>  expected	5	None	replace
960	[BUG]  [BUGGY]  n  ==  null  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  ==  null  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  ==  null  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  parent    ==    null    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
961	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
962	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
963	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(an));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(an));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(NodeUtil.isFunctionDeclaration(an));	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
964	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
965	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
966	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
967	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!protectSideEffectFreeCode  &&  ancestorType!=  Token.COMMA)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
968	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
969	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
970	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
971	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed  ||  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed  ||  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  isResultUsed  ||  isSimpleOp)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
972	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isSimpleEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  isSimpleEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  isSimpleEffectFreeCode)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	69	None	replace
973	[BUG]  [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  ||    ancestorType!=    Token.COMMA)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	100	None	replace
974	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
975	[BUG]  [BUGGY]  Node  an  =  n!=  null?  parent.getFirstChild()  :  n;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  n!=  null?  parent.getFirstChild()  :  n;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n!=  null?  parent.getFirstChild()  :  n;	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
976	[BUG]  [BUGGY]  allowSideEffects(t,  an)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  an)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  an)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	184	None	replace
977	[BUG]  [BUGGY]  safely(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safely(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safely(t,  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	184	None	replace
978	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(ancestorType));  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  IllegalStateException( " ".equalsIgnoreCase(ancestorType));	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    IllegalStateException(   ".   ");    	non-compiled	[CE]  <identifier>  expected	63	None	replace
979	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(ancestor,  n);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(ancestor,  n);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(ancestor,  n);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
980	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(any,  n);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(any,  n);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(any,  n);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
981	[BUG]  [BUGGY]  safeGet(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeGet(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeGet(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
982	[BUG]  [BUGGY]  safeAccess(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeAccess(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeAccess(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
983	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  &&  ancestorType  ==  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
984	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  &&  ancestorType  ==  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
985	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
986	[BUG]  [BUGGY]  parent!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
987	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
988	[BUG]  [BUGGY]  SafeTreeElement(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SafeTreeElement(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SafeTreeElement(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safeTree())    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	36	None	replace
989	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
990	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
991	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_SUPER)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_SUPER)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_SUPER)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
992	[BUG]  [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_BLOCK)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
993	[BUG]  [BUGGY]  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
994	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getLastChild(),  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getLastChild(),  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getLastChild(),  ancestorType,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
995	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t,  an.getLastChild(),  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  IllegalArgumentException(t,  an.getLastChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  IllegalArgumentException(t,  an.getLastChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
996	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLastChild(),  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  AssertionFailedError(t,  n.getLastChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  AssertionFailedError(t,  n.getLastChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
997	[BUG]  [BUGGY]  new  IllegalStateException( "Unknown  type: ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( "Unknown  type: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( "Unknown  type: ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
998	[BUG]  [BUGGY]  new  CheckLevelException( " ");  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  CheckLevelException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  CheckLevelException( " ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
999	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  AssertionFailedError(t,  ancestorType);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1000	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(ancestorType));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(ancestorType));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1001	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  ancestorType);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ",  ancestorType);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1002	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " "),  ancestorType);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1003	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1004	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1005	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1006	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1007	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  USELESS_CODE_ERROR))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1008	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  PROTECTOR_FN))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1009	[BUG]  [BUGGY]  allowSideEffects(t,  an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  an))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1010	[BUG]  [BUGGY]  ensureSideEffects(t,  ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ensureSideEffects(t,  ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	ensureSideEffects(t,  ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffects(t,    ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	182	None	replace
1011	[BUG]  [BUGGY]  NodeUtil.isGetProp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isGetProp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isGetProp(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	125	None	replace
1012	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
1013	[BUG]  [BUGGY]  |  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType!=  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
1014	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(protectSideEffectFreeCode  &&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(protectSideEffectFreeCode  &&  isResultUsed)  {  return;  }	  if(isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
1015	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!protectSideEffectFreeCode  &&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!protectSideEffectFreeCode  &&  isResultUsed)  {  return;  }	  if(isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
1016	[BUG]  [BUGGY]  n!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n!=  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n!=  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
1017	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1018	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(parent))  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(parent))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(parent))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1019	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1020	[BUG]  [BUGGY]  if(!isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }	  if(!isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
1021	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  ||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!protectSideEffectFreeCode  ||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!protectSideEffectFreeCode  ||  isResultUsed)  {  return;  }	  if(!isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	150	None	replace
1022	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	203	None	replace
1023	[BUG]  [BUGGY]  safely(ancestorType  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safely(ancestorType  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safely(ancestorType  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	203	None	replace
1024	[BUG]  [BUGGY]  parent  ||  isResultUsed)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ||  isResultUsed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ||  isResultUsed)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	203	None	replace
1025	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1026	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleEffectFreeCode)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1027	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isSimpleEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  isSimpleEffectFreeCode)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1028	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  isResultUsed  ||  isSimpleOp)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1029	[BUG]  [BUGGY]  ||  NodeUtil.isGetProp(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isGetProp(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isGetProp(an))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
1030	[BUG]  [BUGGY]  ||  NodeUtil.isStatementBlock(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isStatementBlock(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isStatementBlock(an))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isFunctionDeclaration(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	70	None	replace
1031	[BUG]  [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(ancestorType))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	191	None	replace
1032	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
1033	[BUG]  [BUGGY]  n  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  ==  null)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  ==  null)  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
1034	[BUG]  [BUGGY]  &&  isSimpleOp)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  isSimpleOp)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  isSimpleOp)  {  return;  }	  if(!isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	81	None	replace
1035	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException( "Unknown  type: "  +  ancestorType);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
1036	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  USELESS_CODE_ERROR);	  ((    CheckSideEffects)an).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1037	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
1038	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR),  ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  n,  USELESS_CODE_ERROR),  ancestorType);	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
1039	[BUG]  [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }	  if(!isResultUsed    &&    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
1040	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1041	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1042	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1043	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  an,  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1044	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  USELESS_CODE_ERROR,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  USELESS_CODE_ERROR,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  USELESS_CODE_ERROR,  level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1045	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  this.level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  this.level);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1046	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevel(ancestorType,  level));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevel(ancestorType,  level));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckLevel(ancestorType,  level));	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1047	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level  +  1);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level  +  1);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level  +  1);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1048	[BUG]  [BUGGY]  if(ancestorType!=  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.SEMI  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
1049	[BUG]  [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  >=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
1050	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  break;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  break;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
1051	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  break;  }	  ||    ancestorType    ==    Token.COMMA)    {    break;    	non-compiled	[CE]  <identifier>  expected	195	None	replace
1052	[BUG]  [BUGGY]  allowSideEffects(an.getModule()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(an.getModule()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(an.getModule()))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
1053	[BUG]  [BUGGY]  allowSideEffects(ancestorType.getModule()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(ancestorType.getModule()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(ancestorType.getModule()))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
1054	[BUG]  [BUGGY]  parent  ||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ||  isResultUsed)  {  return;  }	  parent    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	154	None	replace
1055	[BUG]  [BUGGY]  parent  ||  ancestorType)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ||  ancestorType)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ||  ancestorType)  {  return;  }	  parent    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	154	None	replace
1056	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
1057	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
1058	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
1059	[BUG]  [BUGGY]  continue;  if(ancestorType!=  Token.BLOCK)  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  continue;  if(ancestorType!=  Token.BLOCK)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	continue;  if(ancestorType!=  Token.BLOCK)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
1060	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  &&  ancestorType!=  Token.BLOCK);	  Context.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
1061	[BUG]  [BUGGY]  n.addChildToFront(an,  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.addChildToFront(an,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.addChildToFront(an,  ancestorType);	  n.addChildToFront(an);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
1062	[BUG]  [BUGGY]  n.replaceChild(an,  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.replaceChild(an,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.replaceChild(an,  ancestorType);	  n.addChildToFront(an);    	non-compiled	[CE]  <identifier>  expected	199	None	replace
1063	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  break;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp)  {  break;  }	  if(!isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	178	None	replace
1064	[BUG]  [BUGGY]  Context.checkState(ancestorType  >>  Token.EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  >>  Token.EXPR_RESULT);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  >>  Token.EXPR_RESULT);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
1065	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  msg);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  msg);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  msg);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
1066	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestorType);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
1067	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestor);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestor);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
1068	[BUG]  [BUGGY]  SecuritySystem.err.println(ancestorType  + "Unexpected  error: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println(ancestorType  + "Unexpected  error: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println(ancestorType  + "Unexpected  error: "  +  ancestorType);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
1069	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
1070	[BUG]  [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
1071	[BUG]  [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  protectSideEffectFreeCode)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	161	None	replace
1072	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!protectSideEffectFreeCode)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	161	None	replace
1073	[BUG]  [BUGGY]  if(protectSideEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(protectSideEffectFreeCode)  {  continue;  }	  if(isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	161	None	replace
1074	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1075	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1076	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1077	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1078	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed  ||  protectSideEffectFreeCode)  {  return;  }	  if(isSimpleOp    ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1079	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isExpressionNode(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1080	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(parent))  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isExpressionNode(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1081	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
1082	[BUG]  [BUGGY]  if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunction(an)&&  ancestorType!=  Token.FUNCTION)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
1083	[BUG]  [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isFunctionDeclaration(an)||  an.getType()  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
1084	[BUG]  [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  an.getType()!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isFunctionDeclaration(an)||  an.getType()!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isFunctionDeclaration(an)||  an.getType()!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
1085	[BUG]  [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!protectSideEffectFreeCode)  {  throw  new  IllegalArgumentException(ancestorType);  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1086	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
1087	[BUG]  [BUGGY]  if(NodeUtil.isName(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isName(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isName(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
1088	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
1089	[BUG]  [BUGGY]  if(isResultUsed  ||!isSimpleOp)  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||!isSimpleOp)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||!isSimpleOp)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
1090	[BUG]  [BUGGY]  if(!isSimpleOp  &&!protectSideEffectFreeCode)  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isSimpleOp  &&!protectSideEffectFreeCode)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isSimpleOp  &&!protectSideEffectFreeCode)  {  continue;  }	  if(!isSimpleOp)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	160	None	replace
1091	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1092	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1093	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1094	[BUG]  [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  &&  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	201	None	replace
1095	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
1096	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
1097	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
1098	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	194	None	replace
1099	[BUG]  [BUGGY]  n  =  an.removeFirstChild()  +  1;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.removeFirstChild()  +  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.removeFirstChild()  +  1;	  n    =    an.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
1100	[BUG]  [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
1101	[BUG]  [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
1102	[BUG]  [BUGGY]  n.replaceChild(an,  ancestor);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.replaceChild(an,  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.replaceChild(an,  ancestor);	  n.removeChild(an);    	non-compiled	[CE]  <identifier>  expected	87	None	replace
1103	[BUG]  [BUGGY]  enableSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  enableSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	enableSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
1104	[BUG]  [BUGGY]  ensureSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ensureSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	ensureSideEffectFreeCode(ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
1105	[BUG]  [BUGGY]  allowSideEffectFreeCode(ancestorType,  t.getModule())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(ancestorType,  t.getModule())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(ancestorType,  t.getModule())  {  throw  new  IllegalArgumentException( " ");  }	  allowSideEffectFreeCode(ancestorType)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	120	None	replace
1106	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1107	[BUG]  [BUGGY]  ||  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1108	[BUG]  [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  |  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	|  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( " ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
1109	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedException( " ");  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedException( " ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
1110	[BUG]  [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalArgumentException(ancestorType);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isSimpleOp)  {  throw  new  IllegalArgumentException(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isSimpleOp)  {  throw  new  IllegalArgumentException(ancestorType);  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(ancestorType);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
1111	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType),  ancestor);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType),  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType),  ancestor);	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1112	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,   " "));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,   " "));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType,   " "));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1113	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ANCESTOR_ERROR));  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ANCESTOR_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ANCESTOR_ERROR));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1114	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(protectSideEffectFreeCode  ||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(protectSideEffectFreeCode  ||  isResultUsed)  {  return;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1115	[BUG]  [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1116	[BUG]  [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType!=  USELESS_CODE_ERROR)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1117	[BUG]  [BUGGY]  &&  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  protectSideEffectFreeCode)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1118	[BUG]  [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1119	[BUG]  [BUGGY]  if(ancestorType!=  Token.SEMI)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.SEMI)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.SEMI)continue;  if(ancestorType!=  Token.BLOCK  ||  ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
1120	[BUG]  [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  protectSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	204	None	replace
1121	[BUG]  [BUGGY]  safely(isResultUsed  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safely(isResultUsed  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safely(isResultUsed  ||  isSimpleEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	204	None	replace
1122	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1123	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1124	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  isSimpleEffectFreeCode);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  isSimpleEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  isSimpleEffectFreeCode);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1125	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t,  an.getFirstChild(),  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  IllegalArgumentException(t,  an.getFirstChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  IllegalArgumentException(t,  an.getFirstChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1126	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp  ||  protectSideEffectFreeCode)  {  return;  }	  if(!isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
1127	[BUG]  [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1128	[BUG]  [BUGGY]  parent.getType()!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1129	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)return;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)return;	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	130	None	replace
1130	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1131	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  throw  new  IllegalStateException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	37	None	replace
1132	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	72	None	replace
1133	[BUG]  [BUGGY]  Throwables.weirdString(PROTECTOR_FN,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(PROTECTOR_FN,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(PROTECTOR_FN,  ancestorType);	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1134	[BUG]  [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.identifier ");  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(PROTECTOR_FN, "msg.bad.identifier ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(PROTECTOR_FN, "msg.bad.identifier ");	  Throwables.weirdString(   "msg.bad.identifier   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	44	None	replace
1135	[BUG]  [BUGGY]  ||  NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	123	None	replace
1136	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!protectSideEffectFreeCode  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!protectSideEffectFreeCode  &&  ancestorType  ==  Token.COMMA)  {  return;  }	  if(!protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	175	None	replace
1137	[BUG]  [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
1138	[BUG]  [BUGGY]  parent.getType()!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	129	None	replace
1139	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  an.getMessage());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ",  an.getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ",  an.getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	51	None	replace
1140	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
1141	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	133	None	replace
1142	[BUG]  [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  NodeUtil.isExpressionNode(an)&&  isResultUsed)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	92	None	replace
1143	[BUG]  [BUGGY]  String  msg  =  new  IllegalStateException( " ");  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  String  msg  =  new  IllegalStateException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	String  msg  =  new  IllegalStateException( " ");	  Throwable    msg    =    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	147	None	replace
1144	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	77	None	replace
1145	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  >>  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  >>  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  >>  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	114	None	replace
1146	[BUG]  [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  continue;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(t.getCompiler()!=  null)  {  t.getCompiler().reportCodeChange();  continue;  }	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
1147	[BUG]  [BUGGY]  t.getCompiler().reportError(t,  ancestorType);  continue;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().reportError(t,  ancestorType);  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().reportError(t,  ancestorType);  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
1148	[BUG]  [BUGGY]  t.getCompiler().report(ancestorType,  ancestorChange());  continue;  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(ancestorType,  ancestorChange());  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(ancestorType,  ancestorChange());  continue;	  t.getCompiler().reportCodeChange();    continue;    	non-compiled	[CE]  <identifier>  expected	141	None	replace
1149	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	203	None	replace
1150	[BUG]  [BUGGY]  parent  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ||  isSimpleOp)  {  throw  new  IllegalStateException( " ");  }	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	203	None	replace
1151	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    NodeUtil.isExpressionNode(an))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	91	None	replace
1152	[BUG]  [BUGGY]  safeTreeIndex(ancestorType,  safeTreeIndex))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType,  safeTreeIndex))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType,  safeTreeIndex))  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	183	None	replace
1153	[BUG]  [BUGGY]  safeName(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeName(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeName(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  safeTreeIndex(ancestorType))    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	183	None	replace
1154	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  return  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	return  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1155	[BUG]  [BUGGY]  throw  new  IllegalStateException(t,  an.getLastChild(),  ancestorType);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  IllegalStateException(t,  an.getLastChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  IllegalStateException(t,  an.getLastChild(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1156	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getString(),  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getString(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getString(),  ancestorType);	  throw    new    AssertionFailedError(t,    an.getLastChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	169	None	replace
1157	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  :  ancestorType;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  :  ancestorType;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ")  :  ancestorType;	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1158	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ")	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1159	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  :  ancestor;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  :  ancestor;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " ")  :  ancestor;	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	41	None	replace
1160	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
1161	[BUG]  [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isExpressionNode(an)&&  ancestorType!=  Token.COMMA)  {  break;  }	  ||    NodeUtil.isExpressionNode(an))    {    break;    }    	non-compiled	[CE]  <identifier>  expected	94	None	replace
1162	[BUG]  [BUGGY]  safely(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safely(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safely(ancestorType))  {  throw  new  IllegalArgumentException( " ");  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
1163	[BUG]  [BUGGY]  aughtExceptionHandler(t,  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  aughtExceptionHandler(t,  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	aughtExceptionHandler(t,  ancestorType,  USELESS_CODE_ERROR);	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
1164	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalArgumentException(ancestorType);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalArgumentException(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalArgumentException(ancestorType);  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
1165	[BUG]  [BUGGY]  aughtExceptionHandler(t,  ancestorType,  USELESS_CODE_ERROR,  level);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  aughtExceptionHandler(t,  ancestorType,  USELESS_CODE_ERROR,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	aughtExceptionHandler(t,  ancestorType,  USELESS_CODE_ERROR,  level);	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	202	None	replace
1166	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalStateException(ancestorType);  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalStateException(ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp)  {  throw  new  IllegalStateException(ancestorType);  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	204	None	replace
1167	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType);	  if(isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	174	None	replace
1168	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
1169	[BUG]  [BUGGY]  if(NodeUtil.isName(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isName(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isName(an)||  NodeUtil.isFunctionDeclaration(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	103	None	replace
1170	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
1171	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  ancestorType);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
1172	[BUG]  [BUGGY]  throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  ancestor);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  IllegalStateException( "Unknown  type: "  +  ancestorType,  ancestor);	  throw    new    IllegalStateException(   "Unknown    type:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	176	None	replace
1173	[BUG]  [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  an.getType()!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  an.getType()!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType!=  Token.EXPR_RESULT  &&  an.getType()!=  Token.COMMA);	  Parchet.checkState(ancestorType!=    Token.EXPR_RESULT    &&    ancestorType!=    Token.BLOCK);    	non-compiled	[CE]  <identifier>  expected	113	None	replace
1174	[BUG]  [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getFirstChild().getNext().getNext())  {  continue;  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getNext().getNext()  ||  n.getFirstChild().getNext().getNext())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getNext().getNext()  ||  n.getFirstChild().getNext().getNext())  {  continue;	  n.getFirstChild().getNext().getNext())    {    continue;    	non-compiled	[CE]  <identifier>  expected	197	None	replace
1175	[BUG]  [BUGGY]  n.getFirstChild().getNext().getNext()  ||  ancestorType  ==  Token.COMMA)  {  continue;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getNext().getNext()  ||  ancestorType  ==  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getNext().getNext()  ||  ancestorType  ==  Token.COMMA)  {  continue;	  n.getFirstChild().getNext().getNext())    {    continue;    	non-compiled	[CE]  <identifier>  expected	197	None	replace
1176	[BUG]  [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestorToken);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestorToken);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecuritySystem.err.println( "Unexpected  error: "  +  ancestorType,  ancestorToken);	  SecuritySystem.err.println(   "Unexpected    error:   "    +    ancestorType);    	non-compiled	[CE]  <identifier>  expected	148	None	replace
1177	[BUG]  [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isExpressionNode(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
1178	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isStatementBlock(an))  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isStatementBlock(an))  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isStatementBlock(an))  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	105	None	replace
1179	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)return;  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)return;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	165	None	replace
1180	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1181	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level  >  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1182	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1183	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level)  {  return;  }  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode  ||  level)  {  return;  }	  if(isResultUsed    ||    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	17	None	replace
1184	[BUG]  [BUGGY]  Context.report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
1185	[BUG]  [BUGGY]  Context.report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	32	None	replace
1186	[BUG]  [BUGGY]  safeTry(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTry(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTry(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
1187	[BUG]  [BUGGY]  safeTreeIndex(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType)  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	112	None	replace
1188	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  level);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(),  level);	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1189	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  new  StripProtection());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  an,  new  StripProtection());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  an,  new  StripProtection());	  NodeTraversal.traverse(compiler,    n,    new    StripProtection());    	non-compiled	[CE]  <identifier>  expected	140	None	replace
1190	[BUG]  [BUGGY]  new  IllegalStateException( "Unexpected  level: ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( "Unexpected  level: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( "Unexpected  level: ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
1191	[BUG]  [BUGGY]  new  IllegalStateException( "Failed  to  call  n.getFirstChild(). ");  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  new  IllegalStateException( "Failed  to  call  n.getFirstChild(). ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	new  IllegalStateException( "Failed  to  call  n.getFirstChild(). ");	  new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	149	None	replace
1192	[BUG]  [BUGGY]  ||  NodeUtil.isImmutableValue(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isImmutableValue(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isImmutableValue(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	76	None	replace
1193	[BUG]  [BUGGY]  allowSideEffects(t,  an.getModule()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  an.getModule()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  an.getModule()))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
1194	[BUG]  [BUGGY]  approveSideEffects(t.getModule()))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  approveSideEffects(t.getModule()))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	approveSideEffects(t.getModule()))  {  throw  new  IllegalStateException( " ");  }	  allowSideEffects(t.getModule()))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	187	None	replace
1195	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK);	  ((    CheckSideEffects)n).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1196	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(n)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	75	None	replace
1197	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||!NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
1198	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.SEMI)  {  throw  new  IllegalStateException( " ");  }	  parent    ==    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	38	None	replace
1199	[BUG]  [BUGGY]  ||!isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  ancestor);  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  ancestor);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed)  {  throw  new  IllegalArgumentException(ancestorType,  ancestor);  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(ancestorType);    }    	non-compiled	[CE]  <identifier>  expected	118	None	replace
1200	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  guardSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  guardSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed  ||  guardSideEffectFreeCode)  {  return;  }	  if(isSimpleOp    ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1201	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }	  if(isSimpleOp    ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1202	[BUG]  [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  ancestorType)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  isResultUsed  ||  ancestorType)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  isResultUsed  ||  ancestorType)  {  return;  }	  if(isSimpleOp    ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	152	None	replace
1203	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);	  Context.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
1204	[BUG]  [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);	  Context.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	33	None	replace
1205	[BUG]  [BUGGY]  allowSideEffects(t,  n,  level,  protectiveSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n,  level,  protectiveSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n,  level,  protectiveSideEffectFreeCode);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
1206	[BUG]  [BUGGY]  allowSideEffects(t,  n,  level,  protectSideEffectFreeCode);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  n,  level,  protectSideEffectFreeCode);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  n,  level,  protectSideEffectFreeCode);	  allowSideEffects(t,    n,    level);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
1207	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  break;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	192	None	replace
1208	[BUG]  [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
1209	[BUG]  [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INITIALIZER)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INITIALIZER)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INITIALIZER)  {  return;  }	  if(isResultUsed    ||    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	13	None	replace
1210	[BUG]  [BUGGY]  if(isResultUsed  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	162	None	replace
1211	[BUG]  [BUGGY]  &&  NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  &&    NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	124	None	replace
1212	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	127	None	replace
1213	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isExpressionNode(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isExpressionNode(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isExpressionNode(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	191	None	replace
1214	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isAssignmentOp(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isAssignmentOp(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isAssignmentOp(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	191	None	replace
1215	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isStatementBlock(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isStatementBlock(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  NodeUtil.isStatementBlock(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	191	None	replace
1216	[BUG]  [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()  ==  Token.COMMA  ||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType!=    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	131	None	replace
1217	[BUG]  [BUGGY]  if(NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isStatementBlock(an)||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(n)||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	28	None	replace
1218	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unknown  type ");  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unknown  type ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unknown  type ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
1219	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  token  type ");  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  token  type ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  token  type ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
1220	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  type ");  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  type ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  type ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
1221	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  type  of  path: ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  type  of  path: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError( "Unexpected  type  of  path: ");	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(   "   ");    	non-compiled	[CE]  <identifier>  expected	102	None	replace
1222	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isFunctionDeclaration(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	107	None	replace
1223	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	19	None	replace
1224	[BUG]  [BUGGY]  Node  gramps  =  an.cloneTree();  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.cloneTree();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.cloneTree();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
1225	[BUG]  [BUGGY]  Node  gramps  =  an.removeFirstChild();  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  gramps  =  an.removeFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  gramps  =  an.removeFirstChild();	  Node    gramps    =    an.getParent();    	non-compiled	[CE]  <identifier>  expected	85	None	replace
1226	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  INVALID_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  ancestorType,  INVALID_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  ancestorType,  INVALID_CODE_ERROR);	  throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	146	None	replace
1227	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(an,  c);  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(an,  c);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(an,  c);	  NodeUtil.copyCurrentStructure(an);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
1228	[BUG]  [BUGGY]  n  =  an.getFirstChild()  *  ancestorType  ||  ancestorType  ==  Token.SEMI;  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  *  ancestorType  ||  ancestorType  ==  Token.SEMI;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  *  ancestorType  ||  ancestorType  ==  Token.SEMI;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.SEMI;    	non-compiled	[CE]  <identifier>  expected	173	None	replace
1229	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType!=    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	134	None	replace
1230	[BUG]  [BUGGY]  ||  NodeUtil.isStatementBlock(an))  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isStatementBlock(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isStatementBlock(an))  {  return;  }	  ||    NodeUtil.isExpressionNode(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	90	None	replace
1231	[BUG]  [BUGGY]  aughtException(t,  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  aughtException(t,  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	aughtException(t,  ancestorType,  USELESS_CODE_ERROR);	  if(isResultUsed    ||    isSimpleOp)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	201	None	replace
1232	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  ancestorType);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  an,  level,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  an,  level,  ancestorType);	  NodeTraversal.traverse(compiler,    an,    level);    	non-compiled	[CE]  <identifier>  expected	142	None	replace
1233	[BUG]  [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType!=  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType!=  Token.COMMA)  {  throw  new  UnsupportedOperationException( " ");  }	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    UnsupportedOperationException(   "   ");    	non-compiled	[CE]  <identifier>  expected	57	None	replace
1234	[BUG]  [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(!isResultUsed    &&    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
1235	[BUG]  [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(!isResultUsed    &&    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	151	None	replace
1236	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  an.getType()  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
1237	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  an.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)||  an.getType()  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
1238	[BUG]  [BUGGY]  if(!NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!NodeUtil.isFunctionDeclaration(an)&&  an.getType()  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    an.getType()    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	121	None	replace
1239	[BUG]  [BUGGY]  Node  an  =  an.getFirstChild();  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  an.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  an.getFirstChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
1240	[BUG]  [BUGGY]  Node  an  =  n.removeFirstChild();  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  n.removeFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  n.removeFirstChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  <identifier>  expected	86	None	replace
1241	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1242	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	122	None	replace
1243	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  new  CheckSideEffects());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  level,  new  CheckSideEffects());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  level,  new  CheckSideEffects());	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1244	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  ancestorType,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  ancestorType,  new  CheckLevel(level,  USELESS_CODE_ERROR));	  NodeTraversal.traverse(compiler,    ancestorType,    level);    	non-compiled	[CE]  <identifier>  expected	50	None	replace
1245	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  isSimpleOp);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  isSimpleOp);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	throw  new  AssertionFailedError(t,  an.getFirstChild(),  ancestorType,  isSimpleOp);	  throw    new    AssertionFailedError(t,    an.getFirstChild(),    ancestorType);    	non-compiled	[CE]  <identifier>  expected	168	None	replace
1246	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	171	None	replace
1247	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.FOR)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	171	None	replace
1248	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.NEW)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.NEW)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.NEW)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	171	None	replace
1249	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.CALL  ||  ancestorType  ==  Token.SEMI)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	171	None	replace
1250	[BUG]  [BUGGY]  ||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }	  ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1251	[BUG]  [BUGGY]  ||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isResultUsed  ||  ancestorType!=  Token.COMMA)  {  return;  }	  ||    isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	16	None	replace
1252	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(NodeUtil.isExpressionNode(an))    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	159	None	replace
1253	[BUG]  [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()  ==  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  return;  }	  if(ancestorType!=    Token.COMMA    ||    ancestorType    ==    Token.SEMI)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	132	None	replace
1254	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA  ||  ancestorType!=  Token.BLOCK);	  ((    CheckSideEffects)an).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1255	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA,  ancestor);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA,  ancestor);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType  ==  Token.COMMA,  ancestor);	  ((    CheckSideEffects)an).checkState(ancestorType    ==    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1256	[BUG]  [BUGGY]  ||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }	  ||!isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1257	[BUG]  [BUGGY]  ||!isResultUsed)  {  break;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed)  {  break;  }	  ||!isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1258	[BUG]  [BUGGY]  ||!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed  &&  ancestorType!=  Token.COMMA)  {  return;  }	  ||!isResultUsed)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	80	None	replace
1259	[BUG]  [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	74	None	replace
1260	[BUG]  [BUGGY]  parent.getType()!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent.getType()!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent.getType()!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  return;  }	  parent.getType()!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	12	None	replace
1261	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode)  {  break;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleEffectFreeCode)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleEffectFreeCode)  {  break;  }	  if(isResultUsed    &&    isSimpleEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
1262	[BUG]  [BUGGY]  if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  ||  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
1263	[BUG]  [BUGGY]  if(!isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  ancestorType  ==  Token.COMMA)  {  continue;  }	  if(!isResultUsed)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	163	None	replace
1264	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
1265	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	136	None	replace
1266	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
1267	[BUG]  [BUGGY]  if(NodeUtil.isVarDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isVarDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isVarDeclaration(an)||  NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	68	None	replace
1268	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  >  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  level  >  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  level  >  USELESS_CODE_ERROR)  {  return;  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
1269	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp  ||  guardSideEffectFreeCode)  {  return;  }	  if(isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	15	None	replace
1270	[BUG]  [BUGGY]  Throwables.weirdString(proTECTOR_FN, "msg.bad.type.error ",  ancestorType);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(proTECTOR_FN, "msg.bad.type.error ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(proTECTOR_FN, "msg.bad.type.error ",  ancestorType);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
1271	[BUG]  [BUGGY]  Throwables.weirdString(msg.bad.type.error ",  ancestorType);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.weirdString(msg.bad.type.error ",  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.weirdString(msg.bad.type.error ",  ancestorType);	  Throwables.weirdString(   "msg.bad.type.error   ",    ancestorType);    	non-compiled	[CE]  <identifier>  expected	45	None	replace
1272	[BUG]  [BUGGY]  parent!=  null  &&  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  &&  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  &&  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
1273	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  &&  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
1274	[BUG]  [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  &&  parent.getType()  ==  Token.CALL)  {  throw  new  IllegalArgumentException( " ");  }	  parent!=    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	117	None	replace
1275	[BUG]  [BUGGY]  n.getFirstChild().getParent().getNext())  {  break;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getParent().getNext())  {  break;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getParent().getNext())  {  break;	  n.getFirstChild().getNext().getNext())    {    break;    	non-compiled	[CE]  <identifier>  expected	198	None	replace
1276	[BUG]  [BUGGY]  n.getFirstChild().getNext().getNext())  {  break;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getNext().getNext())  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getNext().getNext())  {  break;  }	  n.getFirstChild().getNext().getNext())    {    break;    	non-compiled	[CE]  <identifier>  expected	198	None	replace
1277	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevel(level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckLevel(level,  USELESS_CODE_ERROR));	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1278	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  PROTECTOR_FN);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  PROTECTOR_FN);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1279	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ErROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ErROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeTraversal.traverse(compiler,  n,  level,  USELESS_CODE_ErROR);	  NodeTraversal.traverse(compiler,    n,    level);    	non-compiled	[CE]  <identifier>  expected	49	None	replace
1280	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
1281	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  break;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
1282	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  break;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  break;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	78	None	replace
1283	[BUG]  [BUGGY]  Node  an  =  an.getLastChild();  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Node  an  =  an.getLastChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Node  an  =  an.getLastChild();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	84	None	replace
1284	[BUG]  [BUGGY]  ||  NodeUtil.isStatementBlock(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  NodeUtil.isStatementBlock(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  NodeUtil.isStatementBlock(an)&&  ancestorType  ==  Token.COMMA)  {  return;  }	  ||    NodeUtil.isExpressionNode(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	128	None	replace
1285	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(ancestorType)||  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
1286	[BUG]  [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!NodeUtil.isExpressionNode(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	193	None	replace
1287	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  isSimpleOp))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  isSimpleOp))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  isSimpleOp))  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
1288	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  isSimpleOp)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
1289	[BUG]  [BUGGY]  allowSideEffects(t,  ancestorType,  isSimpleOp  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffects(t,  ancestorType,  isSimpleOp  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffects(t,  ancestorType,  isSimpleOp  ||  isResultUsed)  {  throw  new  IllegalArgumentException( " ");  }	  if(isSimpleOp    ||    isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	155	None	replace
1290	[BUG]  [BUGGY]  n  =  an.getFirstChild()  *  ancestorType  ||  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getFirstChild()  *  ancestorType  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getFirstChild()  *  ancestorType  ||  ancestorType  ==  Token.COMMA;	  n    =    an.getFirstChild()    ||    ancestorType    ==    Token.COMMA;    	non-compiled	[CE]  <identifier>  expected	143	None	replace
1291	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(answer,  level);  [CE]  <identifier>  expected  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(answer,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(answer,  level);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
1292	[BUG]  [BUGGY]  NodeUtil.copyCurrentStructure(a,  level);  [CE]  <identifier>  expected  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  NodeUtil.copyCurrentStructure(a,  level);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	NodeUtil.copyCurrentStructure(a,  level);	  NodeUtil.copyCurrentStructure(n,    level);    	non-compiled	[CE]  <identifier>  expected	89	None	replace
1293	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA  ||  ancestorType!=  Token.BLOCK);	  ((    CheckSideEffects)an).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1294	[BUG]  [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	((  CheckSideEffects)an).checkState(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.COMMA);	  ((    CheckSideEffects)an).checkState(ancestorType!=    Token.COMMA);    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1295	[BUG]  [BUGGY]  safeTreeIndex(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeIndex(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeIndex(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
1296	[BUG]  [BUGGY]  safeTry(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTry(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTry(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
1297	[BUG]  [BUGGY]  safeTreeUnsafe(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeTreeUnsafe(ancestorType))  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeTreeUnsafe(ancestorType))  {  throw  new  IllegalStateException( " ");  }	  safely(ancestorType))    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	189	None	replace
1298	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1299	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1300	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1301	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.CATCH  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.CATCH)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1302	[BUG]  [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isSimpleOp  ||  protectSideEffectFreeCode  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(isSimpleOp    ||    protectSideEffectFreeCode)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	153	None	replace
1303	[BUG]  [BUGGY]  n  =  an.getImmediateParentNode();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getImmediateParentNode();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getImmediateParentNode();	  n    =    an.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
1304	[BUG]  [BUGGY]  n  =  an.getNumberOfChildren();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getNumberOfChildren();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getNumberOfChildren();	  n    =    an.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
1305	[BUG]  [BUGGY]  n  =  an.getNumber();  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getNumber();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getNumber();	  n    =    an.getLastChild();    	non-compiled	[CE]  <identifier>  expected	1	None	replace
1306	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1307	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType!=  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1308	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1309	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	93	None	replace
1310	[BUG]  [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }	  if(!isResultUsed    &&    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
1311	[BUG]  [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  }	  if(!isResultUsed    &&    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	79	None	replace
1312	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1313	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	73	None	replace
1314	[BUG]  [BUGGY]  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild());	  n    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1315	[BUG]  [BUGGY]  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getLastChild());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getLastChild());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(n  ==  parent.getFirstChild()  ||  n  ==  parent.getLastChild());	  n    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1316	[BUG]  [BUGGY]  (n  ==  parent.getFirstChild())?  n  :  an.getFirstChild();  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (n  ==  parent.getFirstChild())?  n  :  an.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(n  ==  parent.getFirstChild())?  n  :  an.getFirstChild();	  n    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1317	[BUG]  [BUGGY]  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild()));  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild()));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild()));	  n    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1318	[BUG]  [BUGGY]  (n  ==  parent.getFirstChild()?  n  :  an.getFirstChild());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (n  ==  parent.getFirstChild()?  n  :  an.getFirstChild());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(n  ==  parent.getFirstChild()?  n  :  an.getFirstChild());	  n    =    parent.getFirstChild();    	non-compiled	[CE]  <identifier>  expected	2	None	replace
1319	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
1320	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FOR)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
1321	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
1322	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.FUNCTION)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	10	None	replace
1323	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  :  ancestorType;  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  :  ancestorType;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ")  :  ancestorType;	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
1324	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
1325	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  :  ancestor;  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  :  ancestor;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalArgumentException( " ")  :  ancestor;	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	47	None	replace
1326	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,   " ");  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,   " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType,   " ");	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
1327	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType, "Unknown  statement ");  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType, "Unknown  statement ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType, "Unknown  statement ");	  Throwables.throw(new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	43	None	replace
1328	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,  PROTECTOR_FN));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,  PROTECTOR_FN));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType,  PROTECTOR_FN));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1329	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,  ancestor));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,  ancestor));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType,  ancestor));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1330	[BUG]  [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,  null));  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalStateException(ancestorType,  null));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalStateException(ancestorType,  null));	  Throwables.throw(new    IllegalStateException(   "   "));    	non-compiled	[CE]  <identifier>  expected	42	None	replace
1331	[BUG]  [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isExpressionNode(an)||  ancestorType  ==  Token.FUNCTION  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isExpressionNode(an)||    ancestorType    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	95	None	replace
1332	[BUG]  [BUGGY]  ||  ANCEstorType  ==  Token.COMMA)  {  continue;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ANCEstorType  ==  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ANCEstorType  ==  Token.COMMA)  {  continue;	  ||    ancestorType    ==    Token.COMMA)    {    continue;    	non-compiled	[CE]  <identifier>  expected	65	None	replace
1333	[BUG]  [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType),   " ");  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw(new  IllegalArgumentException(ancestorType),   " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw(new  IllegalArgumentException(ancestorType),   " ");	  Throwables.throw(new    IllegalArgumentException(   "   "));    	non-compiled	[CE]  <identifier>  expected	48	None	replace
1334	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||!isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||!isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||!isResultUsed)  {  return;  }	  if(!isResultUsed    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	177	None	replace
1335	[BUG]  [BUGGY]  ||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1336	[BUG]  [BUGGY]  ||!requireSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!requireSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!requireSideEffectFreeCode)  {  throw  new  IllegalArgumentException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1337	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  ancestorType  ==  Token.SEMI)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK    ||    ancestorType!=    Token.SEMI)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	106	None	replace
1338	[BUG]  [BUGGY]  ||  isSimpleOp  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  isSimpleOp  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  isSimpleOp  ||  ancestorType  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	21	None	replace
1339	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType).getMessage());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType).getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " "  +  ancestorType).getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1340	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType  + ".getMessage());  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  ancestorType  + ".getMessage());  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwables.throw  new  IllegalStateException( " "  +  ancestorType  + ".getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	46	None	replace
1341	[BUG]  [BUGGY]  if(!isResultUsed  &&  isSimpleOp  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  isSimpleOp  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  isSimpleOp  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	83	None	replace
1342	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
1343	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR));  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  an,  level,  USELESS_CODE_ERROR));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
1344	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().report(JSError.make(t,  ancestorType,  level,  USELESS_CODE_ERROR,  ancestorType));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
1345	[BUG]  [BUGGY]  t.getCompiler().declare(an,  ancestorType,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  t.getCompiler().declare(an,  ancestorType,  level,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	t.getCompiler().declare(an,  ancestorType,  level,  USELESS_CODE_ERROR);	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  <identifier>  expected	139	None	replace
1346	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  USELESS_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  USELESS_CODE_ERROR);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
1347	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  INVALID_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  INVALID_CODE_ERROR);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  INVALID_CODE_ERROR);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
1348	[BUG]  [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  state);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  state);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||  ancestorType  ==  Token.COMMA)  {  throw  new  AssertionFailedError(t,  ancestorType,  state);	  ||    ancestorType    ==    Token.COMMA)    {    throw    new    AssertionFailedError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	196	None	replace
1349	[BUG]  [BUGGY]  safeLog())  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  safeLog())  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	safeLog())  {  throw  new  IllegalArgumentException( " ");  }	  safeTree())    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	30	None	replace
1350	[BUG]  [BUGGY]  if(isResultUsed  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }	  if(isResultUsed    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	14	None	replace
1351	[BUG]  [BUGGY]  parent  ||  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ||  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ||  ancestorType!=  Token.COMMA)  {  return;  }	  if(ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
1352	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  &&  n  ==  parent.getFirstChild())  {  return;  }	  if(ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	7	None	replace
1353	[BUG]  [BUGGY]  n  ==  parent  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  ==  parent  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  ==  parent  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  parent    ==    null    ||    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	9	None	replace
1354	[BUG]  [BUGGY]  allowSideEffectFreeCode(t,  an);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  allowSideEffectFreeCode(t,  an);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	allowSideEffectFreeCode(t,  an);	  allowSideEffectFreeCode(ancestorType);    	non-compiled	[CE]  <identifier>  expected	40	None	replace
1355	[BUG]  [BUGGY]  parent!=  null  &&  isResultUsed)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent!=  null  &&  isResultUsed)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent!=  null  &&  isResultUsed)  {  throw  new  IllegalStateException( " ");  }	  parent!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1356	[BUG]  [BUGGY]  State  state  =  n.getFirstChild();  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  State  state  =  n.getFirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	State  state  =  n.getFirstChild();	  parent!=    null)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	109	None	replace
1357	[BUG]  [BUGGY]  if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }	  if(!isResultUsed    &&    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
1358	[BUG]  [BUGGY]  if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  return;  }	  if(!isResultUsed    &&    level    ==    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	82	None	replace
1359	[BUG]  [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  throw  new  AssertionFailedError(t,  ancestorType);  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(isResultUsed  ||  isSimpleOp)  {  throw  new  AssertionFailedError(t,  ancestorType);  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(isResultUsed  ||  isSimpleOp)  {  throw  new  AssertionFailedError(t,  ancestorType);  }	  if(isResultUsed    &&    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	156	None	replace
1360	[BUG]  [BUGGY]  if(NodeUtil.isImmutableValue(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isImmutableValue(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isImmutableValue(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
1361	[BUG]  [BUGGY]  if(NodeUtil.isAssignmentOp(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isAssignmentOp(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isAssignmentOp(an)||!NodeUtil.isFunctionDeclaration(an))  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)||!NodeUtil.isFunctionDeclaration(an))    {    return;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
1362	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)return;  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)return;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)return;	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
1363	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  break;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.BLOCK)  {  break;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.BLOCK)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	164	None	replace
1364	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR  ||  ancestorType  ==  Token.EXPR_RESULT)  {  return;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
1365	[BUG]  [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  break;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  break;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.FOR)  {  break;  }	  if(ancestorType    ==    Token.COMMA    ||    ancestorType    ==    Token.FOR)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	166	None	replace
1366	[BUG]  [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(NodeUtil.isFunctionDeclaration(an)&&  ancestorType  ==  Token.COMMA  ||  ancestorType  ==  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    ancestorType    ==    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	25	None	replace
1367	[BUG]  [BUGGY]  n  =  an.removeFirstChild()  ||  ancestorType  ==  Token.COMMA;  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.removeFirstChild()  ||  ancestorType  ==  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.removeFirstChild()  ||  ancestorType  ==  Token.COMMA;	  n    =    an.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
1368	[BUG]  [BUGGY]  n  =  an.replaceChild(n,  ancestorType);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.replaceChild(n,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.replaceChild(n,  ancestorType);	  n    =    an.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
1369	[BUG]  [BUGGY]  n  =  an.removeFirstChild()  ||  ancestorType!=  Token.COMMA;  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.removeFirstChild()  ||  ancestorType!=  Token.COMMA;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.removeFirstChild()  ||  ancestorType!=  Token.COMMA;	  n    =    an.removeFirstChild();    	non-compiled	[CE]  <identifier>  expected	172	None	replace
1370	[BUG]  [BUGGY]  n  =  an.getfirstChild();  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n  =  an.getfirstChild();  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n  =  an.getfirstChild();	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
1371	[BUG]  [BUGGY]  (n  =  an.getFirstChild())+  1;  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  (n  =  an.getFirstChild())+  1;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	(n  =  an.getFirstChild())+  1;	  n    =    an.getFirstChild()    +    1;    	non-compiled	[CE]  <identifier>  expected	4	None	replace
1372	[BUG]  [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  parent  ==  null  ||!NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	parent  ==  null  ||!NodeUtil.isFunctionDeclaration(an))  {  throw  new  IllegalArgumentException( " ");  }	  parent    ==    null)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	31	None	replace
1373	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA)  {  continue;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA)  {  continue;  }	  if(ancestorType    ==    Token.COMMA)continue;    if(ancestorType!=    Token.BLOCK)    {    continue;    }    	non-compiled	[CE]  <identifier>  expected	104	None	replace
1374	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.COMMA);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
1375	[BUG]  [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Parchet.checkState(ancestorType  ==  Token.EXPR_RESULT  ||  ancestorType  ==  Token.BLOCK);	  Parchet.checkState(ancestorType    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	39	None	replace
1376	[BUG]  [BUGGY]  String  msg  =  new  IllegalArgumentException( " ");  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  String  msg  =  new  IllegalArgumentException( " ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	String  msg  =  new  IllegalArgumentException( " ");	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	135	None	replace
1377	[BUG]  [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Failed  to  parse: ");  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Throwable  msg  =  new  IllegalArgumentException( "Failed  to  parse: ");  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Throwable  msg  =  new  IllegalArgumentException( "Failed  to  parse: ");	  Throwable    msg    =    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	135	None	replace
1378	[BUG]  [BUGGY]  if(!isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(!isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(!isResultUsed  ||  isSimpleOp  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  if(!isResultUsed    ||    isSimpleOp)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	178	None	replace
1379	[BUG]  [BUGGY]  ||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!isResultUsed  &&  ancestorType  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
1380	[BUG]  [BUGGY]  ||!requireSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  ||!requireSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	||!requireSideEffectFreeCode)  {  throw  new  IllegalStateException( " ");  }	  ||!isResultUsed)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
1381	[BUG]  [BUGGY]  if(ancestorType!=  Token.COMMA  ||  isResultUsed)  {  return;  }  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  if(ancestorType!=  Token.COMMA  ||  isResultUsed)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	if(ancestorType!=  Token.COMMA  ||  isResultUsed)  {  return;  }	  if(isResultUsed    ||    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	157	None	replace
1382	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType!=  Token.BLOCK);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
1383	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType!=  Token.COMMA);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
1384	[BUG]  [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  >>  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  >>  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	SecurityContext.checkState(ancestorType  ==  Token.EXPR_RESULT,  ancestorType  >>  Token.BLOCK);	  SecurityContext.checkState(ancestorType    ==    Token.EXPR_RESULT,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	138	None	replace
1385	[BUG]  [BUGGY]  reportError(t,  an.getFirstChild(),  ancestorType);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  an.getFirstChild(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  an.getFirstChild(),  ancestorType);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1386	[BUG]  [BUGGY]  reportError(t,  an.getLineno(),  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  reportError(t,  an.getLineno(),  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	reportError(t,  an.getLineno(),  ancestorType);	  reportError(t,    ancestorType);    	non-compiled	[CE]  <identifier>  expected	170	None	replace
1387	[BUG]  [BUGGY]  n.getFirstChild().getNext().getString()  ||  ancestorType!=  Token.COMMA)  {  continue;  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getNext().getString()  ||  ancestorType!=  Token.COMMA)  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getNext().getString()  ||  ancestorType!=  Token.COMMA)  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  <identifier>  expected	200	None	replace
1388	[BUG]  [BUGGY]  n.getFirstChild().getParent().getString())  {  continue;  [CE]  <identifier>  expected  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  n.getFirstChild().getParent().getString())  {  continue;  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	n.getFirstChild().getParent().getString())  {  continue;	  n.getFirstChild().getNext().getString())    {    continue;    	non-compiled	[CE]  <identifier>  expected	200	None	replace
1389	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.COMMA);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
1390	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT,  ancestorType);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
1391	[BUG]  [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	Context.checkState(ancestorType!=  Token.EXPR_RESULT  ||  ancestorType!=  Token.BLOCK);	  Context.checkState(ancestorType!=    Token.EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	34	None	replace
1392	[BUG]  [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  return;  }  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      }    if  (n  ==  parent.getLastChild())  {  for  (Node  an  :  parent.getAncestors())  {  int  ancestorType  =  an.getType();  if  (ancestorType  ==  Token.COMMA)  continue;  if  (ancestorType  !=  Token.EXPR_RESULT  &&  ancestorType  !=  Token.BLOCK)      [BUGGY]  &&  ancestorType!=  Token.COMMA)  {  return;  }  [BUGGY]      else  break;  }  }  }  else  if  (parent.getType()  !=  Token.EXPR_RESULT  &&  parent.getType()  !=  Token.BLOCK)  {  if  (parent.getType()  ==  Token.FOR  &&  parent.getChildCount()  ==  4  &&  (n  ==  parent.getFirstChild()  ||  n  ==  parent.getFirstChild().getNext().getNext()))  {  }  else  {  return;  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	117	117	1	replace	&&  ancestorType!=  Token.COMMA)  {  return;  }	  if(NodeUtil.isFunctionDeclaration(an)&&    ancestorType!=    Token.COMMA)    {    return;    }    	non-compiled	[CE]  <identifier>  expected	27	None	replace
