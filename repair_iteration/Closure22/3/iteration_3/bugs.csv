bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
2	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
3	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
4	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
5	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
6	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
7	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
8	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
9	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
10	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
11	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
12	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  not  a  statement	6	None	replace
13	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	6	None	replace
14	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
15	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.CALL)  {  return;  }  [CE]  not  a  statement  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  not  a  statement	6	None	replace
16	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	6	None	replace
17	[BUG]  [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	6	None	replace
18	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
19	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
20	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
21	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
22	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
23	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
24	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
25	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
26	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
27	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
28	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_COMMA)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
29	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  level);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
30	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
31	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
32	[BUG]  [BUGGY]  new  AssertionFailedError(n.getString(),  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(n.getString(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(n.getString(),  level,  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
33	[BUG]  [BUGGY]  new  AssertionFailedError(n,  t.getString(),  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(n,  t.getString(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(n,  t.getString(),  level);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
34	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  Level.ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  Level.ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  Level.ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
35	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  Level.WARNING);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  Level.WARNING);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  Level.WARNING);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
36	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
37	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
38	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
39	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
40	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  level);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  level);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
41	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()!=  Token.EXPR_RESULT);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()!=  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()!=  Token.EXPR_RESULT);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
42	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
43	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.EXPR_RESULT);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
44	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.NAME);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
45	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.COMMA);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.COMMA);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
46	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  gramps);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  gramps);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  	187	None	replace
47	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  parent);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  	187	None	replace
48	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  <identifier>  expected	187	None	replace
49	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
50	[BUG]  [BUGGY]  t.getCompiler().reportCodeChange(level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().reportCodeChange(level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().reportCodeChange(level);	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
51	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
52	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().report(JSError.make(t,  n,  level));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
53	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
54	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString()));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
55	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
56	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").append(n.getString());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").append(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").append(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
57	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
58	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  parent.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  parent.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  parent.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
59	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
60	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
61	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
62	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
63	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_INIT_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_INIT_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
64	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
65	[BUG]  [BUGGY]  test(n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
66	[BUG]  [BUGGY]  n.report(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.report(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.report(n,  level,  USELESS_CODE_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
67	[BUG]  [BUGGY]  report(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  report(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	report(n,  level,  USELESS_CODE_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
68	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
69	[BUG]  [BUGGY]  ||  level!=  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
70	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
71	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
72	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
73	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
74	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
75	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	112	None	replace
76	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
77	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
78	[BUG]  [BUGGY]  Throwables.checkState(n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getLineno(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getLineno(),  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
79	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  illegal  start  of  expression  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
80	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	103	None	replace
81	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  not  a  statement	103	None	replace
82	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	103	None	replace
83	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  not  a  statement	103	None	replace
84	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  not  a  statement	103	None	replace
85	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
86	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  level));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  level));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
87	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  msg));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  msg));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
88	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
89	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
90	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
91	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
92	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
93	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MAX_COMMA);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MAX_COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  MAX_COMMA);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
94	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMES_ERROR);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMES_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMES_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
95	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
96	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
97	[BUG]  [BUGGY]  AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
98	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
99	[BUG]  [BUGGY]  AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
100	[BUG]  [BUGGY]  AssertionError.warning(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionError.warning(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionError.warning(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
101	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
102	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
103	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
104	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
105	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
106	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
107	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
108	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
109	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
110	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
111	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(n,  new  Node(Token.EMPTY));	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
112	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.EMPTY));	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
113	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY,  level));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.EMPTY,  level));	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
114	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY),  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.EMPTY),  level);	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
115	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
116	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
117	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  null);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
119	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  false);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
120	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  this);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
121	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
122	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  this,  level));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  this,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  this,  level));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
123	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  t));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
124	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  charAt(0)));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  charAt(0)));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  charAt(0)));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
125	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  this),  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  this),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  this),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
126	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  DEFAULT_COMMA));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  DEFAULT_COMMA));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  DEFAULT_COMMA));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
127	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_COMMA));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_COMMA));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_COMMA));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
128	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_ERROR);    	non-compiled	[CE]  <identifier>  expected	182	None	replace
129	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_ERROR);    	non-compiled	[CE]  	182	None	replace
130	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_ERROR);    	non-compiled	[CE]  	182	None	replace
131	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_ERROR);    	non-compiled	[CE]  	182	None	replace
132	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  <identifier>  expected	15	None	replace
133	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
134	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
135	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
136	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  level);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  level);	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
137	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  level: "  +  n.getType());  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  IllegalStateException( "Unexpected  level: "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  IllegalStateException( "Unexpected  level: "  +  n.getType());	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	192	None	replace
138	[BUG]  [BUGGY]  Throw  new  IllegalStateException( "Unexpected  level: "  +  level);  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  IllegalStateException( "Unexpected  level: "  +  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  IllegalStateException( "Unexpected  level: "  +  level);	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  not  a  statement	192	None	replace
139	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
140	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
141	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
142	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
143	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
144	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
145	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
146	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  PROTECTOR_FN);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
147	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  level);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  level);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
148	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
149	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
150	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
151	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    level);    	non-compiled	[CE]  	23	None	replace
152	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    level);    	non-compiled	[CE]  	23	None	replace
153	[BUG]  [BUGGY]  Throwables.checkState(n.getString(),  level,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getString(),  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getString(),  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    level);    	non-compiled	[CE]  	23	None	replace
154	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    MISSING_CODE_ERROR);    	non-compiled	[CE]  <identifier>  expected	93	None	replace
155	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  MISSING_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    MISSING_CODE_ERROR);    	non-compiled	[CE]  	93	None	replace
156	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  PROTECTOR_FN),  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  PROTECTOR_FN),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  PROTECTOR_FN),  USELESS_CODE_ERROR);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
157	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
158	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent));	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
159	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
160	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
161	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  ancestorType);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
162	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  n);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  n);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    n);    	non-compiled	[CE]  	142	None	replace
163	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  n);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  n);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    n);    	non-compiled	[CE]  	142	None	replace
164	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  n);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  n);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    n);    	non-compiled	[CE]  	142	None	replace
165	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  n);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  n);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    n);    	non-compiled	[CE]  	142	None	replace
166	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType));	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    n);    	non-compiled	[CE]  	142	None	replace
167	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  MAX_COMMA));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  MAX_COMMA));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  MAX_COMMA));	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
168	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  DEFAULT_SCRIPT_ERROR),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  DEFAULT_SCRIPT_ERROR),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  DEFAULT_SCRIPT_ERROR),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
169	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
170	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  MAXIMIZED_CODE_ERROR),  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  MAXIMIZED_CODE_ERROR),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  MAXIMIZED_CODE_ERROR),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
171	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getFirstChild()));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getFirstChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getFirstChild()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
172	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR,  level);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
173	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
174	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
175	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.CALL);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
176	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.GETPROP);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
177	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
178	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  not  a  statement	104	None	replace
179	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	104	None	replace
180	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  not  a  statement	104	None	replace
181	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	104	None	replace
182	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.VAR)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	104	None	replace
183	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
184	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
185	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level),  JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level),  JSError.make(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level),  JSError.make(t,  n,  level,  USELESS_CODE_ERROR));	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
186	[BUG]  [BUGGY]  Context.reportError(t,  n,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.reportError(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.reportError(t,  n,  level);	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
187	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
188	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
189	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
190	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	4	None	replace
191	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
192	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	4	None	replace
193	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  not  a  statement	4	None	replace
194	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	4	None	replace
195	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
196	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
197	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	12	None	replace
198	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
199	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  parent);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
200	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  isSimpleOp);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
201	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
202	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
203	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
204	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
205	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;	  ||    level!=    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
206	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
207	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
208	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
209	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
210	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FALSE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FALSE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FALSE)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
211	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	7	None	replace
212	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  not  a  statement  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  not  a  statement	7	None	replace
213	[BUG]  [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.GETPROP  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	7	None	replace
214	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
215	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  not  a  statement  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  not  a  statement	7	None	replace
216	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	7	None	replace
217	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);	  throw    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	91	None	replace
218	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);	  throw    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	91	None	replace
219	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	91	None	replace
220	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  level);	  throw    new    AssertionFailedError(t,    n.getString(),    INVALID_COMMA);    	non-compiled	[CE]  	28	None	replace
221	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n.getString(),  INVALID_COMMA);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n.getString(),  INVALID_COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n.getString(),  INVALID_COMMA);	  throw    new    AssertionFailedError(t,    n.getString(),    INVALID_COMMA);    	non-compiled	[CE]  	28	None	replace
222	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE);	  throw    new    AssertionFailedError(t,    n.getString(),    INVALID_COMMA);    	non-compiled	[CE]  	28	None	replace
223	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.NAME)  {  return;  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()  ==  Token.NAME)  {  return;  }	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
224	[BUG]  [BUGGY]  ||  n.getType()!=  Token.NAME)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.NAME)  {  return;  }	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
225	[BUG]  [BUGGY]  |  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()  ==  Token.NAME)  {  return;  }	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
226	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
227	[BUG]  [BUGGY]  ||  parent.getType()!=  Token.NAME)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()!=  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()!=  Token.NAME)  {  return;  }	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
228	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( " ");	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
229	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.FUNCTION));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(n,  new  Node(Token.FUNCTION));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(n,  new  Node(Token.FUNCTION));	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
230	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.FUNCTION),  level);	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
231	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.FUNCTION,  level));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.FUNCTION,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.FUNCTION,  level));	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
232	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION,  level));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.FUNCTION,  level));	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
233	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.FUNCTION));	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
234	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  parent);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
235	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  ancestorType);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
236	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
237	[BUG]  [BUGGY]  ||  n.getString().equals( "name "))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
238	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getString().equals( "name "))  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  	163	None	replace
239	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  	163	None	replace
240	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  not  a  statement	163	None	replace
241	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  not  a  statement	163	None	replace
242	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild()  ==  n)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
243	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
244	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
245	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {  return;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  parent.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
246	[BUG]  [BUGGY]  ||  n.getFirstChild()  ==  parent)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getFirstChild()  ==  parent)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getFirstChild()  ==  parent)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	191	None	replace
247	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent)  {  return;  }  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  not  a  statement	191	None	replace
248	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent)  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  parent)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
249	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  level);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  level);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
250	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
251	[BUG]  [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(parent.getType()  ==  Token.NAME);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
252	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
253	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
254	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
255	[BUG]  [BUGGY]  test(t,  n,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  level);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
256	[BUG]  [BUGGY]  mock(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  mock(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	mock(t,  n,  NON_GLOBAL_EXPR_RESULT);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
257	[BUG]  [BUGGY]  TestLevel  level  =  n.getLevel();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  TestLevel  level  =  n.getLevel();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	TestLevel  level  =  n.getLevel();	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
258	[BUG]  [BUGGY]  test(t,  n,  Level.WARNING);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  Level.WARNING);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  Level.WARNING);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
259	[BUG]  [BUGGY]  test(t,  n,  Level.SEVERE_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  Level.SEVERE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  Level.SEVERE_ERROR);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
260	[BUG]  [BUGGY]  TestLevel  level  =  t.getLevel();  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  TestLevel  level  =  t.getLevel();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	TestLevel  level  =  t.getLevel();	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
261	[BUG]  [BUGGY]  test(t,  n,  Level.SEVERE);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  Level.SEVERE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  Level.SEVERE);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
262	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  n);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  n);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    n);    	non-compiled	[CE]  	127	None	replace
263	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  n);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  n);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    n);    	non-compiled	[CE]  	127	None	replace
264	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  n,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  n,  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    n);    	non-compiled	[CE]  	127	None	replace
265	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  t);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  t);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    n);    	non-compiled	[CE]  	127	None	replace
266	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	188	None	replace
267	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  <identifier>  expected	188	None	replace
268	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    >=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
269	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getType());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getType());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
270	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType()));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
271	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equals(n.getType());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
272	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getType()));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getType()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
273	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	67	None	replace
274	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	67	None	replace
275	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getString());  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " "  +  n.getString());	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  	121	None	replace
276	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ").equals(n.getString());	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  	121	None	replace
277	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getString());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
278	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getString()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
279	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
280	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getString());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "),  n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
281	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
282	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
283	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
284	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
285	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
286	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAME_ERROR,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAME_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAME_ERROR,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
287	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  UNKNOWN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  UNKNOWN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  UNKNOWN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
288	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  DEFAULT_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  DEFAULT_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
289	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_COMMA,  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_COMMA,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  DEFAULT_COMMA,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
290	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  msg);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  msg);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    msg);    	non-compiled	[CE]  	90	None	replace
291	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  msg);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  msg);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    msg);    	non-compiled	[CE]  	90	None	replace
292	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  msg);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    msg);    	non-compiled	[CE]  	90	None	replace
293	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION),  msg,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION),  msg,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION),  msg,  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    msg);    	non-compiled	[CE]  	90	None	replace
294	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
295	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
296	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
297	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
298	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
299	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  level);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
300	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  level));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  level));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
301	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps,  level));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps,  level));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
302	[BUG]  [BUGGY]  gramps.replaceChild(n,  new  Node(Token.FUNCTION,  parent));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.replaceChild(n,  new  Node(Token.FUNCTION,  parent));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.replaceChild(n,  new  Node(Token.FUNCTION,  parent));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
303	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.cloneTree()));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.cloneTree()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.cloneTree()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
304	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  2)  {  return;  }  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  	160	None	replace
305	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  not  a  statement	160	None	replace
306	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getChildCount()  ==  2)  {  return;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getChildCount()  ==  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  not  a  statement	160	None	replace
307	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  	160	None	replace
308	[BUG]  [BUGGY]  ||  n.getChildCount()  ==  2)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getChildCount()  ==  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	160	None	replace
309	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ".getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ".getMessage());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
310	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
311	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Current  error: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( "Current  error: "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( "Current  error: "  +  n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
312	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
313	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
314	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
315	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
316	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
317	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
318	[BUG]  [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.VAR)  {  throw  new  IllegalArgumentException( " ");	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
319	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
320	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalArgumentException( " ");	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
321	[BUG]  [BUGGY]  |  n.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()  ==  Token.VAR)  {  throw  new  IllegalArgumentException( " ");	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
322	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
323	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  level));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  level));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
324	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  msg);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
325	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  COMPLETE_FN));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  COMPLETE_FN));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  COMPLETE_FN));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
326	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  level));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  level));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
327	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    name);    	non-compiled	[CE]  <identifier>  expected	151	None	replace
328	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  name);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  name);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  name);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    name);    	non-compiled	[CE]  	151	None	replace
329	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    name);    	non-compiled	[CE]  	151	None	replace
330	[BUG]  [BUGGY]  Node  an  =  parent.getLastChild();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  parent.getLastChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  parent.getLastChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
331	[BUG]  [BUGGY]  Node  an  =  parent.getFirstChild();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  parent.getFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  parent.getFirstChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
332	[BUG]  [BUGGY]  Node  an  =  node.getLastChild();  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  node.getLastChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  node.getLastChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
333	[BUG]  [BUGGY]  Node  an  =  n.removeFirstChild();  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.removeFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.removeFirstChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
334	[BUG]  [BUGGY]  Node  an  =  n.getNext();  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getNext();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getNext();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
335	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString()));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(n.getString()));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
336	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(n.getString()));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
337	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  level);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  level);	  Throwables.throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(n.getString()));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
338	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  n.getString()));  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(n.getString()));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
339	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
340	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
341	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
342	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
343	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
344	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
345	[BUG]  [BUGGY]  ||  parent.getType()!=  Token.VAR)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()!=  Token.VAR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()!=  Token.VAR)  {  return;	  ||    n.getType()!=    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
346	[BUG]  [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.VAR)  {  throw  new  IllegalStateException( " ");	  ||    n.getType()!=    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
347	[BUG]  [BUGGY]  |  n.getType()!=  Token.VAR)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()!=  Token.VAR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()!=  Token.VAR)  {  return;	  ||    n.getType()!=    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
348	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  gramps);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    gramps);    	non-compiled	[CE]  	137	None	replace
349	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION),  gramps,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION),  gramps,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION),  gramps,  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    gramps);    	non-compiled	[CE]  	137	None	replace
350	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  ancestorType),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    gramps);    	non-compiled	[CE]  	137	None	replace
351	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  gramps);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    gramps);    	non-compiled	[CE]  	137	None	replace
352	[BUG]  [BUGGY]  gramps.replaceChild(n,  new  Node(Token.FUNCTION),  parent);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.replaceChild(n,  new  Node(Token.FUNCTION),  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.replaceChild(n,  new  Node(Token.FUNCTION),  parent);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    gramps);    	non-compiled	[CE]  	137	None	replace
353	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getFirstChild()));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getFirstChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getFirstChild()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
354	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getLastChild()));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getLastChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getLastChild()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
355	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getString()));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getString()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
356	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getNext()));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getNext()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getNext()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
357	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
358	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getType()));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getType()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
359	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_COMMA)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_COMMA)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_COMMA)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
360	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_COMMA)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_COMMA)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_COMMA)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
361	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
362	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
363	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
364	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
365	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
366	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
367	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
368	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
369	[BUG]  [BUGGY]  String  level  =  n.getLevel()  +  1;  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getLevel()  +  1;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getLevel()  +  1;	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
370	[BUG]  [BUGGY]  String  level  =  n.getLineno();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getLineno();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getLineno();	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
371	[BUG]  [BUGGY]  String  level  =  n.getType();  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getType();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getType();	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
372	[BUG]  [BUGGY]  String  level  =  n.getLevel()  *  2;  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getLevel()  *  2;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getLevel()  *  2;	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
373	[BUG]  [BUGGY]  String  level  =  n.getLocalName();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getLocalName();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getLocalName();	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
374	[BUG]  [BUGGY]  String  level  =  n.getParent();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getParent();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getParent();	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
375	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  0));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  0));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  0));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
376	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  1  -  1));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  1  -  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  1  -  1));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
377	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  3));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  3));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  3));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
378	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  Level.WARNING));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  Level.WARNING));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  Level.WARNING));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
379	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  4));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  4));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  4));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
380	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  COMPLETE_SIGNATURE));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  COMPLETE_SIGNATURE));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  COMPLETE_SIGNATURE));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
381	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  gramps);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    gramps);    	non-compiled	[CE]  	123	None	replace
382	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    gramps);    	non-compiled	[CE]  	123	None	replace
383	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  gramps,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  gramps,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  gramps,  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    gramps);    	non-compiled	[CE]  	123	None	replace
384	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getModule()));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getModule()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getModule()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
385	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule(),  level));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule(),  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule(),  level));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
386	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getSourceName()));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getSourceName()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getSourceName()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
387	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()  +  1));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()  +  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()  +  1));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
388	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getModule(),  level));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getModule(),  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getModule(),  level));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
389	[BUG]  [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  msg);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  PROTECTOR_FN,  msg);	  t.report(n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	132	None	replace
390	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  msg,  ancestorType);	  t.report(n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	132	None	replace
391	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  isResultUsed);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  msg,  isResultUsed);	  t.report(n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	132	None	replace
392	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);	  t.report(n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	132	None	replace
393	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);	  t.report(n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	132	None	replace
394	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
395	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
396	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
397	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  proTECTOR_FN,  ancestorType);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  proTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  proTECTOR_FN,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
398	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN,  ancestorType);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
399	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  COMPLETE_ERROR,  ancestorType);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  COMPLETE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  COMPLETE_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
400	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()  ==  Token.VAR)  {  return;  }	  ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
401	[BUG]  [BUGGY]  ||  n.getType()!=  Token.VAR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.VAR)  {  return;  }	  ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
402	[BUG]  [BUGGY]  |  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()  ==  Token.VAR)  {  return;  }	  ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
403	[BUG]  [BUGGY]  ||  parent.getType()!=  Token.VAR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()!=  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()!=  Token.VAR)  {  return;  }	  ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
404	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
405	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
406	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
407	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
408	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
409	[BUG]  [BUGGY]  Node  an  =  n.getAncestor();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	70	None	replace
410	[BUG]  [BUGGY]  Node  an  =  n.getAncestor(1);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor(1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor(1);	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	70	None	replace
411	[BUG]  [BUGGY]  n.removeChild(n);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(n);	  n.removeChild(parent);    	non-compiled	[CE]  	159	None	replace
412	[BUG]  [BUGGY]  n.removeChild(this);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(this);	  n.removeChild(parent);    	non-compiled	[CE]  	159	None	replace
413	[BUG]  [BUGGY]  n.replaceChild(n,  parent);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(n,  parent);	  n.removeChild(parent);    	non-compiled	[CE]  	159	None	replace
414	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.EXPR_RESULT));  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(n,  new  Node(Token.EXPR_RESULT));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(n,  new  Node(Token.EXPR_RESULT));	  n.removeChild(parent);    	non-compiled	[CE]  	159	None	replace
415	[BUG]  [BUGGY]  n.removeChild(a);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(a);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(a);	  n.removeChild(parent);    	non-compiled	[CE]  	159	None	replace
416	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
417	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
418	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  level,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
419	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
420	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
421	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
422	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	56	None	replace
423	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	56	None	replace
424	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
425	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  not  a  statement	56	None	replace
426	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
427	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
428	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  MISSING_CODE_ERROR);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  MISSING_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    level);    	non-compiled	[CE]  	22	None	replace
429	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR,  level);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getString(),    level);    	non-compiled	[CE]  	22	None	replace
430	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  DEFAULT_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    level);    	non-compiled	[CE]  	22	None	replace
431	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
432	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
433	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
434	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
435	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType()));  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getType()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
436	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
437	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType()));  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getType()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
438	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getType());  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "),  n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
439	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
440	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
441	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
442	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level1,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
443	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
444	[BUG]  [BUGGY]  Throwables.throw  new  InternalError(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  InternalError(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  InternalError(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
445	[BUG]  [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n.getString());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  PROTECTOR_FN,  n.getString());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
446	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  n.getString());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  n.getString());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
447	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  parent.getString());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  parent.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  parent.getString());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
448	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  n.getString());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  msg,  n.getString());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
449	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getString(),  parent);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getString(),  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getString(),  parent);	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
450	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_STRICT_MODULE);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_STRICT_MODULE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_STRICT_MODULE);	  throw    new    AssertionFailedError(t,    n,    level,    NON_STRICT_MODULE);    	non-compiled	[CE]  	94	None	replace
451	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);	  throw    new    AssertionFailedError(t,    n,    level,    NON_STRICT_MODULE);    	non-compiled	[CE]  <identifier>  expected	94	None	replace
452	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  throw    new    AssertionFailedError(t,    n,    level,    NON_STRICT_MODULE);    	non-compiled	[CE]  	94	None	replace
453	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_STRICT_MODULE);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_STRICT_MODULE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  NON_STRICT_MODULE);	  throw    new    AssertionFailedError(t,    n,    level,    NON_STRICT_MODULE);    	non-compiled	[CE]  	94	None	replace
454	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getString(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	179	None	replace
455	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getString(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	179	None	replace
456	[BUG]  [BUGGY]  Throwables.checkState(n.getString(),  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getString(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getString(),  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getString(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	179	None	replace
457	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
458	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
459	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
460	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
461	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
462	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  return;	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
463	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION,  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION,  level);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
464	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
465	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
466	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
467	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
468	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
469	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()  ==  Token.FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()  ==  Token.FUNCTION)  {  return;	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
470	[BUG]  [BUGGY]  ||  n.getType()!=  Token.FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.FUNCTION)  {  return;	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
471	[BUG]  [BUGGY]  |  n.getType()  ==  Token.FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()  ==  Token.FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()  ==  Token.FUNCTION)  {  return;	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
472	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.FUNCTION)  {  throw  new  IllegalStateException( " ");	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
473	[BUG]  [BUGGY]  ||  parent.getType()!=  Token.FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()!=  Token.FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()!=  Token.FUNCTION)  {  return;	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
474	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
475	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
476	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
477	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
478	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
479	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getMessage());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "  +  n.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "  +  n.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
480	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getMessage());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  n.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "),  n.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
481	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace();  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").printStackTrace();	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
482	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage());  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
483	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  t.getMessage());  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "),  t.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "),  t.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
484	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage();  [CE]  <identifier>  expected  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").getMessage();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").getMessage();	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
485	[BUG]  [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  PROTECTOR_FN,  n);	  t.report(n,    level,    USELESS_CODE_ERROR,    n);    	non-compiled	[CE]  	136	None	replace
486	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
487	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
488	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
489	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
490	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_COMMA)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_COMMA)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	149	None	replace
491	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");	  ||    parent.getType()    ==    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
492	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  level);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  	102	None	replace
493	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  <identifier>  expected	102	None	replace
494	[BUG]  [BUGGY]  Throwables.checkState(n.getString(),  UNKNOWN_EXPR_TYPE);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getString(),  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getString(),  UNKNOWN_EXPR_TYPE);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  	102	None	replace
495	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  UNKNOWN_EXPR_TYPE);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  UNKNOWN_EXPR_TYPE);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  	102	None	replace
496	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
497	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  INVALID_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  INVALID_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  INVALID_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
498	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
499	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
500	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
501	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLineno());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLineno());	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
502	[BUG]  [BUGGY]  reportError(t,  n,  level,  PROTECTOR_FN,  n.getString());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  PROTECTOR_FN,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  PROTECTOR_FN,  n.getString());	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
503	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent.getString());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent.getString());	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
504	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
505	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.toString());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.toString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.toString());	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
506	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getMessage());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getMessage());	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
507	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  parent);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  parent);	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
508	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
509	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  not  a  statement	190	None	replace
510	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	190	None	replace
511	[BUG]  [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	190	None	replace
512	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.VAR);	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	190	None	replace
513	[BUG]  [BUGGY]  t.report(n,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
514	[BUG]  [BUGGY]  t.log(Level.WARNING,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.log(Level.WARNING,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.log(Level.WARNING,  level,  USELESS_CODE_ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
515	[BUG]  [BUGGY]  t.report(n,  Level.WARNING);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  Level.WARNING);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  Level.WARNING);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
516	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  message);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
517	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  <identifier>  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  <identifier>  expected	13	None	replace
518	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
519	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  message);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  message);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
520	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
521	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
522	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
523	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
524	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
525	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
526	[BUG]  [BUGGY]  parent.getType()!=  Token.NAME)  {  return;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()!=  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()!=  Token.NAME)  {  return;  }	  parent.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
527	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME)  {  return;  }	  parent.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
528	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }	  parent.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
529	[BUG]  [BUGGY]  ||  parent.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()  ==  Token.FUNCTION)  {  return;  }	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
530	[BUG]  [BUGGY]  ||  n.getType()!=  Token.FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.FUNCTION)  {  return;  }	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
531	[BUG]  [BUGGY]  |  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()  ==  Token.FUNCTION)  {  return;  }	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
532	[BUG]  [BUGGY]  ||  parent.getType()!=  Token.FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  parent.getType()!=  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  parent.getType()!=  Token.FUNCTION)  {  return;  }	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
533	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
534	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
535	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
536	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
537	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  false);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
538	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_COMMA    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
539	[BUG]  [BUGGY]  ||  level!=  USELESS_COMMA  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_COMMA  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_COMMA  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_COMMA    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
540	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_COMMA    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
541	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
542	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    n));    	non-compiled	[CE]  	139	None	replace
543	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getType()));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getType()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    n));    	non-compiled	[CE]  	139	None	replace
544	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	65	None	replace
545	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	65	None	replace
546	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	65	None	replace
547	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
548	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_FAILURE  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
549	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " "));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
550	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError( " ");  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError( " ");	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
551	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Current  error: "  +  n.getString());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Current  error: "  +  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( "Current  error: "  +  n.getString());	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
552	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  1));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  1));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
553	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  0));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  0));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  0));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
554	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  Level.WARNING));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  Level.WARNING));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  Level.WARNING));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
555	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level  -  1));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level  -  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level  -  1));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
556	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this,  level));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  this,  level));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
557	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  getClass()));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  getClass()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  getClass()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
558	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this),  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  this),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
559	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  + "] ");  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  + "] ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  + "] ");	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
560	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  + ": ");  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  + ": ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  + ": ");	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
561	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN,  msg);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN,  msg);	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
562	[BUG]  [BUGGY]  n.setString(PROTECTOR_NAME);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_NAME);	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
563	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  +  1);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  +  1);	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
564	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLastChild());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLastChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getLastChild());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getFirstChild());    	non-compiled	[CE]  	134	None	replace
565	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  parent.getFirstChild());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  parent.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  parent.getFirstChild());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getFirstChild());    	non-compiled	[CE]  	134	None	replace
566	[BUG]  [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n.getFirstChild());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  PROTECTOR_FN,  n.getFirstChild());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getFirstChild());    	non-compiled	[CE]  	134	None	replace
567	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
568	[BUG]  [BUGGY]  parent.getType()!=  Token.FUNCTION)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()!=  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()!=  Token.FUNCTION)  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
569	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()  ==  Token.EXPR_RESULT)  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
570	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.EXPR_RESULT)  {  return;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild().getType()!=  Token.EXPR_RESULT)  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
571	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.isEmpty())  {  return;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.isEmpty())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.isEmpty())  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
572	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
573	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
574	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
575	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
576	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
577	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
578	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	9	None	replace
579	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  <identifier>  expected	9	None	replace
580	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
581	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
582	[BUG]  [BUGGY]  ||  level!=  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
583	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
584	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
585	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getModule()));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getModule()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getModule()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    t.getModule()));    	non-compiled	[CE]  	170	None	replace
586	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    t.getModule()));    	non-compiled	[CE]  	170	None	replace
587	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule(),  level));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule(),  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule(),  level));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    t.getModule()));    	non-compiled	[CE]  	170	None	replace
588	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getProp(Node.SOURCENAME_PROP)));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getProp(Node.SOURCENAME_PROP)));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getProp(Node.SOURCENAME_PROP)));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    t.getModule()));    	non-compiled	[CE]  	170	None	replace
589	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()  +  1));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()  +  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()  +  1));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    t.getModule()));    	non-compiled	[CE]  	170	None	replace
590	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
591	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
592	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
593	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
594	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
595	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
596	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
597	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
598	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(n,  t,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(n,  t,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(n,  t,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
599	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
600	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")&&  n.getString().endsWith( "__ "));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")&&  n.getString().endsWith( "__ "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ")&&  n.getString().endsWith( "__ "));	  throw    new    IllegalArgumentException(   "   ")    &&    n.getString().endsWith(   "__   "));    	non-compiled	[CE]  <identifier>  expected	175	None	replace
601	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  n.getString().startsWith( "__ "));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  n.getString().startsWith( "__ "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ")  &&  n.getString().startsWith( "__ "));	  throw    new    IllegalArgumentException(   "   ")    &&    n.getString().endsWith(   "__   "));    	non-compiled	[CE]  	175	None	replace
602	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  parent.getString().endsWith( "__ "));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  parent.getString().endsWith( "__ "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ")  &&  parent.getString().endsWith( "__ "));	  throw    new    IllegalArgumentException(   "   ")    &&    n.getString().endsWith(   "__   "));    	non-compiled	[CE]  	175	None	replace
603	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  n.getString().equals( "__ "));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ")  &&  n.getString().equals( "__ "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ")  &&  n.getString().equals( "__ "));	  throw    new    IllegalArgumentException(   "   ")    &&    n.getString().endsWith(   "__   "));    	non-compiled	[CE]  	175	None	replace
604	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  1)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  	162	None	replace
605	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  not  a  statement	162	None	replace
606	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  	162	None	replace
607	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getChildCount()  ==  1)  {  return;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getChildCount()  ==  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getChildCount()  ==  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  not  a  statement	162	None	replace
608	[BUG]  [BUGGY]  ||  n.getChildCount()  ==  1)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getChildCount()  ==  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getChildCount()  ==  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	162	None	replace
609	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()!=  1)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()!=  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getChildCount()!=  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  	162	None	replace
610	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  msg);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  msg);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    level));    	non-compiled	[CE]  	60	None	replace
611	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  t);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  t);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    level));    	non-compiled	[CE]  	60	None	replace
612	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  this);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  this);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    level));    	non-compiled	[CE]  	60	None	replace
613	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  false);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  false);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    level));    	non-compiled	[CE]  	60	None	replace
614	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  PROTECTOR_FN);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  PROTECTOR_FN);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    level));    	non-compiled	[CE]  	60	None	replace
615	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
616	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  MISSING_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
617	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  DEFAULT_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
618	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  STRICT_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
619	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURE);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
620	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  NON_STRICT_MODULE);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
621	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  level);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME,  level);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
622	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
623	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
624	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
625	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
626	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  annotated);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  annotated);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  annotated);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
627	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  parent);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
628	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  annotated);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  annotated);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  annotated);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
629	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  <identifier>  expected	186	None	replace
630	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_STRICT_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_STRICT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  UNKNOWN_STRICT_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    UNKNOWN_STRICT_ERROR);    	non-compiled	[CE]  <identifier>  expected	92	None	replace
631	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  UNKNOWN_STRICT_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  UNKNOWN_STRICT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  UNKNOWN_STRICT_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    UNKNOWN_STRICT_ERROR);    	non-compiled	[CE]  	92	None	replace
632	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getFirstChild()  ==  n)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	161	None	replace
633	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  not  a  statement	161	None	replace
634	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	161	None	replace
635	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  not  a  statement	161	None	replace
636	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  parent)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  parent)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  parent)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	161	None	replace
637	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this);	  new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	95	None	replace
638	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message);	  new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	95	None	replace
639	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
640	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
641	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
642	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FACTOR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
643	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
644	[BUG]  [BUGGY]  new  IllegalArgumentException( "Unexpected  level: "  +  n.getType());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( "Unexpected  level: "  +  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( "Unexpected  level: "  +  n.getType());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
645	[BUG]  [BUGGY]  new  IllegalArgumentException( " "));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "));	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
646	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  level);	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
647	[BUG]  [BUGGY]  new  IllegalArgumentException( " ")  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " ")  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " ")	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
648	[BUG]  [BUGGY]  new  IllegalArgumentException( "Unexpected  level: "  +  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( "Unexpected  level: "  +  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( "Unexpected  level: "  +  level);	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
649	[BUG]  [BUGGY]  new  IllegalArgumentException( "Unexpected  level: ");  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( "Unexpected  level: ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( "Unexpected  level: ");	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
650	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  t.report(n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	20	None	replace
651	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  null);	  t.report(n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	20	None	replace
652	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_EXPR_RESULT);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_EXPR_RESULT);	  t.report(n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	20	None	replace
653	[BUG]  [BUGGY]  test(n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(n,  level,  NON_GLOBAL_EXPR_RESULT);	  t.report(n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	20	None	replace
654	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	57	None	replace
655	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  	57	None	replace
656	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  	57	None	replace
657	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	57	None	replace
658	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	57	None	replace
659	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME,  level);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
660	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
661	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
662	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
663	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
664	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
665	[BUG]  [BUGGY]  safeTree(n,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  level);	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
666	[BUG]  [BUGGY]  safeTree(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(t,  n,  NON_GLOBAL_EXPR_RESULT);	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
667	[BUG]  [BUGGY]  SafeTree(n,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SafeTree(n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SafeTree(n,  level);	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
668	[BUG]  [BUGGY]  safeTree(n,  n.getFirstChild());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  n.getFirstChild());	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
669	[BUG]  [BUGGY]  safeTree(n,  Level.WARNING);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  Level.WARNING);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  Level.WARNING);	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
670	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPECTED);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPECTED);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPECTED);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPECTED);    	non-compiled	[CE]  	181	None	replace
671	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPECTED);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPECTED);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPECTED);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPECTED);    	non-compiled	[CE]  	181	None	replace
672	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
673	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  msg);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
674	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  <identifier>  expected	10	None	replace
675	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
676	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
677	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
678	[BUG]  [BUGGY]  AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.error(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
679	[BUG]  [BUGGY]  AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warn(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
680	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
681	[BUG]  [BUGGY]  AssertionError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionError.warning(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
682	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  not  a  statement	150	None	replace
683	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  not  a  statement	150	None	replace
684	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	150	None	replace
685	[BUG]  [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	150	None	replace
686	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	150	None	replace
687	[BUG]  [BUGGY]  |  n.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
688	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.VAR)  {  throw  new  IllegalStateException( " ");  }	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
689	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  not  a  statement  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
690	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  	5	None	replace
691	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {  return;  }  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	5	None	replace
692	[BUG]  [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  	5	None	replace
693	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  &&  n.getType()  ==  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  	5	None	replace
694	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  this);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  this);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    level));    	non-compiled	[CE]  	87	None	replace
695	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  USELESS_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  USELESS_CODE_ERROR);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    level));    	non-compiled	[CE]  	87	None	replace
696	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  t);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  t);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    level));    	non-compiled	[CE]  	87	None	replace
697	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  false);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level),  false);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    level));    	non-compiled	[CE]  	87	None	replace
698	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level  -  1));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  level  -  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  level  -  1));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    level));    	non-compiled	[CE]  	87	None	replace
699	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
700	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
701	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  return;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  not  a  statement	59	None	replace
702	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	59	None	replace
703	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	59	None	replace
704	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  not  a  statement	59	None	replace
705	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.CALL)  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	59	None	replace
706	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  MAX_COMMA),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  MAX_COMMA),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  MAX_COMMA),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
707	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getFirstChild()),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getFirstChild()),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getFirstChild()),  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
708	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)+  1,  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
709	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
710	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_REGEXP)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_REGEXP)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_REGEXP)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
711	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	153	None	replace
712	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  proTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    PROTECTOR_FN);    	non-compiled	[CE]  	153	None	replace
713	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    PROTECTOR_FN);    	non-compiled	[CE]  	153	None	replace
714	[BUG]  [BUGGY]  safeTree(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  safeTree(n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	105	None	replace
715	[BUG]  [BUGGY]  warn(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  warn(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	warn(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  safeTree(n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	105	None	replace
716	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  parent);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
717	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
718	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  msg);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
719	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
720	[BUG]  [BUGGY]  reportError(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  PROTECTOR_FN);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
721	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
722	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  message);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
723	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
724	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
725	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
726	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FALSE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FALSE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FALSE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
727	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
728	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
729	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
730	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
731	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg));  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  msg));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
732	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	16	None	replace
733	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  <identifier>  expected	16	None	replace
734	[BUG]  [BUGGY]  Node  an  =  n.getLastChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getLastChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getLastChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
735	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  parent.replaceChild(n,  new  Node(Token.EMPTY),  gramps);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getFirstChild();  parent.replaceChild(n,  new  Node(Token.EMPTY),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getFirstChild();  parent.replaceChild(n,  new  Node(Token.EMPTY),  gramps);	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
736	[BUG]  [BUGGY]  Node  an  =  n.getAncestorChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestorChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestorChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
737	[BUG]  [BUGGY]  Node  an  =  n.getNext();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getNext();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getNext();  parent.replaceChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
738	[BUG]  [BUGGY]  Node  an  =  n.getParent();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getParent();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getParent();  parent.replaceChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
739	[BUG]  [BUGGY]  Node  an  =  n.getAncestor();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor();  parent.replaceChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
740	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  &&  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	58	None	replace
741	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  not  a  statement  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  not  a  statement	58	None	replace
742	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	58	None	replace
743	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	58	None	replace
744	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  not  a  statement  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  not  a  statement	58	None	replace
745	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent);	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
746	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent.getCharno());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent.getCharno());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
747	[BUG]  [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n.getLineno());  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  PROTECTOR_FN,  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  PROTECTOR_FN,  n.getLineno());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
748	[BUG]  [BUGGY]  t.report(n,  level,  DEFAULT_CODE_ERROR,  n.getLineno());  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  DEFAULT_CODE_ERROR,  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  DEFAULT_CODE_ERROR,  n.getLineno());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
749	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  ancestorType);  [CE]  [FE]                                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  ancestorType);	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
750	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent.getType());  [CE]  [FE]                                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  parent.getType());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
751	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  level);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
752	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
753	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
754	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
755	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
756	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
757	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
758	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
759	[BUG]  [BUGGY]  Throwables.checkState(n.getLineno(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getLineno(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getLineno(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
760	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
761	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_DEFINE_INIT_ERROR,  level);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_DEFINE_INIT_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_DEFINE_INIT_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
762	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  n,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
763	[BUG]  [BUGGY]  reportError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR,  level);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
764	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  level);	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
765	[BUG]  [BUGGY]  Throwables.checkState(parent.getType()  ==  Token.NAME);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(parent.getType()  ==  Token.NAME);	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
766	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT);	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
767	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.FUNCTION);	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
768	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP);	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
769	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL);	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
770	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
771	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestor);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestor);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
772	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
773	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  parent);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
774	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestor);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  ancestor);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
775	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	107	None	replace
776	[BUG]  [BUGGY]  reportError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n.getLineno(),  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	107	None	replace
777	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	107	None	replace
778	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	107	None	replace
779	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  level));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY,  level));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
780	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  node.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getFirstChild();  node.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getFirstChild();  node.replaceChild(n,  new  Node(Token.EMPTY));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
781	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY),  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY),  level);	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
782	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY),  t);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY),  t);	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
783	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
784	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  msg));  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY,  msg));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
785	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION,  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION,  level);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
786	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
787	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.NAME);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
788	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
789	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
790	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
791	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
792	[BUG]  [BUGGY]  Context.reportError(t,  n.getString(),  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.reportError(t,  n.getString(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.reportError(t,  n.getString(),  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	26	None	replace
793	[BUG]  [BUGGY]  Throwables.checkState(n.getString(),  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getString(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getString(),  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	26	None	replace
794	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  parent,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  parent,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  parent,  level);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
795	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  an);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  an);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
796	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  n);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  n);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
797	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  level);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  level);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
798	[BUG]  [BUGGY]  gramps.getParent().replaceChild(parent,  n);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(parent,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(parent,  n);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
799	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  an,  parent);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  an,  parent);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
800	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  msg);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  msg);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
801	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleEffectFreeCode);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isResultUsed);    	non-compiled	[CE]  	14	None	replace
802	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isResultUsed);    	non-compiled	[CE]  	14	None	replace
803	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  <identifier>  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isResultUsed);    	non-compiled	[CE]  <identifier>  expected	14	None	replace
804	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  this.protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isResultUsed);    	non-compiled	[CE]  	14	None	replace
805	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN,  msg));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN,  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN,  msg));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    msg));    	non-compiled	[CE]  	140	None	replace
806	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    msg));    	non-compiled	[CE]  	140	None	replace
807	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg,  level));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg,  level));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    msg));    	non-compiled	[CE]  	140	None	replace
808	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	27	None	replace
809	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
810	[BUG]  [BUGGY]  Throwables.showError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.showError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.showError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	27	None	replace
811	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	27	None	replace
812	[BUG]  [BUGGY]  Throwables.checkState(n.getString(),  n,  PROTECTOR_FN);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getString(),  n,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getString(),  n,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	27	None	replace
813	[BUG]  [BUGGY]  Node  an  =  parent.getParent();  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  parent.getParent();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  parent.getParent();	  Node    an    =    n.getParent();    	non-compiled	[CE]  	73	None	replace
814	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN,  msg);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
815	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level,  msg);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  level,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
816	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  msg,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  msg,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  msg,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
817	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  <identifier>  expected	185	None	replace
818	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  msg);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  INVALID_COMMA,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
819	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE,  msg);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURE,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
820	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)-  1,  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)-  1,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)-  1,  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
821	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)/  2,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)/  2,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)/  2,  level);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
822	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)+  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)+  1);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
823	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FUNCTION)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
824	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  t);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME,  t);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
825	[BUG]  [BUGGY]  Context.checkState(parent.getType()  ==  Token.NAME);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(parent.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(parent.getType()  ==  Token.NAME);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
826	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  parent);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME,  parent);	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
827	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
828	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  n.getMessage());  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  n.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ",  n.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
829	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException(n.getMessage());  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException(n.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException(n.getMessage());	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
830	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
831	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	164	None	replace
832	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getChildCount())  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getChildCount())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getChildCount())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
833	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level  ==  n.getType())  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
834	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
835	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  1)  {  return;  }  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  &&  n.getChildCount()  ==  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  not  a  statement	162	None	replace
836	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.SCRIPT)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	150	None	replace
837	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  USELESS_CODE_ERROR),  level);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  USELESS_CODE_ERROR),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  USELESS_CODE_ERROR),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
838	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  1),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  1),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  1),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
839	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  USELESS_CODE_ERROR));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  USELESS_CODE_ERROR));	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
840	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getFirstChild()),  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getFirstChild()),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getFirstChild()),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
841	[BUG]  [BUGGY]  ||  n.getType()  >=  Token.VAR)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  >=  Token.VAR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  >=  Token.VAR)  {  return;	  ||    n.getType()!=    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
842	[BUG]  [BUGGY]  ||(n.getType()  ==  Token.VAR))  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||(n.getType()  ==  Token.VAR))  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||(n.getType()  ==  Token.VAR))  {  return;	  ||    n.getType()!=    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
843	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.SCRIPT)  {  return;  }  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	103	None	replace
844	[BUG]  [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	103	None	replace
845	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	176	None	replace
846	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_COMMA)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
847	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_COMMA)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_COMMA)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_COMMA)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
848	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
849	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  <identifier>  expected	166	None	replace
850	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  USELESS_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  USELESS_CODE_ERROR);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    level));    	non-compiled	[CE]  	60	None	replace
851	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
852	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	190	None	replace
853	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.isEmpty())  {  return;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.isEmpty())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.isEmpty())  {  return;  }	  parent.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
854	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.isComma())  {  return;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.isComma())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.isComma())  {  return;  }	  parent.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
855	[BUG]  [BUGGY]  TvUtil.report(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  TvUtil.report(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	TvUtil.report(n,  level,  USELESS_CODE_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
856	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_EXPR_ERROR);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_EXPR_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_EXPR_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
857	[BUG]  [BUGGY]  t.report(n,  level-1,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level-1,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level-1,  USELESS_CODE_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
858	[BUG]  [BUGGY]  t.report(n,  level1,  USELESS_CODE_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level1,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level1,  USELESS_CODE_ERROR);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
859	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  name);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  name);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  name);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    name);    	non-compiled	[CE]  	151	None	replace
860	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  protectionSideEffectFreeCode);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    name);    	non-compiled	[CE]  	151	None	replace
861	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
862	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
863	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestor);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ancestor);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
864	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestor);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestor);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
865	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name);	  new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	95	None	replace
866	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  PROTECTOR_FN);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  PROTECTOR_FN);	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
867	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level),  PROTECTOR_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level),  PROTECTOR_FN);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
868	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level),  USELESS_CODE_ERROR,  ancestorType);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
869	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  PROTECTOR_FN);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  PROTECTOR_FN);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
870	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  msg);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
871	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
872	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    level);    	non-compiled	[CE]  	23	None	replace
873	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level1,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level1,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level1,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    level);    	non-compiled	[CE]  	23	None	replace
874	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  msg));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  msg));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    msg));    	non-compiled	[CE]  	140	None	replace
875	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN,  ancestorType));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN,  ancestorType));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN,  ancestorType));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    msg));    	non-compiled	[CE]  	140	None	replace
876	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  t);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  msg),  t);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    msg));    	non-compiled	[CE]  	140	None	replace
877	[BUG]  [BUGGY]  test(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_STRICT_MODULE);    	non-compiled	[CE]  	94	None	replace
878	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getType()));  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getType()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getType()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
879	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getFirstChild()));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getFirstChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getFirstChild()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
880	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getString()));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  Token.name(n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
881	[BUG]  [BUGGY]  n.setType(Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.NAME  ||  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	161	None	replace
882	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  n)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  n)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	161	None	replace
883	[BUG]  [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	56	None	replace
884	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.GETPROP)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	56	None	replace
885	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  n.getCharno());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  n.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  n.getCharno());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
886	[BUG]  [BUGGY]  t.report(n,  level,  UNKNOWN_SIGNATURES_ERROR,  n.getLineno());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  UNKNOWN_SIGNATURES_ERROR,  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  UNKNOWN_SIGNATURES_ERROR,  n.getLineno());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
887	[BUG]  [BUGGY]  t.log(Level.WARNING, "Unexpected  level: "  +  level);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.log(Level.WARNING, "Unexpected  level: "  +  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.log(Level.WARNING, "Unexpected  level: "  +  level);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
888	[BUG]  [BUGGY]  t.report(n,  Level.ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  Level.ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  Level.ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
889	[BUG]  [BUGGY]  t.report(n,  level  +  1);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level  +  1);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
890	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  t);	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
891	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  n.getChildCount());	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
892	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  n.getString());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  n.getString());	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
893	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
894	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  t);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME,  t);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
895	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME,  n);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
896	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
897	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getJSDocInfo());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getJSDocInfo());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getJSDocInfo());	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
898	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
899	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_SIGNATURES);	  throw    new    AssertionFailedError(t,    n.getString(),    INVALID_COMMA);    	non-compiled	[CE]  	28	None	replace
900	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
901	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLineno());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLineno());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
902	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n.getSourceName());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
903	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  isResultUsed);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  isResultUsed);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
904	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
905	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.NAME)  {  throw  new  IllegalStateException( " ");  }	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
906	[BUG]  [BUGGY]  ||  n.getType()  >=  Token.NAME)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  >=  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  >=  Token.NAME)  {  return;  }	  ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
907	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  t));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
908	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this),  gramps);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  this),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  this),  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
909	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_NAME));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_NAME));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_NAME));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
910	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  charAt(0)));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  charAt(0)));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  charAt(0)));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
911	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_ERROR,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	27	None	replace
912	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  protectionSideEffectFreeCode);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  	187	None	replace
913	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  USELESS_CODE_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
914	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
915	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
916	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  PROTECTOR_FN);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  PROTECTOR_FN);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
917	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  DEFAULT_NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  DEFAULT_NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  DEFAULT_NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
918	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURES_ERROR);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURES_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  UNKNOWN_SIGNATURES_ERROR);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	21	None	replace
919	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  level,  NON_GLOBAL_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_ERROR);    	non-compiled	[CE]  	182	None	replace
920	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  Level.WARNING,  level,  NON_GLOBAL_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_ERROR);    	non-compiled	[CE]  	182	None	replace
921	[BUG]  [BUGGY]  throw  new  IllegalArgumentException(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_ERROR);    	non-compiled	[CE]  	182	None	replace
922	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	104	None	replace
923	[BUG]  [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	104	None	replace
924	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  not  a  statement	104	None	replace
925	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  >=  USELESS_CODE_ERROR)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
926	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
927	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
928	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_COMMA_ERROR,  PROTECTOR_FN);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_COMMA_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  DEFAULT_COMMA_ERROR,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
929	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_NAME,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_NAME,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_NAME,  USELESS_CODE_ERROR,  n);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
930	[BUG]  [BUGGY]  AssertionFailedError.error(t,  n,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.error(t,  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.error(t,  n,  level);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
931	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
932	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  USELESS_CODE_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
933	[BUG]  [BUGGY]  AssertionFailedError.info(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.info(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.info(t,  n,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
934	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  Level.WARNING,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
935	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level1,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
936	[BUG]  [BUGGY]  AssertionFailedError.log(n,  t,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.log(n,  t,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.log(n,  t,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
937	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()),  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  t.getModule()),  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    t.getModule()));    	non-compiled	[CE]  	170	None	replace
938	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
939	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FAILURE)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FAILURE)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
940	[BUG]  [BUGGY]  n.replaceChild(n,  new  Node(Token.ASSIGN));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(n,  new  Node(Token.ASSIGN));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(n,  new  Node(Token.ASSIGN));	  n.removeChild(parent);    	non-compiled	[CE]  	159	None	replace
941	[BUG]  [BUGGY]  t.report(n,  level,  PROTECTOR_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  PROTECTOR_FN);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
942	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  message);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
943	[BUG]  [BUGGY]  new  IllegalStateException( " ");  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalStateException( " ");	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
944	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  level;  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  level;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  level;	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
945	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.isComma());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.isComma());	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
946	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getString());	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
947	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
948	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  t);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  t);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
949	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT,  n.getFirstChild());	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
950	[BUG]  [BUGGY]  safeTree(n,  parent);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  parent);	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
951	[BUG]  [BUGGY]  safeTree(n,  n.getLastChild());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  n.getLastChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  n.getLastChild());	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
952	[BUG]  [BUGGY]  safeTree(n,  n.getType());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  n.getType());	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
953	[BUG]  [BUGGY]  safeTree(n,  n.getJSDocInfo());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  n.getJSDocInfo());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  n.getJSDocInfo());	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
954	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  proTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  proTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  proTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
955	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  null);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
956	[BUG]  [BUGGY]  t.report(n,  USELESS_CODE_ERROR,  level,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  USELESS_CODE_ERROR,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  USELESS_CODE_ERROR,  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
957	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  parent,  this);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  parent,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  parent,  this);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
958	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  this);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  this);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
959	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  parent,  ancestorType);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  parent,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  parent,  ancestorType);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
960	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  parent,  false);  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  parent,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  parent,  false);	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
961	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	165	None	replace
962	[BUG]  [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  t  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    PROTECTOR_FN);    	non-compiled	[CE]  	153	None	replace
963	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    MISSING_CODE_ERROR);    	non-compiled	[CE]  	93	None	replace
964	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	9	None	replace
965	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  parent);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	9	None	replace
966	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    n));    	non-compiled	[CE]  	139	None	replace
967	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  this);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  this);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    n));    	non-compiled	[CE]  	139	None	replace
968	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  t);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  t);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    n));    	non-compiled	[CE]  	139	None	replace
969	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n),  msg);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    n));    	non-compiled	[CE]  	139	None	replace
970	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
971	[BUG]  [BUGGY]  ||  n.getType()  >=  Token.FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  >=  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  >=  Token.FUNCTION)  {  return;  }	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
972	[BUG]  [BUGGY]  |  n.getType()!=  Token.FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  |  n.getType()!=  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	|  n.getType()!=  Token.FUNCTION)  {  return;  }	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
973	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
974	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
975	[BUG]  [BUGGY]  String  level  =  n.getQualifiedName();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getQualifiedName();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getQualifiedName();	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
976	[BUG]  [BUGGY]  String  level  =  n.getChildCount();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getChildCount();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getChildCount();	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
977	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  NON_GLOBAL_DEFINE_INIT_ERROR);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
978	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_INIT_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_INIT_ERROR);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
979	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION),  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION),  PROTECTOR_FN);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    msg);    	non-compiled	[CE]  	90	None	replace
980	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION)+  1,  msg);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION)+  1,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION)+  1,  msg);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    msg);    	non-compiled	[CE]  	90	None	replace
981	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()!=  2)  {  return;  }  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()!=  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getChildCount()!=  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  	160	None	replace
982	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  not  a  statement	160	None	replace
983	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR),  n);	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
984	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckStateException( " "));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckStateException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckStateException( " "));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
985	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckSideEffectsException( " "));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckSideEffectsException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckSideEffectsException( " "));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
986	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  getName()  + ":  isIgnoreCase(n.getString()));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  getName()  + ":  isIgnoreCase(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  getName()  + ":  isIgnoreCase(n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(n.getString()));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
987	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
988	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getFirstChild());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
989	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getModule());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
990	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.isComma());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
991	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  + ": "  +  ancestorType);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  + ": "  +  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  + ": "  +  ancestorType);	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
992	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  + ", "  +  ancestorType);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  + ", "  +  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  + ", "  +  ancestorType);	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
993	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  + "n ");  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  + "n ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  + "n ");	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
994	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	188	None	replace
995	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
996	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  NON_SIGNATURE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
997	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level  +  1);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level  +  1);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
998	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level  +  1);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  level  +  1);	  throw    new    AssertionFailedError(t,    n.getString(),    level);    	non-compiled	[CE]  	22	None	replace
999	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  level);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  level);	  throw    new    AssertionFailedError(t,    n.getString(),    level);    	non-compiled	[CE]  	22	None	replace
1000	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  msg);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  msg);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
1001	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  ancestorType);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
1002	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  COMMA));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  COMMA));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  COMMA));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
1003	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY),  n);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.EMPTY),  n);	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
1004	[BUG]  [BUGGY]  n.addChildToFront(new  Node(Token.EMPTY));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.addChildToFront(new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.addChildToFront(new  Node(Token.EMPTY));	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
1005	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  gramps);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  PROTECTOR_FN),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    gramps);    	non-compiled	[CE]  	137	None	replace
1006	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  1),  gramps);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  1),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  1),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    gramps);    	non-compiled	[CE]  	137	None	replace
1007	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1008	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_EXPECTED)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1009	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
1010	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
1011	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN,  msg);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
1012	[BUG]  [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	4	None	replace
1013	[BUG]  [BUGGY]  n.setType(Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.FUNCTION  ||  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
1014	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level  +  1);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level  +  1);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
1015	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level1,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level1,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level1,  USELESS_CODE_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1016	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NULL_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NULL_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NULL_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1017	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level2,  USELESS_CODE_ERROR);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level2,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level2,  USELESS_CODE_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1018	[BUG]  [BUGGY]  Node  an  =  n.removeFirstChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.removeFirstChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.removeFirstChild();  parent.replaceChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
1019	[BUG]  [BUGGY]  Node  an  =  n.getAncestor(1);  parent.replaceChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor(1);  parent.replaceChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor(1);  parent.replaceChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
1020	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild();  parent.removeChild(n,  new  Node(Token.EMPTY));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getFirstChild();  parent.removeChild(n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getFirstChild();  parent.removeChild(n,  new  Node(Token.EMPTY));	  Node    an    =    n.getFirstChild();    parent.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	62	None	replace
1021	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  &&  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1022	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1023	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString(),  n.getString()));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").equals(n.getString(),  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").equals(n.getString(),  n.getString()));	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
1024	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  n);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  n);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    n);    	non-compiled	[CE]  	127	None	replace
1025	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)||  n.isComma());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)||  n.isComma());	  parent.replaceChild(n,    new    Node(Token.EMPTY),    n);    	non-compiled	[CE]  	127	None	replace
1026	[BUG]  [BUGGY]  ||  level  ==  USELESS_EXTENDS  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_EXTENDS  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_EXTENDS  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1027	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
1028	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.isComma())  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.isComma())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.isComma())  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
1029	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.hasChildren())  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.hasChildren())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.hasChildren())  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
1030	[BUG]  [BUGGY]  ||  n.getType()  >=  Token.FUNCTION)  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  >=  Token.FUNCTION)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  >=  Token.FUNCTION)  {  return;	  ||    n.getType()    ==    Token.FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
1031	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  return;  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_FLUSH)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FLUSH)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	183	None	replace
1032	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_SIGNATURE));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_SIGNATURE));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_SIGNATURE));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
1033	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  charEnd));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  charEnd));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  charEnd));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
1034	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_MISMATCH));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_MISMATCH));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  TYPE_MISMATCH));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
1035	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.NAME)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  	5	None	replace
1036	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  n);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  n);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
1037	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
1038	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getLastChild()));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getLastChild()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getLastChild()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
1039	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	6	None	replace
1040	[BUG]  [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  return;  }  [CE]  not  a  statement  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  not  a  statement	6	None	replace
1041	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHE_SIZE));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHE_SIZE));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHE_SIZE));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
1042	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHED_NAME));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHED_NAME));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHED_NAME));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
1043	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  USELESS_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  	102	None	replace
1044	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_TYPE,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  	102	None	replace
1045	[BUG]  [BUGGY]  safeTree(n.getString(),  UNKNOWN_EXPR_TYPE);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n.getString(),  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n.getString(),  UNKNOWN_EXPR_TYPE);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  	102	None	replace
1046	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleEffectFreeCode);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isSimpleEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
1047	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
1048	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isResultUsed);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  isResultUsed);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
1049	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  n);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  n);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
1050	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.toString()));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.toString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.toString()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
1051	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR,  t);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR,  t);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
1052	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.isComma());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR  ||  n.isComma());	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
1053	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  level);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  level);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
1054	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  name);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  name);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  name);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	19	None	replace
1055	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.isComma());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.isComma());	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
1056	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.hasChildren());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.hasChildren());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.hasChildren());	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
1057	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
1058	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION,  n);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION,  n);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
1059	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNKNOWN_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getString(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	179	None	replace
1060	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  JSError.make(t,  n,  USELESS_CODE_ERROR)));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  JSError.make(t,  n,  USELESS_CODE_ERROR)));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  JSError.make(t,  n,  USELESS_CODE_ERROR)));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
1061	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  JSError.make(t,  n,  level)));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  JSError.make(t,  n,  level)));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  JSError.make(t,  n,  level)));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
1062	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  t);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  t);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
1063	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  this);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  this);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
1064	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1065	[BUG]  [BUGGY]  t.report(n,  level,  DETERMINISTIC_ERROR,  n.getFirstChild());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  DETERMINISTIC_ERROR,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  DETERMINISTIC_ERROR,  n.getFirstChild());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getFirstChild());    	non-compiled	[CE]  	134	None	replace
1066	[BUG]  [BUGGY]  Node  an  =  n.getLastChild().getNext();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getLastChild().getNext();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getLastChild().getNext();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
1067	[BUG]  [BUGGY]  &&  n.getType()  ==  Token.VAR)  {  return;  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  &&  n.getType()  ==  Token.VAR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	&&  n.getType()  ==  Token.VAR)  {  return;	  |    n.getType()    ==    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
1068	[BUG]  [BUGGY]  Node  an  =  n.getAncestor(2);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getAncestor(2);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getAncestor(2);	  Node    an    =    n.getParent();    	non-compiled	[CE]  	73	None	replace
1069	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ")||  n.getString().endsWith( "__ "));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ")||  n.getString().endsWith( "__ "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ")||  n.getString().endsWith( "__ "));	  throw    new    IllegalArgumentException(   "   ")    &&    n.getString().endsWith(   "__   "));    	non-compiled	[CE]  	175	None	replace
1070	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.FUNCTION),  n);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.FUNCTION),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.FUNCTION),  n);	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
1071	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION),  t);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.FUNCTION),  t);	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
1072	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION),  n);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.FUNCTION),  n);	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
1073	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
1074	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
1075	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_RESULT)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1076	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.toString(),  USELESS_CODE_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.toString(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.toString(),  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
1077	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getType(),  USELESS_CODE_ERROR);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getType(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getType(),  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
1078	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	101	None	replace
1079	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n,  parent);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n,  parent);	  t.report(n,    level,    USELESS_CODE_ERROR,    n);    	non-compiled	[CE]  	136	None	replace
1080	[BUG]  [BUGGY]  t.report(n,  level,  DEFAULT_NAMESPACE_ERROR,  n);  [CE]  [FE]                                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  DEFAULT_NAMESPACE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  DEFAULT_NAMESPACE_ERROR,  n);	  t.report(n,    level,    USELESS_CODE_ERROR,    n);    	non-compiled	[CE]  	136	None	replace
1081	[BUG]  [BUGGY]  t.report(n,  level,  DEFAULT_SIGNATURES_ERROR,  n);  [CE]  [FE]                                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  DEFAULT_SIGNATURES_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  DEFAULT_SIGNATURES_ERROR,  n);	  t.report(n,    level,    USELESS_CODE_ERROR,    n);    	non-compiled	[CE]  	136	None	replace
1082	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  msg);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY),  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY),  msg);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    gramps);    	non-compiled	[CE]  	123	None	replace
1083	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    gramps);    	non-compiled	[CE]  	123	None	replace
1084	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)||  gramps);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)||  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)||  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    gramps);    	non-compiled	[CE]  	123	None	replace
1085	[BUG]  [BUGGY]  test(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  USELESS_CODE_ERROR);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1086	[BUG]  [BUGGY]  test(t,  n,  1,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  1,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  1,  NON_GLOBAL_EXPR_RESULT);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1087	[BUG]  [BUGGY]  test(t,  n,  UNKNOWN_SIGNATURES_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  UNKNOWN_SIGNATURES_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  UNKNOWN_SIGNATURES_EXPR_RESULT);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1088	[BUG]  [BUGGY]  test(t,  n,  UNKNOWN_SIGNATURES_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  UNKNOWN_SIGNATURES_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  UNKNOWN_SIGNATURES_ERROR);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1089	[BUG]  [BUGGY]  test(t,  n,  parent);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  parent);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1090	[BUG]  [BUGGY]  test(t,  n,  UNKNOWN_SIGNATURES);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  test(t,  n,  UNKNOWN_SIGNATURES);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	test(t,  n,  UNKNOWN_SIGNATURES);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1091	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1092	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1093	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1094	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXPR_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
1095	[BUG]  [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getString().equals( "name "))  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.getType()  ==  Token.NAME  &&  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.getType()  ==  Token.NAME  &&  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  not  a  statement	163	None	replace
1096	[BUG]  [BUGGY]  &&  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  &&  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	&&  n.getType()  ==  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	163	None	replace
1097	[BUG]  [BUGGY]  Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  not  a  statement	168	None	replace
1098	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  SHORT_CODE_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1099	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level  +  1);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level  +  1);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1100	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  parent);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  parent);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1101	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.FUNCTION)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()!=  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  	57	None	replace
1102	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  protectionSideEffectFreeCode));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
1103	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  maskSideEffectFreeCode));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  maskSideEffectFreeCode));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  maskSideEffectFreeCode));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
1104	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  name));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  name));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  name));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
1105	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  1  -  1));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  1  -  1));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  1  -  1));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
1106	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  1L));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  1L));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  1L));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
1107	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_SCRIPT_ERROR));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_SCRIPT_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_SCRIPT_ERROR));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
1108	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  COMPLETE_NAME));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  COMPLETE_NAME));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  COMPLETE_NAME));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
1109	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  name,  n.getString());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  name,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  name,  n.getString());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
1110	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getString(),  PROTECTOR_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getString(),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getString(),  PROTECTOR_FN);	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
1111	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ".equalsIgnoreCase(n.getString()));	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1112	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  n);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ",  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ",  n);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1113	[BUG]  [BUGGY]  node.removeChild(n);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.removeChild(n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.removeChild(n);	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
1114	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY),  n);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY),  n);	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
1115	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Node(Token.EMPTY));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  Node(Token.EMPTY));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  Node(Token.EMPTY));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
1116	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()));  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
1117	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  n));  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  n));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY,  n));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
1118	[BUG]  [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString()));  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  IllegalArgumentException( " ").equals(n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  IllegalArgumentException( " ").equals(n.getString()));	  throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  	121	None	replace
1119	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString()));  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " "  +  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " "  +  n.getString()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1120	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level));	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
1121	[BUG]  [BUGGY]  Context.report(JSError.make(t,  n,  level),  UNKNOWN_EXPR_TYPE);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(JSError.make(t,  n,  level),  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(JSError.make(t,  n,  level),  UNKNOWN_EXPR_TYPE);	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
1122	[BUG]  [BUGGY]  Context.reportError(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.reportError(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.reportError(t,  n,  USELESS_CODE_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
1123	[BUG]  [BUGGY]  safeTree(n.getString(),  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n.getString(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n.getString(),  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	26	None	replace
1124	[BUG]  [BUGGY]  AssertionFailedError  msg  =  n.getString();  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  n.getString();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  n.getString();	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	26	None	replace
1125	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPECTED);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPECTED);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPECTED);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPECTED);    	non-compiled	[CE]  	181	None	replace
1126	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_TYPE);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_TYPE);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1127	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURES);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURES);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_SIGNATURES);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1128	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  COMPLETE_SIZE);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  COMPLETE_SIZE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  COMPLETE_SIZE);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1129	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_SECONDS);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_SECONDS);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_SECONDS);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1130	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  msg);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
1131	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  msg);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
1132	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  msg);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NAMESPACE_ERROR,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
1133	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  msg,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
1134	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
1135	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  this);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  this);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
1136	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  USELESS_CODE_ERROR));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  USELESS_CODE_ERROR));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
1137	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_NAME,  PROTECTOR_FN));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_NAME,  PROTECTOR_FN));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_NAME,  PROTECTOR_FN));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
1138	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  t);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN),  t);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
1139	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);	  t.report(n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	132	None	replace
1140	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
1141	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
1142	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
1143	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_EXPR_RESULT,  level);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_EXPR_RESULT,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
1144	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  not  a  statement	58	None	replace
1145	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_STRICT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_STRICT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_STRICT_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    UNKNOWN_STRICT_ERROR);    	non-compiled	[CE]  	92	None	replace
1146	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_RESULT)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
1147	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.isComma());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.isComma());	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
1148	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.hasChildren());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.hasChildren());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.hasChildren());	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
1149	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.EXPR_RESULT);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
1150	[BUG]  [BUGGY]  t.report(n,  level-1,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level-1,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level-1,  NON_GLOBAL_EXPR_RESULT);	  t.report(n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	20	None	replace
1151	[BUG]  [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  message);	  AssertionFailedError.make(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	67	None	replace
1152	[BUG]  [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.getFirstChild().getNext();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.getFirstChild().getNext();	  Node    an    =    n.getFirstChild();    	non-compiled	[CE]  	70	None	replace
1153	[BUG]  [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	7	None	replace
1154	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.GETPROP)  {  return;  }  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()!=  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	7	None	replace
1155	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  t);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  t);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1156	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  msg);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  msg);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1157	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getString());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getString());	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1158	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  parent);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  parent);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  parent);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1159	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.isComma());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.isComma());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME  ||  n.isComma());	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1160	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getChildCount());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getChildCount());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getChildCount());	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1161	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1162	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_EXTENDS)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1163	[BUG]  [BUGGY]  ||  level  ==  USELESS_EXTENDS  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_EXTENDS  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_EXTENDS  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1164	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_EXTENDS)  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1165	[BUG]  [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setType(Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setType(Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	59	None	replace
1166	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
1167	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  null,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
1168	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  NON_GLOBAL_ERROR,  ancestorType);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  NON_GLOBAL_ERROR,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  NON_GLOBAL_ERROR,  ancestorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
1169	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ANCEstorType);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ANCEstorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  ANCEstorType);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
1170	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1171	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getLineno(),  n,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1172	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n.getLineno(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1173	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR,  n);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  USELESS_CODE_ERROR,  n);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1174	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_DEFINE_INIT_ERROR,  n);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_DEFINE_INIT_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NO_GLOBAL_DEFINE_INIT_ERROR,  n);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1175	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	107	None	replace
1176	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.VAR);	  SecurityContext.checkState(n.getType()    ==    Token.EXPR_RESULT);    	non-compiled	[CE]  	144	None	replace
1177	[BUG]  [BUGGY]  parent.getType()  ==  Token.NAME  &&  n.getFirstChild()!=  n)  {  return;  }  [CE]  not  a  statement  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.NAME  &&  n.getFirstChild()!=  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.NAME  &&  n.getFirstChild()!=  n)  {  return;  }	  parent.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  not  a  statement	54	None	replace
1178	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)return;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.GETPROP)return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
1179	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	56	None	replace
1180	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	56	None	replace
1181	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
1182	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME,  n.getString());	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
1183	[BUG]  [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Preconditions.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);	  Preconditions.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	133	None	replace
1184	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getString()));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getString()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
1185	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  level);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getModule()),  level);	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
1186	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.toString()));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.toString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.toString()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION),    level);    	non-compiled	[CE]  	88	None	replace
1187	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  UNKNOWN_EXPR_RESULT);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1188	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol_FN);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol_FN);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1189	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  protocol);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1190	[BUG]  [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NOT_SUPPORTED);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NOT_SUPPORTED);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError  msg  =  new  AssertionFailedError(t,  n,  level,  NOT_SUPPORTED);	  AssertionFailedError    msg    =    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	18	None	replace
1191	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	171	None	replace
1192	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").print(n.getString());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").print(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").print(n.getString());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
1193	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( "Missing  String  ' "  +  n.getString()  + "' ");  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( "Missing  String  ' "  +  n.getString()  + "' ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( "Missing  String  ' "  +  n.getString()  + "' ");	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	30	None	replace
1194	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR  ||  level  ==  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR  ||  level  ==  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR  ||  level  ==  NON_GLOBAL_EXPR_RESULT);	  t.report(n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	20	None	replace
1195	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR  ||  level!=  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR  ||  level!=  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR  ||  level!=  NON_GLOBAL_EXPR_RESULT);	  t.report(n,    level,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	20	None	replace
1196	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  :  n.getMessage();  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ")  :  n.getMessage();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ")  :  n.getMessage();	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
1197	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printMessage();  [CE]  <identifier>  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printMessage();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").printMessage();	  Throwables.throw    new    IllegalStateException(   "   ".getMessage());    	non-compiled	[CE]  <identifier>  expected	33	None	replace
1198	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	6	None	replace
1199	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)return;  }  [CE]  illegal  start  of  type  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.CALL)return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
1200	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getType());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getType());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1201	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").print(n.getType());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").print(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").print(n.getType());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	99	None	replace
1202	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  4);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  4);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  4);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
1203	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHE_SIGNATURE));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHE_SIGNATURE));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  CACHE_SIGNATURE));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    1));    	non-compiled	[CE]  	178	None	replace
1204	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  null);	  throw    new    AssertionFailedError(t,    n,    level,    null);    	non-compiled	[CE]  	91	None	replace
1205	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  protectionSideEffectFreeCode);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
1206	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestor);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestor);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  ancestor);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
1207	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  isSimpleOp);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestor,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestor);    	non-compiled	[CE]  	11	None	replace
1208	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  t.getModule());	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
1209	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
1210	[BUG]  [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t.getMessage());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkState(n.getType()  ==  Token.NAME,  t.getMessage());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkState(n.getType()  ==  Token.NAME,  t.getMessage());	  Throwables.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	154	None	replace
1211	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	12	None	replace
1212	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
1213	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_MODULE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  STRICT_MODULE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  STRICT_MODULE_ERROR);	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
1214	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR));	  new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	106	None	replace
1215	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	4	None	replace
1216	[BUG]  [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.EXPR_RESULT  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	4	None	replace
1217	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1218	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	172	None	replace
1219	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
1220	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectSideEffectFreeCode);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
1221	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);	  new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	152	None	replace
1222	[BUG]  [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_COMMA  ||  level  ==  USELESS_CODE_ERROR)  {  return;	  ||    level    ==    USELESS_COMMA    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	147	None	replace
1223	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message));	  t.report(JSError.make(t,    n,    level,    USELESS_CODE_ERROR));    	non-compiled	[CE]  	113	None	replace
1224	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getName()));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getName()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.getName()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    t.getModule()));    	non-compiled	[CE]  	170	None	replace
1225	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n),  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
1226	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  t.getModule()));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  t.getModule()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  t.getModule()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
1227	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  this));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  this));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n,  this));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n));    	non-compiled	[CE]  	124	None	replace
1228	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  + ": "  +  msg);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  + ": "  +  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  + ": "  +  msg);	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
1229	[BUG]  [BUGGY]  n.setString(PROTECTOR_FN  ||  n.getType()  ==  Token.NAME);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.setString(PROTECTOR_FN  ||  n.getType()  ==  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.setString(PROTECTOR_FN  ||  n.getType()  ==  Token.NAME);	  n.setString(PROTECTOR_FN);    	non-compiled	[CE]  	158	None	replace
1230	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  level);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1231	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  PROTECTOR_FN);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1232	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  isSimpleEffectFreeCode);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  isSimpleEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  isSimpleEffectFreeCode);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1233	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  isSimpleOp);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  isSimpleOp);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1234	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);	  return    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	168	None	replace
1235	[BUG]  [BUGGY]  AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
1236	[BUG]  [BUGGY]  AssertionFailedError.warning(t,  n,  level],  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.warning(t,  n,  level],  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.warning(t,  n,  level],  NON_GLOBAL_DEFINE_INIT_ERROR);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	66	None	replace
1237	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  guard);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  guard);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  guard);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  	187	None	replace
1238	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  isResultUsed);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  isResultUsed);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  	187	None	replace
1239	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  protectSideEffectFreeCode);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  	187	None	replace
1240	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  ancestorType);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  anon,  ancestorType);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    anon);    	non-compiled	[CE]  	187	None	replace
1241	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPR_RESULT)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
1242	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1  ||  n.getChildCount()  ==  2)  {  return;  }  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1  ||  n.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1  ||  n.getChildCount()  ==  2)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  	160	None	replace
1243	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  4)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  4)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  4)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  	160	None	replace
1244	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  3)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  3)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  3)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    2)    {    return;    }    	non-compiled	[CE]  	160	None	replace
1245	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  annotated);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  annotated);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  level),  annotated);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    level));    	non-compiled	[CE]  	60	None	replace
1246	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getType());  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").printStackTrace(n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
1247	[BUG]  [BUGGY]  Throwables.throw  new  IllegalStateException( " ").print(n.getType());  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalStateException( " ").print(n.getType());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalStateException( " ").print(n.getType());	  Throwables.throw    new    IllegalStateException(   "   ".equals(n.getType()));    	non-compiled	[CE]  <identifier>  expected	31	None	replace
1248	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  msg));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  msg));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  msg));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
1249	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  this));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  this));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN,  this));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
1250	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_COMMA));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_COMMA));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_COMMA));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    PROTECTOR_FN));    	non-compiled	[CE]  	125	None	replace
1251	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level2,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level2,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level2,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1252	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NULL_DEFINE_INIT_ERROR);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NULL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NULL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR,    level);    	non-compiled	[CE]  <identifier>  expected	167	None	replace
1253	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  message);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
1254	[BUG]  [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  isResultUsed);	  t.report(JSError.make(t,    n,    level),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	114	None	replace
1255	[BUG]  [BUGGY]  warn(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  warn(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	warn(t,  n,  NON_GLOBAL_DEFINE_INIT_ERROR));	  safeTree(n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	105	None	replace
1256	[BUG]  [BUGGY]  safeTree(n,  Level.INIT_STANDARD_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  Level.INIT_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  Level.INIT_STANDARD_ERROR);	  safeTree(n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	105	None	replace
1257	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  protectSideEffectFreeCode);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    name);    	non-compiled	[CE]  	151	None	replace
1258	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  isSimpleOp);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  name,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    name);    	non-compiled	[CE]  	151	None	replace
1259	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.toString());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.toString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.toString());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
1260	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  n);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getLineno(),  n);	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getLineno());    	non-compiled	[CE]  	135	None	replace
1261	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  <identifier>  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_EXPR_RESULT);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1262	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_DEFINE_ERROR);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1263	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_TYPE);  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_TYPE);	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1264	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ")  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ")	  Throwables.throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  <identifier>  expected	96	None	replace
1265	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  t);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  t);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
1266	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  n);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  gramps),  n);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
1267	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  an,  gramps));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  an,  gramps));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  an,  gramps));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    gramps));    	non-compiled	[CE]  	177	None	replace
1268	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n,  level));  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n,  level));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n,  level));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
1269	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevelException( " "));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  CheckLevelException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  CheckLevelException( " "));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
1270	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n),  new  CheckLevelException( " "));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n),  new  CheckLevelException( " "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n),  new  CheckLevelException( " "));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
1271	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection(t,  n));	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
1272	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  NodeTraversal.traverse(compiler,  n,  new  StripProtection());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	NodeTraversal.traverse(compiler,  n,  new  StripProtection());	  Throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  	192	None	replace
1273	[BUG]  [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	190	None	replace
1274	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  parent.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	190	None	replace
1275	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n.getString(),  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR);    	non-compiled	[CE]  	26	None	replace
1276	[BUG]  [BUGGY]  t.report(n,  Level.WARNING,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  Level.WARNING,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  Level.WARNING,  USELESS_CODE_ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
1277	[BUG]  [BUGGY]  t.report(n,  level  +  1,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level  +  1,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level  +  1,  USELESS_CODE_ERROR);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
1278	[BUG]  [BUGGY]  t.log(Level.WARNING,  n.getString(),  PROTECTOR_FN);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.log(Level.WARNING,  n.getString(),  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.log(Level.WARNING,  n.getString(),  PROTECTOR_FN);	  t.report(n,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	108	None	replace
1279	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
1280	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  isSimpleOp);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  msg,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	10	None	replace
1281	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level!=    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	189	None	replace
1282	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.FUNCTION,  t.getModule()));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.FUNCTION,  t.getModule()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.FUNCTION,  t.getModule()));	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
1283	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION,  t.getModule()));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.FUNCTION,  t.getModule()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.FUNCTION,  t.getModule()));	  n.replaceChild(parent,    new    Node(Token.FUNCTION));    	non-compiled	[CE]  	89	None	replace
1284	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FLUSH)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1285	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_INVALID)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
1286	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  an,  n);  [CE]  [FE]                                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  an,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  an,  n);	  t.report(n,    level,    USELESS_CODE_ERROR,    n);    	non-compiled	[CE]  	136	None	replace
1287	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLastChild());  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLastChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getLastChild());	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
1288	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  ancestorType);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n.getString(),  ancestorType);	  reportError(t,    n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	174	None	replace
1289	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  parent)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  parent)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getFirstChild()!=  parent)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	161	None	replace
1290	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.hasChildren())  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.hasChildren())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.hasChildren())  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	161	None	replace
1291	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT,  level);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  NON_GLOBAL_EXPR_RESULT,  level);	  throw    new    AssertionFailedError(t,    n.getString(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	179	None	replace
1292	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NON_GLOBAL_EXPR_RESULT);	  throw    new    AssertionFailedError(t,    n.getString(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	179	None	replace
1293	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  INVALID_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	179	None	replace
1294	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
1295	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  false);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  false);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  false);	  t.report(n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	69	None	replace
1296	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n)  {  return;  }  [CE]  not  a  statement  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n)  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
1297	[BUG]  [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getChildCount()  ==  2)  {  return;  }  [CE]  not  a  statement  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.getType()  ==  Token.FUNCTION  ||  n.getChildCount()  ==  2)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.getType()  ==  Token.FUNCTION  ||  n.getChildCount()  ==  2)  {  return;  }	  parent.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  not  a  statement	1	None	replace
1298	[BUG]  [BUGGY]  String  level  =  n.getLastChild();  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  String  level  =  n.getLastChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	String  level  =  n.getLastChild();	  String    level    =    n.getLevel();    	non-compiled	[CE]  	32	None	replace
1299	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME,  t.getModule());	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
1300	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.NAME,  t.getSourceName());	  Context.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	74	None	replace
1301	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level  ==  USELESS_CODE_ERROR)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	143	None	replace
1302	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	59	None	replace
1303	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)return;  }  [CE]  illegal  start  of  type  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.CALL)return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
1304	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.CALL)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.CALL)    {    return;    }    	non-compiled	[CE]  	59	None	replace
1305	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType,  msg);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType,  msg);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType,  msg);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    msg);    	non-compiled	[CE]  	185	None	replace
1306	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
1307	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()  ==  n);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
1308	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.COMMA);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.COMMA);	  SecurityContext.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	146	None	replace
1309	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	68	None	replace
1310	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_FN,  USELESS_CODE_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
1311	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_FN,  PROTECTOR_ERROR);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_FN,  PROTECTOR_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_FN,  PROTECTOR_ERROR);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
1312	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  USELESS_CODE_ERROR,  level,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
1313	[BUG]  [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  AssertionFailedError(t,  n.getString(),  DEFAULT_PROTECTOR_ERROR,  PROTECTOR_FN);	  new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	100	None	replace
1314	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_WARNING)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
1315	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level!=    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
1316	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.SCRIPT);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.SCRIPT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.SCRIPT);	  Context.checkState(n.getType()    ==    Token.VAR);    	non-compiled	[CE]  	72	None	replace
1317	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n,    level,    NON_STRICT_MODULE);    	non-compiled	[CE]  	94	None	replace
1318	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)&&  level.isSimpleOp());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY)&&  level.isSimpleOp());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY)&&  level.isSimpleOp());	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
1319	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.COMMA));  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.COMMA));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.COMMA));	  parent.replaceChild(n,    new    Node(Token.EMPTY),    level);    	non-compiled	[CE]  	61	None	replace
1320	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	27	None	replace
1321	[BUG]  [BUGGY]  Throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [CE]  not  a  statement  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  not  a  statement	27	None	replace
1322	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  PROTECTOR_FN);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n.getString(),  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    USELESS_CODE_ERROR,    PROTECTOR_FN);    	non-compiled	[CE]  	27	None	replace
1323	[BUG]  [BUGGY]  Node  an  =  node.getFirstChild();  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  node.getFirstChild();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  node.getFirstChild();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
1324	[BUG]  [BUGGY]  Node  an  =  n.cloneTree();  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Node  an  =  n.cloneTree();  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Node  an  =  n.cloneTree();	  Node    an    =    n.getLastChild();    	non-compiled	[CE]  	71	None	replace
1325	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  isSimpleOp);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
1326	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  protectionSideEffectFreeCode);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
1327	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  protectSideEffectFreeCode);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  protectSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  protectSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
1328	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  guard);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  guard);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  annotated,  guard);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    annotated);    	non-compiled	[CE]  	186	None	replace
1329	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  gramps);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  gramps);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	188	None	replace
1330	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isResultUsed);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isResultUsed);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isResultUsed);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	188	None	replace
1331	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	188	None	replace
1332	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  this);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  this);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an,  this);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    an);    	non-compiled	[CE]  	188	None	replace
1333	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    &&    level    ==    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
1334	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPECTED);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPECTED);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_EXPECTED);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPECTED);    	non-compiled	[CE]  <identifier>  expected	181	None	replace
1335	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR  ||  level  ==  NON_GLOBAL_EXPECTED);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR  ||  level  ==  NON_GLOBAL_EXPECTED);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR  ||  level  ==  NON_GLOBAL_EXPECTED);	  throw    new    AssertionFailedError(t,    n,    level,    NON_GLOBAL_EXPECTED);    	non-compiled	[CE]  	181	None	replace
1336	[BUG]  [BUGGY]  Throwables.wrap(new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.wrap(new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.wrap(new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR));	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
1337	[BUG]  [BUGGY]  Throwables.wrap(new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.wrap(new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.wrap(new  AssertionFailedError(t,  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  Throwables.throw    new    AssertionFailedError(t,    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	166	None	replace
1338	[BUG]  [BUGGY]  gramps.getParent().replaceChild(n,  an;  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  gramps.getParent().replaceChild(n,  an;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	gramps.getParent().replaceChild(n,  an;	  gramps.getParent().replaceChild(n,    parent);    	non-compiled	[CE]  	157	None	replace
1339	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n.getLineno(),  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	107	None	replace
1340	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_CODE_ERROR));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_CODE_ERROR));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_CODE_ERROR));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    1));    	non-compiled	[CE]  	128	None	replace
1341	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getChildCount()  ==  1)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  	162	None	replace
1342	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getChildCount()  ==  1)  {  throw  new  IllegalArgumentException( " ");  }	  if(n.getType()    ==    Token.NAME    ||    n.getChildCount()    ==    1)    {    return;    }    	non-compiled	[CE]  	162	None	replace
1343	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getString().equals( "prototype "))  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getString().equals( "prototype "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getString().equals( "prototype "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  	163	None	replace
1344	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getString().equals( "name "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  	163	None	replace
1345	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getString().equals( "call "))  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getString().equals( "call "))  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getString().equals( "call "))  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getString().equals(   "name   "))    {    return;    }    	non-compiled	[CE]  	163	None	replace
1346	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    PROTECTOR_FN);    	non-compiled	[CE]  	153	None	replace
1347	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n,  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n,    level,    PROTECTOR_FN);    	non-compiled	[CE]  	153	None	replace
1348	[BUG]  [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.VAR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
1349	[BUG]  [BUGGY]  warn(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  warn(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	warn(t,  n,  NON_GLOBAL_EXPR_RESULT);	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
1350	[BUG]  [BUGGY]  safeTree(n,  t.getModule());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  t.getModule());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  t.getModule());	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
1351	[BUG]  [BUGGY]  safeTree(n,  t,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  safeTree(n,  t,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	safeTree(n,  t,  NON_GLOBAL_EXPR_RESULT);	  safeTree(n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	110	None	replace
1352	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
1353	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n.getString(),  level,  USELESS_CODE_ERROR,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    level,    PROTECTOR_FN);    	non-compiled	[CE]  	24	None	replace
1354	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [CE]  <identifier>  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  PROTECTOR_FN,  ancestorType);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
1355	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DETERMINISTIC_FN);  [CE]  <identifier>  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DETERMINISTIC_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DETERMINISTIC_FN);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
1356	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NOT_COMMA);  [CE]  <identifier>  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NOT_COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n.getString(),  DEFAULT_NOT_COMMA);	  Throwables.throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN);    	non-compiled	[CE]  <identifier>  expected	25	None	replace
1357	[BUG]  [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY,  n.cloneTree()));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.replaceChild(parent,  new  Node(Token.EMPTY,  n.cloneTree()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.replaceChild(parent,  new  Node(Token.EMPTY,  n.cloneTree()));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
1358	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  t);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  n.cloneTree()),  t);	  parent.replaceChild(n,    new    Node(Token.EMPTY,    n.cloneTree()));    	non-compiled	[CE]  	169	None	replace
1359	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1360	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_EXPR_RESULT)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_EXPR_RESULT)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
1361	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n.getString()));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
1362	[BUG]  [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n));  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().report(JSError.make(t,  n,  level,  USELESS_CODE_ERROR,  n));	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
1363	[BUG]  [BUGGY]  t.getCompiler().report(n.getLineno(),  n.getCharno());  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.getCompiler().report(n.getLineno(),  n.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.getCompiler().report(n.getLineno(),  n.getCharno());	  t.getCompiler().reportCodeChange();    	non-compiled	[CE]  	156	None	replace
1364	[BUG]  [BUGGY]  ||(n.getType()!=  Token.VAR  &&  n.getFirstChild()  ==  n))  {  return;  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||(n.getType()!=  Token.VAR  &&  n.getFirstChild()  ==  n))  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||(n.getType()!=  Token.VAR  &&  n.getFirstChild()  ==  n))  {  return;	  ||    n.getType()!=    Token.VAR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
1365	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getParent());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	9	None	replace
1366	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an;  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an;	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	9	None	replace
1367	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  an.getLineno());	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    parent);    	non-compiled	[CE]  	9	None	replace
1368	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  n);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  n);	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
1369	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  n.getString());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  n.getString());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
1370	[BUG]  [BUGGY]  new  IllegalArgumentException( " "),  n.getFirstChild());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  new  IllegalArgumentException( " "),  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	new  IllegalArgumentException( " "),  n.getFirstChild());	  new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  	122	None	replace
1371	[BUG]  [BUGGY]  ||  level!=  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_COMMA  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_COMMA    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	155	None	replace
1372	[BUG]  [BUGGY]  Context.report(n,  level,  USELESS_CODE_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.report(n,  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.report(n,  level,  USELESS_CODE_ERROR);	  Context.reportCodeChange();    	non-compiled	[CE]  	34	None	replace
1373	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    isResultUsed);    	non-compiled	[CE]  	14	None	replace
1374	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  	7	None	replace
1375	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)return;  }  [CE]  illegal  start  of  type  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.GETPROP)return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.GETPROP)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
1376	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
1377	[BUG]  [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()!=  Token.VAR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()!=  Token.VAR)  {  throw  new  IllegalStateException( " ");  }	  ||    n.getType()    ==    Token.VAR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
1378	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  UNKNOWN_EXPR_TYPE);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n.getString(),  level,  UNKNOWN_EXPR_TYPE);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n.getString(),  level,  UNKNOWN_EXPR_TYPE);	  throw    new    AssertionFailedError(t,    n.getString(),    UNKNOWN_EXPR_TYPE);    	non-compiled	[CE]  	102	None	replace
1379	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  expression  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalStateException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
1380	[BUG]  [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_STANDARD_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  AssertionFailedError(t,  n,  NON_GLOBAL_STANDARD_ERROR);	  Throwables.throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  <identifier>  expected	29	None	replace
1381	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    >=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
1382	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FUNCTION)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_FUNCTION)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
1383	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  this),  gramps);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  this),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  this),  gramps);	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    this));    	non-compiled	[CE]  	141	None	replace
1384	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  n);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
1385	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  annotated);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  annotated);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  annotated);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
1386	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  an);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
1387	[BUG]  [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  reportError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	reportError(t,  n,  level,  USELESS_CODE_ERROR,  isSimpleOp);	  reportError(t,    n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	173	None	replace
1388	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n.getCharno());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n.getCharno());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  n.getCharno());	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
1389	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  MAX_COMMA);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  MAX_COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  MAX_COMMA);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
1390	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT  +  1);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT  +  1);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  NON_GLOBAL_EXPR_RESULT  +  1);	  throw    new    AssertionFailedError(t,    n.getLineno(),    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	112	None	replace
1391	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level!=    USELESS_CODE_FAILURE)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
1392	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
1393	[BUG]  [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.ASSIGN);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.ASSIGN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Context.checkState(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.ASSIGN);	  Context.checkState(n.getType()    ==    Token.FUNCTION);    	non-compiled	[CE]  	3	None	replace
1394	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.FUNCTION)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.FUNCTION)    {    return;    }    	non-compiled	[CE]  	57	None	replace
1395	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    level);    	non-compiled	[CE]  	23	None	replace
1396	[BUG]  [BUGGY]  Throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  AssertionFailedError(t,  n.getString(),  level,  PROTECTOR_FN);	  throw    new    AssertionFailedError(t,    n.getString(),    PROTECTOR_FN,    level);    	non-compiled	[CE]  not  a  statement	23	None	replace
1397	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)return;  }  [CE]  illegal  start  of  type  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getType()  ==  Token.SCRIPT)return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	150	None	replace
1398	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getProp(Node.SOURCENAME_PROP)));  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getProp(Node.SOURCENAME_PROP)));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getProp(Node.SOURCENAME_PROP)));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
1399	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getCompiler()));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getCompiler()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  n.getCompiler()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    t.getModule()));    	non-compiled	[CE]  	138	None	replace
1400	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  an);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  an);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
1401	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  annotated);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  annotated);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  annotated);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
1402	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  anon);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  anon);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  anon);	  t.report(n,    level,    USELESS_CODE_ERROR);    	non-compiled	[CE]  	131	None	replace
1403	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
1404	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  parent)  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  parent)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getFirstChild()!=  parent)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
1405	[BUG]  [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getFirstChild()  ==  n)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getFirstChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.VAR  ||  n.getFirstChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
1406	[BUG]  [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getLastChild()  ==  n)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.FUNCTION  ||  n.getLastChild()  ==  n)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.FUNCTION  ||  n.getLastChild()  ==  n)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getFirstChild()    ==    n)    {    return;    }    	non-compiled	[CE]  	191	None	replace
1407	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME,  t.getModule());	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
1408	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getString());  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME,  n.getString());	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
1409	[BUG]  [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	SecurityContext.checkState(n.getType()  ==  Token.NAME  ||  n.getFirstChild()  ==  n);	  SecurityContext.checkState(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	145	None	replace
1410	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  t.getMessage()));  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  t.getMessage()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").equalsIgnoreCase(n.getString(),  t.getMessage()));	  Throwables.throw    new    IllegalArgumentException(   "   ".equalsIgnoreCase(n.getString()));    	non-compiled	[CE]  <identifier>  expected	98	None	replace
1411	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getSourceName()));  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getSourceName()));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.FUNCTION,  t.getSourceName()));	  parent.replaceChild(n,    new    Node(Token.FUNCTION,    n));    	non-compiled	[CE]  	139	None	replace
1412	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  return;  [CE]  illegal  start  of  expression  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_EXTENDS)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_EXTENDS)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	148	None	replace
1413	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_EXPECTED)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_EXPECTED)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	184	None	replace
1414	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  msg,  PROTECTOR_FN);	  t.report(n,    level,    USELESS_CODE_ERROR,    msg);    	non-compiled	[CE]  	132	None	replace
1415	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getSourceName(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getSourceName(),  n,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1416	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getLineno(),  n,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getLineno(),  n,  level);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1417	[BUG]  [BUGGY]  return  AssertionFailedError.make(t,  n.getLineno(),  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  AssertionFailedError.make(t,  n.getLineno(),  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  AssertionFailedError.make(t,  n.getLineno(),  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1418	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [CE]  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getLineno(),  n,  level,  NON_GLOBAL_DEFINE_INIT_ERROR);	  throw    new    AssertionFailedError(t,    n.getLineno(),    n,    NON_GLOBAL_DEFINE_INIT_ERROR);    	non-compiled	[CE]  	109	None	replace
1419	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  null);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  null);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  null);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
1420	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protocol);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protocol);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  protocol);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
1421	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  provider);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  provider);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  message,  provider);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    message);    	non-compiled	[CE]  	13	None	replace
1422	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalStateException( " ");  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalStateException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  n.getType())  {  throw  new  IllegalStateException( " ");	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    n.getType())    {    return;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
1423	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.COMMA),  gramps);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.COMMA),  gramps);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY  |  Token.COMMA),  gramps);	  parent.replaceChild(n,    new    Node(Token.EMPTY),    gramps);    	non-compiled	[CE]  	123	None	replace
1424	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_COMMA)  {  return;  }	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_COMMA)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
1425	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  n.getFirstChild());	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1426	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  t.getSourceName());  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  t.getSourceName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  t.getSourceName());	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1427	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()!=  Token.NAME);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()!=  Token.NAME);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()!=  Token.NAME);	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1428	[BUG]  [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  t.getModule());  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.checkArgument(n.getType()  ==  Token.NAME,  t.getModule());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.checkArgument(n.getType()  ==  Token.NAME,  t.getModule());	  Throwables.checkArgument(n.getType()    ==    Token.NAME);    	non-compiled	[CE]  	180	None	replace
1429	[BUG]  [BUGGY]  Throw  new  IllegalArgumentException( " ")  &&  n.getString().endsWith( "__ "));  [CE]  not  a  statement  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  IllegalArgumentException( " ")  &&  n.getString().endsWith( "__ "));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  IllegalArgumentException( " ")  &&  n.getString().endsWith( "__ "));	  throw    new    IllegalArgumentException(   "   ")    &&    n.getString().endsWith(   "__   "));    	non-compiled	[CE]  not  a  statement	175	None	replace
1430	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY),  t);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY),  t);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.EMPTY),  t);	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
1431	[BUG]  [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY  |  Token.NAME));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(parent,  new  Node(Token.EMPTY  |  Token.NAME));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(parent,  new  Node(Token.EMPTY  |  Token.NAME));	  n.replaceChild(parent,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	63	None	replace
1432	[BUG]  [BUGGY]  ||  n.getType()  >=  Token.VAR)  {  return;  }  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  >=  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  >=  Token.VAR)  {  return;  }	  ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1433	[BUG]  [BUGGY]  ||  n.getType()  ==  Token.VAR)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  n.getType()  ==  Token.VAR)  {  break;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  n.getType()  ==  Token.VAR)  {  break;  }	  ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  expression	129	None	replace
1434	[BUG]  [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.FUNCTION  ||  n.getType()  ==  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  	5	None	replace
1435	[BUG]  [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME)  {  return;  }  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.VAR  ||  n.getType()  ==  Token.NAME)  {  return;  }	  if(n.getType()    ==    Token.FUNCTION    ||    n.getType()    ==    Token.NAME)    {    return;    }    	non-compiled	[CE]  	5	None	replace
1436	[BUG]  [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_SCRIPT));  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_SCRIPT));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	parent.replaceChild(n,  new  Node(Token.EMPTY,  DEFAULT_SCRIPT));	  parent.replaceChild(n,    new    Node(Token.EMPTY,    this));    	non-compiled	[CE]  	126	None	replace
1437	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	103	None	replace
1438	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)return;  }  [CE]  illegal  start  of  type  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.SCRIPT)return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	103	None	replace
1439	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.SCRIPT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.SCRIPT)    {    return;    }    	non-compiled	[CE]  	103	None	replace
1440	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getString());  [CE]  <identifier>  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").printStackTrace(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1441	[BUG]  [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").print(n.getString());  [CE]  <identifier>  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throwables.throw  new  IllegalArgumentException( " ").print(n.getString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throwables.throw  new  IllegalArgumentException( " ").print(n.getString());	  Throwables.throw    new    IllegalArgumentException(   "   ".equals(n.getString()));    	non-compiled	[CE]  <identifier>  expected	97	None	replace
1442	[BUG]  [BUGGY]  n.removeChild(an);  [CE]  [FE]                                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  n.removeChild(an);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	n.removeChild(an);	  n.removeChild(parent);    	non-compiled	[CE]  	159	None	replace
1443	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNDEFINED_COMMA);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n.getString(),  UNDEFINED_COMMA);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n.getString(),  UNDEFINED_COMMA);	  throw    new    AssertionFailedError(t,    n.getString(),    INVALID_COMMA);    	non-compiled	[CE]  	28	None	replace
1444	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  return;  [CE]  illegal  start  of  expression  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  >  USELESS_CODE_ERROR)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    >=    USELESS_CODE_ERROR)    {    return;    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
1445	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	104	None	replace
1446	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)return;  }  [CE]  illegal  start  of  type  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.VAR)return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  illegal  start  of  type	104	None	replace
1447	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [CE]  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.VAR)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.VAR)    {    return;    }    	non-compiled	[CE]  	104	None	replace
1448	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR.toString());  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR.toString());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR.toString());	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
1449	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_EXPR_ERROR);	  throw    new    AssertionFailedError(t,    n,    level);    	non-compiled	[CE]  	15	None	replace
1450	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  this));  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  this));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY,  this));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
1451	[BUG]  [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN));  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  node.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN));  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	node.replaceChild(n,  new  Node(Token.EMPTY,  PROTECTOR_FN));	  node.replaceChild(n,    new    Node(Token.EMPTY));    	non-compiled	[CE]  	64	None	replace
1452	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protocol);  [CE]  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protocol);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protocol);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
1453	[BUG]  [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [CE]  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	throw  new  AssertionFailedError(t,  n,  level,  USELESS_CODE_ERROR,  ancestorType,  protectionSideEffectFreeCode);	  throw    new    AssertionFailedError(t,    n,    level,    USELESS_CODE_ERROR,    ancestorType);    	non-compiled	[CE]  	8	None	replace
1454	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getQualifiedName());  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getQualifiedName());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getQualifiedName());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getString());    	non-compiled	[CE]  	130	None	replace
1455	[BUG]  [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  }	  ||    level    ==    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1456	[BUG]  [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [CE]  illegal  start  of  expression  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  >=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  >=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_ERROR)  {  throw  new  IllegalArgumentException( " ");	  ||    level    ==    USELESS_CODE_ERROR    &&    level!=    USELESS_CODE_ERROR)    {    throw    new    IllegalArgumentException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
1457	[BUG]  [BUGGY]  tryFail(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  tryFail(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	tryFail(t,  n,  NON_GLOBAL_EXPR_RESULT);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1458	[BUG]  [BUGGY]  TestLevel.test(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  TestLevel.test(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	TestLevel.test(t,  n,  NON_GLOBAL_EXPR_RESULT);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1459	[BUG]  [BUGGY]  TestLevel.test(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  TestLevel.test(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	TestLevel.test(t,  n,  NON_GLOBAL_EXPR_RESULT,  level);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1460	[BUG]  [BUGGY]  TestLevel.test(t,  n,  USELESS_CODE_ERROR);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  TestLevel.test(t,  n,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	TestLevel.test(t,  n,  USELESS_CODE_ERROR);	  test(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	111	None	replace
1461	[BUG]  [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [CE]  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  return  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	return  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    level);    	non-compiled	[CE]  	22	None	replace
1462	[BUG]  [BUGGY]  Throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [CE]  not  a  statement  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  Throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	Throw  new  AssertionFailedError(t,  n.getString(),  level,  USELESS_CODE_ERROR);	  throw    new    AssertionFailedError(t,    n.getString(),    level);    	non-compiled	[CE]  not  a  statement	22	None	replace
1463	[BUG]  [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;  [CE]  illegal  start  of  expression  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_RESULT)  {  return;	  ||    level    ==    USELESS_CODE_ERROR    ||    level    ==    USELESS_CODE_RESULT)    {    throw    new    IllegalStateException(   "   ");    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
1464	[BUG]  [BUGGY]  AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.log(t,  n,  level,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
1465	[BUG]  [BUGGY]  AssertionFailedError.checkState(n,  t,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.checkState(n,  t,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.checkState(n,  t,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
1466	[BUG]  [BUGGY]  AssertionFailedError.text(t,  n,  NON_GLOBAL_EXPR_RESULT);  [CE]  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  AssertionFailedError.text(t,  n,  NON_GLOBAL_EXPR_RESULT);  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	AssertionFailedError.text(t,  n,  NON_GLOBAL_EXPR_RESULT);	  AssertionFailedError.warning(t,    n,    NON_GLOBAL_EXPR_RESULT);    	non-compiled	[CE]  	17	None	replace
1467	[BUG]  [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()!=  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	58	None	replace
1468	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT  ||  n.hasChildren())  {  return;  }  [CE]  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT  ||  n.hasChildren())  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  n.getType()  ==  Token.EXPR_RESULT  ||  n.hasChildren())  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	58	None	replace
1469	[BUG]  [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [CE]  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	if(n.getType()  ==  Token.NAME  ||  parent.getType()  ==  Token.EXPR_RESULT)  {  return;  }	  if(n.getType()    ==    Token.NAME    ||    n.getType()    ==    Token.EXPR_RESULT)    {    return;    }    	non-compiled	[CE]  	58	None	replace
1470	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getNext());  [CE]  [FE]                                  junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getNext());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getNext());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getFirstChild());    	non-compiled	[CE]  	134	None	replace
1471	[BUG]  [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getChildCount());  [CE]  [FE]                                    junit.framework.AssertionFailedError:  There  should  be  one  warning      [CONTEXT]      public  void  visit(NodeTraversal  t,  Node  n,  Node  parent)  {      if  (n.isEmpty()  ||  n.isComma())  {      [BUGGY]  t.report(n,  level,  USELESS_CODE_ERROR,  n.getChildCount());  [BUGGY]      }  if  (parent  ==  null)  {  return;  }    if  (parent.getType()  ==  Token.COMMA)  {  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  visit  [RETURN_TYPE]  void  NodeTraversal  t  Node  n  Node  parent  [VARIABLES]  AbstractCompiler  compiler  boolean  isResultUsed  isSimpleOp  protectSideEffectFreeCode  NodeTraversal  t  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  an  gramps  n  parent  List  problemNodes  String  PROTECTOR_FN  msg  int  ancestorType  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.5773502691896258	91	91	1	replace	t.report(n,  level,  USELESS_CODE_ERROR,  n.getChildCount());	  t.report(n,    level,    USELESS_CODE_ERROR,    n.getFirstChild());    	non-compiled	[CE]  	134	None	replace
