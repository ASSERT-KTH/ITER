bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(!protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
2	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
3	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(!protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  &&  level  >=  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
4	[BUG]  [BUGGY]  if(!protectSideEffects)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(!protectSideEffects)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffects)  {	  if(!protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
5	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  level)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  level)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
6	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  level)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  level)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
7	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
8	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
9	[BUG]  [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
10	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  protectSideEffectFreeCode)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
11	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCodeSWITCH_ERROR!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  protectSideEffectFreeCodeSWITCH_ERROR!=  level)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCodeSWITCH_ERROR!=  level)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
12	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
13	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  NodeTraversal.traverse(compiler,  root,  level);  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  level);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
14	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                      junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  root,  new  StripProtection());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
15	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
16	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level);  [CE]  class,  interface,  or  enum  expected  [FE]                          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  NodeTraversal.traverse(compiler,  externs,  level);  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  level);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
17	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  externs,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
18	[BUG]  [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	junit.framework.AssertionFailedError:  NodeTraversal.traverse(compiler,  root,  new  StripProtection());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
19	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
20	[BUG]  [BUGGY]  if(protectSideEffects  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
21	[BUG]  [BUGGY]  if(protectSideEffects  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
22	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
23	[BUG]  [BUGGY]  if(protectSideEffects  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  &&  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
24	[BUG]  [BUGGY]  if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  &&  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
25	[BUG]  [BUGGY]  if(protectSideEffectFreeCode())  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode())  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode())  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
26	[BUG]  [BUGGY]  if(protectSideEffects()  &&  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects()  &&  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  &&  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
27	[BUG]  [BUGGY]  if(protectSideEffects()  &&  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects()  &&  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  &&  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
28	[BUG]  [BUGGY]  if(protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
29	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
30	[BUG]  [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
31	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode!=  level)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode!=  level)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
32	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode!=  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode!=  level)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode!=  level)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
33	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
34	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FreeCode)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
35	[BUG]  [BUGGY]  if(!protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(!protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(!protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {	  if(!protectSideEffectFreeCode)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	3	None	replace
36	[BUG]  [BUGGY]  if(protectSideEffects  ||  level  >=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects  ||  level  >=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects  ||  level  >=  USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
37	[BUG]  [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ==  level)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ==  level)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
38	[BUG]  [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ==  level)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ==  level)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  USELESS_CODE_ERROR  &&  protectSideEffectFreeCode  ==  level)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
39	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
40	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FreeCode)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
41	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
42	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  ||  protectSideEffects())  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  protectSideEffects())  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
43	[BUG]  [BUGGY]  if(protectSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffects()  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
44	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this);  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  NodeTraversal.traverse(compiler,  externs,  this);  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  this);	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
45	[BUG]  [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [CE]  class,  interface,  or  enum  expected  [FE]                    junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  NodeTraversal.traverse(compiler,  externs,  new  StripProtection());  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	NodeTraversal.traverse(compiler,  externs,  new  StripProtection());	      	non-compiled	[CE]  class,  interface,  or  enum  expected	6	None	replace
46	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]              junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
47	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
48	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	4	None	replace
49	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
50	[BUG]  [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level!=  CheckLevel.USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level!=  CheckLevel.USELESS_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
51	[BUG]  [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ==  CheckSideEffects.USE_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckSideEffects.USE_CODE_ERROR)  {	  if(protectSideEffects)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	1	None	replace
52	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
53	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  ==  USELESS_CODE_ERROR  ||  level  ==  USELESS_CODE_BLOCK)  {	  if(protectSideEffectFreeCode    &&    level    ==    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	8	None	replace
54	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
55	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level!=  USELESS_CODE_ERROR  &&  level!=  USELESS_CODE_FAILURE)  {	  if(protectSideEffectFreeCode    &&    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	7	None	replace
56	[BUG]  [BUGGY]  if(level  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ||  protectSideEffectFreeCode!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
57	[BUG]  [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]                  junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  >  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  >  USELESS_CODE_ERROR  ||  level!=  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    ||    level!=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	5	None	replace
58	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]        junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level  >  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
59	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  &&  level  >>  USELESS_CODE_ERROR)  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  &&  level  >>  USELESS_CODE_ERROR)  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  &&  level  >>  USELESS_CODE_ERROR)  {	  if(protectSideEffectFreeCode    &&    level    >=    USELESS_CODE_ERROR)    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	9	None	replace
60	[BUG]  [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]          junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(protectSideEffectFreeCode  ||  guardSideEffects())  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(protectSideEffectFreeCode  ||  guardSideEffects())  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
61	[BUG]  [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffects())  {  [CE]  class,  interface,  or  enum  expected  [FE]            junit.framework.AssertionFailedError:  There  should  be  one  warning    [CONTEXT]    public  void  process(Node  externs,  Node  root)  {  NodeTraversal.traverse(compiler,  root,  this);          [BUGGY]  if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffects())  {  [BUGGY]    protectSideEffects();  }  }  [CLASS]  CheckSideEffects  StripProtection  [METHOD]  process  [RETURN_TYPE]  void  Node  externs  Node  root  [VARIABLES]  AbstractCompiler  compiler  boolean  protectSideEffectFreeCode  DiagnosticType  USELESS_CODE_ERROR  CheckLevel  level  Node  externs  root  List  problemNodes  String  PROTECTOR_FN  	projects/Closure22/src/com/google/javascript/jscomp/CheckSideEffects.java	0.4082482904638631	73	73	1	replace	if(level  ==  CheckLevel.USELESS_CODE_ERROR  ||  protectSideEffects())  {	  if(protectSideEffects())    {    	non-compiled	[CE]  class,  interface,  or  enum  expected	2	None	replace
